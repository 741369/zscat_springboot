/*
Navicat MySQL Data Transfer

Source Server         : mysql
Source Server Version : 50717
Source Host           : localhost:3306
Source Database       : zsboot

Target Server Type    : MYSQL
Target Server Version : 50717
File Encoding         : 65001

Date: 2017-04-10 20:44:21
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for cms_article
-- ----------------------------
DROP TABLE IF EXISTS `cms_article`;
CREATE TABLE `cms_article` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `color` varchar(255) CHARACTER SET utf8 DEFAULT NULL COMMENT '颜色 文章  视频',
  `content` longtext CHARACTER SET utf8 COMMENT '内容',
  `createDate` date DEFAULT NULL,
  `description` varchar(255) CHARACTER SET utf8 DEFAULT NULL COMMENT '描述',
  `hits` int(11) DEFAULT '0' COMMENT '点击量',
  `htmlid` varchar(255) CHARACTER SET utf8 DEFAULT NULL COMMENT 'htmlId',
  `image` varchar(255) CHARACTER SET utf8 DEFAULT NULL COMMENT '图片',
  `isWord` int(11) DEFAULT '0' COMMENT 'isWord',
  `keywords` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `title` varchar(255) CHARACTER SET utf8 DEFAULT NULL COMMENT '标题',
  `weight` int(11) DEFAULT '0' COMMENT '权重',
  `CATEGORY_ID` bigint(20) DEFAULT NULL,
  `delFlag` int(11) NOT NULL DEFAULT '0',
  `updateDate` date DEFAULT NULL,
  `createby_id` bigint(20) DEFAULT NULL,
  `updateby_id` bigint(20) DEFAULT NULL,
  `moreimage` varchar(3600) COLLATE utf8_bin DEFAULT NULL,
  `CATEGORYNAME` varchar(255) COLLATE utf8_bin DEFAULT NULL,
  `siteid` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK935C9C00CA4E9944` (`CATEGORY_ID`) USING BTREE,
  KEY `FK935C9C00E80591EC` (`updateby_id`),
  KEY `FK935C9C00ECC85199` (`createby_id`)
) ENGINE=InnoDB AUTO_INCREMENT=142 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

-- ----------------------------
-- Records of cms_article
-- ----------------------------
INSERT INTO `cms_article` VALUES ('116', '1', '<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" style=\"width: 16px;\"><tbody style=\"padding: 0px; margin: 0px; list-style: none; border: 0px; outline: 0px;\"><tr style=\"padding: 0px; margin: 0px; list-style: none; border: 0px; outline: 0px;\" class=\"firstRow\"><td style=\"padding: 0px; margin: 0px; list-style: none; border: 0px; outline: 0px;\">第一天长沙——望城——长沙&nbsp;&nbsp;</td></tr><tr style=\"padding: 0px; margin: 0px; list-style: none; border: 0px; outline: 0px;\"><td style=\"padding: 0px; margin: 0px; list-style: none; border: 0px; outline: 0px; line-height: 20px;\">8:00在长沙阿波罗广场门口集合，8:30出发前往光明松树谷（车程约1个小时）；到达后游览松鼠谷。在饲养员的指导下您可以在松鼠大观园与松鼠零距离的接触，可以抚摸它们，给它们喂食，还可以让可爱的松鼠停在您的手掌上 肩膀上来个自拍；您还可以自费参观松鼠游乐园-水上充气乐园、松林漂移车、亲子小火车、旋转木马、碰碰车、蹦床、水果旋风等游乐项目；您还可以和您的小伙伴在空中萌鼠城堡来一次丛林大冒险；竹林爬网可以让小朋友尽情攀爬释放天性；户外高空拓展非常适合企业和团体进驻体验。之后乘车返回长沙，结束愉快的旅途！！！</td></tr></tbody></table><p><br/></p>', '2016-11-23', '第一天长沙——望城——长沙  8:00在长沙阿波罗广场门口集合，8:30出发前往光明松树谷（车程约1个小时）；到达后游览松鼠谷。在饲养员的指导下您可以在松鼠大观园与松鼠零距离的接触，可以抚摸它们，给它们喂食，还可以让可爱的松鼠停在您的手掌上 肩膀上来个自拍；您还可以自费参观松鼠游乐园-水上充气乐园、松林漂移车', '0', null, 'bf46b5b7-f5a9-4b89-be50-4487cece6ae1.jpg', '0', null, '光明松鼠谷主题乐园一日游', '1', '72', '0', null, null, null, '', '岳麓区', '2');
INSERT INTO `cms_article` VALUES ('117', '1', '<h2 style=\"padding: 0px; margin: 0px; font-size: 18px; color: rgb(54, 61, 64);\">基本信息</h2><ul class=\"base-info-list\" style=\"padding: 0px; margin: 0px; list-style: none;\"><li><p>楼盘地址</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">门头沟新城核心区，长安街西延长线南侧</p></li><li><p>物业类型</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">商办</p></li><li><p>建筑类型</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">商办</p></li><li><p>环&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;线</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">6环外，距6环2.1km</p></li><li><p>开&nbsp;&nbsp;发&nbsp;&nbsp;商</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">华润置地</p></li></ul><h2 style=\"padding: 0px; margin: 0px; font-size: 18px; color: rgb(54, 61, 64);\">销售信息</h2><ul class=\"base-info-list\" style=\"padding: 0px; margin: 0px; list-style: none;\"><li><p>开发商报价</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">37,000元/平米</p><p><a href=\"http://www.comjia.com/project/129/price.html\" looyu_bound=\"1\" style=\"cursor: pointer; color: rgb(0, 116, 193); text-decoration: none;\"><span class=\"ico ico-trend\" style=\"display: inline-block; font-size: 0px; line-height: 0; width: 18px; height: 16px; background-image: url(http://www.comjia.com/images/bg-icon.png); overflow: hidden; float: left; margin: 8px 5px 0px 0px; background-position: 0px -640px; background-repeat: no-repeat no-repeat;\">趋势</span>价格走势</a></p></li><li><p>销售状态</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">在售</p></li><li><p>优惠信息</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\"><br/></p></li><li><p>最新开盘</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">2016-08-27</p></li><li><p>最早交房</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">2016-12</p></li><li><p>楼盘户型</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">一居(4)</p><p><a href=\"http://www.comjia.com/project/129/ht.html\" looyu_bound=\"1\" style=\"cursor: pointer; color: rgb(0, 116, 193); text-decoration: none;\"><span class=\"ico ico-htype\" style=\"display: inline-block; font-size: 0px; line-height: 0; width: 18px; height: 16px; background-image: url(http://www.comjia.com/images/bg-icon.png); overflow: hidden; float: left; margin: 7px 5px 0px 0px; background-position: 0px -680px; background-repeat: no-repeat no-repeat;\">趋势</span>户型分析</a></p></li><li><p>产权年限</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">50年</p></li><li><p>剩余产权年限</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">47年</p></li></ul><h2 style=\"padding: 0px; margin: 0px; font-size: 18px; color: rgb(54, 61, 64);\">小区详情</h2><ul class=\"base-info-list\" style=\"padding: 0px; margin: 0px; list-style: none;\"><li><p>物业公司</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">华润置地（北京）物业管理有限公司</p></li><li><p>物业费用</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">3.98元/m²/月</p><p><span class=\"ico ico-tips\" style=\"display: inline-block; font-size: 0px; line-height: 0; width: 16px; height: 16px; background-image: url(http://www.comjia.com/images/bg-icon.png); overflow: hidden; cursor: pointer; float: left; margin-top: 8px; background-position: 0px -600px; background-repeat: no-repeat no-repeat;\"></span></p></li><li><p>水电燃气</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">商水商电</p><p><span class=\"ico ico-tips\" style=\"display: inline-block; font-size: 0px; line-height: 0; width: 16px; height: 16px; background-image: url(http://www.comjia.com/images/bg-icon.png); overflow: hidden; cursor: pointer; float: left; margin-top: 8px; background-position: 0px -600px; background-repeat: no-repeat no-repeat;\"></span></p></li><li><p>供暖方式</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">集中供暖</p></li><li><p>绿化率</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">30%</p></li><li><p>车位情况</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">1:0.4</p></li><li><p>容积率</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">4</p><p><span class=\"ico ico-tips\" style=\"display: inline-block; font-size: 0px; line-height: 0; width: 16px; height: 16px; background-image: url(http://www.comjia.com/images/bg-icon.png); overflow: hidden; cursor: pointer; float: left; margin-top: 8px; background-position: 0px -600px; background-repeat: no-repeat no-repeat;\"></span></p></li><li><p>装修状况</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">毛坯</p></li><li><p>楼栋信息</p><p class=\"date\" style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">2016年11月23日：</p><p><br/></p><p class=\"date\" style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">1#：21层，4梯12户，238户</p><p><br/></p><p class=\"date\" style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">4#：20层，3梯14户，264户</p></li></ul><p><br/></p>', '2016-11-23', '基本信息楼盘地址门头沟新城核心区，长安街西延长线南侧物业类型商办建筑类型商办环       线6环外，距6环2.1km开  发  商华润置地销售信息开发商报价37,000元/平米趋势价格走势销售状态在售优惠信息最新开盘2016-08-27最早交房2016-12楼盘户型一居(4)趋势户型分析产权年限50年剩余产', '0', null, '2d4ad9af-7cac-4853-abf4-f3a546d47113.jpg', '0', null, '华润悦景湾', '1', '63', '0', null, null, null, '', '昌平区', '1');
INSERT INTO `cms_article` VALUES ('118', '1', '<h2 style=\"padding: 0px; margin: 0px; font-size: 18px; color: rgb(54, 61, 64);\">基本信息</h2><ul class=\"base-info-list\" style=\"padding: 0px; margin: 0px; list-style: none;\"><li><p>楼盘地址</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">房山良乡大学城北站</p></li><li><p>物业类型</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">商办</p></li><li><p>建筑类型</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">商办</p></li><li><p>环&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;线</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">5环至6环之间，距5环8km，距6环5.5km</p></li><li><p>开&nbsp;&nbsp;发&nbsp;&nbsp;商</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">绿地集团</p></li></ul><h2 style=\"padding: 0px; margin: 0px; font-size: 18px; color: rgb(54, 61, 64);\">销售信息</h2><ul class=\"base-info-list\" style=\"padding: 0px; margin: 0px; list-style: none;\"><li><p>开发商报价</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">25,000元/平米</p><p><a href=\"http://www.comjia.com/project/20000706/price.html\" looyu_bound=\"1\" style=\"cursor: pointer; color: rgb(0, 116, 193); text-decoration: none;\"><span class=\"ico ico-trend\" style=\"display: inline-block; font-size: 0px; line-height: 0; width: 18px; height: 16px; background-image: url(http://www.comjia.com/images/bg-icon.png); overflow: hidden; float: left; margin: 8px 5px 0px 0px; background-position: 0px -640px; background-repeat: no-repeat no-repeat;\">趋势</span>价格走势</a></p></li><li><p>销售状态</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">在售</p></li><li><p>优惠信息</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">3万抵6万，全款98折，贷款99折</p></li><li><p>最新开盘</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">2016-06-26</p></li><li><p>最早交房</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">2017-06</p></li><li><p>楼盘户型</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">不限(4)</p><p><a href=\"http://www.comjia.com/project/20000706/ht.html\" looyu_bound=\"1\" style=\"cursor: pointer; color: rgb(0, 116, 193); text-decoration: none;\"><span class=\"ico ico-htype\" style=\"display: inline-block; font-size: 0px; line-height: 0; width: 18px; height: 16px; background-image: url(http://www.comjia.com/images/bg-icon.png); overflow: hidden; float: left; margin: 7px 5px 0px 0px; background-position: 0px -680px; background-repeat: no-repeat no-repeat;\">趋势</span>户型分析</a></p></li><li><p>产权年限</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">50年</p></li><li><p>剩余产权年限</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">46年</p></li></ul><h2 style=\"padding: 0px; margin: 0px; font-size: 18px; color: rgb(54, 61, 64);\">小区详情</h2><ul class=\"base-info-list\" style=\"padding: 0px; margin: 0px; list-style: none;\"><li><p>物业公司</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">绿地物业</p></li><li><p>物业费用</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">6元/m²/月</p><p><span class=\"ico ico-tips\" style=\"display: inline-block; font-size: 0px; line-height: 0; width: 16px; height: 16px; background-image: url(http://www.comjia.com/images/bg-icon.png); overflow: hidden; cursor: pointer; float: left; margin-top: 8px; background-position: 0px -600px; background-repeat: no-repeat no-repeat;\"></span></p></li><li><p>水电燃气</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">商水商电</p><p><span class=\"ico ico-tips\" style=\"display: inline-block; font-size: 0px; line-height: 0; width: 16px; height: 16px; background-image: url(http://www.comjia.com/images/bg-icon.png); overflow: hidden; cursor: pointer; float: left; margin-top: 8px; background-position: 0px -600px; background-repeat: no-repeat no-repeat;\"></span></p></li><li><p>供暖方式</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\"><br/></p></li><li><p>绿化率</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">35%</p></li><li><p>车位情况</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">1：1.5</p></li><li><p>容积率</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">2.5</p><p><span class=\"ico ico-tips\" style=\"display: inline-block; font-size: 0px; line-height: 0; width: 16px; height: 16px; background-image: url(http://www.comjia.com/images/bg-icon.png); overflow: hidden; cursor: pointer; float: left; margin-top: 8px; background-position: 0px -600px; background-repeat: no-repeat no-repeat;\"></span></p></li><li><p>装修状况</p><p style=\"padding: 0px; margin-top: 0px; margin-right: 15px; margin-bottom: 0px; font-size: 14px; overflow: hidden; float: left; color: rgb(102, 102, 102);\">毛坯</p></li></ul><p><br/></p>', '2016-11-23', '基本信息楼盘地址房山良乡大学城北站物业类型商办建筑类型商办环       线5环至6环之间，距5环8km，距6环5.5km开  发  商绿地集团销售信息开发商报价25,000元/平米趋势价格走势销售状态在售优惠信息3万抵6万，全款98折，贷款99折最新开盘2016-06-26最早交房2017-06楼盘户型不限', '0', null, '474ab9a6-0b37-407c-af2f-a84e7c582607.jpg', '0', null, '绿地悦公馆', '1', '62', '0', null, null, null, '', '海淀区', '1');
INSERT INTO `cms_article` VALUES ('119', '1', '<p>楼盘信息</p><ul style=\"margin: 0px; padding: 0px; list-style: none;\"><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">楼盘名称：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">家和苑</p></li><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">占地面积：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">33302平米</p></li><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">所属区域：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">岳麓 枫林一路</p></li><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">车位数量：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">454</p></li><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">物业类型：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">住宅</p></li><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">容<span class=\"gap-hfword\" style=\"display: inline-block; overflow: hidden; width: 0.5em;\"></span>积<span class=\"gap-hfword\" style=\"display: inline-block; overflow: hidden; width: 0.5em;\"></span>率：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">3.29</p></li><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">装修情况：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">暂无数据</p></li><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">绿<span class=\"gap-hfword\" style=\"display: inline-block; overflow: hidden; width: 0.5em;\"></span>化<span class=\"gap-hfword\" style=\"display: inline-block; overflow: hidden; width: 0.5em;\"></span>率：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">40%</p></li><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">平均房价：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">5800 元/m²</p></li><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">物业公司：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">长沙市美景物业管理有限公司</p></li><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">开<span class=\"gap-hfword\" style=\"display: inline-block; overflow: hidden; width: 0.5em;\"></span>发<span class=\"gap-hfword\" style=\"display: inline-block; overflow: hidden; width: 0.5em;\"></span>商：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">湖南世锦置业有限公司</p></li><li><span class=\"field fl\" style=\"float: left; color: rgb(120, 120, 120); display: block; padding: 0px 10px 0px 0px;\">停<span class=\"gap-hfword\" style=\"display: inline-block; overflow: hidden; width: 0.5em;\"></span>车<span class=\"gap-hfword\" style=\"display: inline-block; overflow: hidden; width: 0.5em;\"></span>费：</span><p class=\"text fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 233.296875px; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">130.0</p></li></ul><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><img src=\"http://image.zscat.com/upload1/20161123/1479902752678.jpg\" style=\"float:none;\" title=\"CvtcKVgpfxOAY2z6AAFXwez171U255.jpg\"/></p><p><img src=\"http://image.zscat.com/upload1/20161123/1479902755869.jpg\" style=\"float:none;\" title=\"i (4).jpg\"/></p><p><img src=\"http://image.zscat.com/upload1/20161123/1479902759842.jpg\" style=\"float:none;\" title=\"i (5).jpg\"/></p><p><br/></p>', '2016-11-23', '楼盘信息楼盘名称：家和苑占地面积：33302平米所属区域：岳麓 枫林一路车位数量：454物业类型：住宅容积率：3.29装修情况：暂无数据绿化率：40%平均房价：5800 元/m²物业公司：长沙市美景物业管理有限公司开发商：湖南世锦置业有限公司停车费：130.0', '0', null, '43a76d69-f474-4449-a81e-f5a5484626dc.jpg', '0', null, '家和苑', '1', '66', '0', null, null, null, 'http://image.zscat.com/upload1/20161123/1479902752678.jpg,http://image.zscat.com/upload1/20161123/1479902755869.jpg,http://image.zscat.com/upload1/20161123/1479902759842.jpg,', '岳麓区', '1');
INSERT INTO `cms_article` VALUES ('120', '1', '<ul style=\"margin: 0px; padding: 0px; list-style: none; color: rgb(46, 46, 46); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, Tahoma, &#39;Microsoft YaHei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 18px; white-space: normal; background-color: rgb(255, 255, 255);\"><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">11月16日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p>保利西海岸业态涵盖超高层住宅、写字楼、soho公寓、大型集中商业及滨江商业街。楼盘目前在售93-1785平临街商铺，均价2.5-5万/平。</p></li><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">10月13日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p class=\"fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left;\"><a href=\"http://changsha.qfang.com/newhouse/info/detail/56457\" target=\"_blank\" style=\"color: rgb(51, 51, 51); text-decoration: none; outline: none; transition: color 0.3s, background-color 0.3s, border-color 0.3s; -webkit-transition: color 0.3s, background-color 0.3s, border-color 0.3s;\"><img width=\"150\" height=\"112\" src=\"http://yun200.qfangimg.com/group1/150x112/M00/20/FC/CvtcKVf_Jk2AZ29VAAEPCcf6aOA689.jpg\" style=\"border: none; display: inline-block; vertical-align: top;\"/></a></p><p class=\"title\" style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; font-size: 16px; font-weight: bold; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\"><a href=\"http://changsha.qfang.com/newhouse/info/detail/56457\" target=\"_blank\" style=\"color: rgb(51, 51, 51); text-decoration: none; outline: none; transition: color 0.3s, background-color 0.3s, border-color 0.3s; -webkit-transition: color 0.3s, background-color 0.3s, border-color 0.3s;\">保利西海岸 滨江新城城市综合体</a></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px;\">保利西海岸，位于潇湘大道与岳麓大道交汇处西南角，地处大河西先导区门户、滨江新城桥头堡，占据长沙滨江中心地段，具备地理位置优势。 保利西海岸，临近三座跨江大桥、一条过江隧道、长株潭城际轻轨、以及规划中的桐梓坡路过江隧道与地铁4、6号线，城市交通便利，可快速通达星城各个角落。</p></li><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">08月15日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p>保利西海岸A区、B区均在售，B区可售房源已不多，目前主推A区房源。A区在售A1栋、A2栋，户型有平层和复式楼两种。平层房源：130平3+1房，160平5房，折后均价11000-12000元/平。复式房源：131平、137平，均为3+1房设计，折后均价12000-14000元/平。B区在售B3栋、B5栋、B6栋，户型有平层和复式楼两种。房源面积约140平，折后均价8000元/平。购房可享：交1万抵3 &nbsp;</p></li></ul><p><br/></p>', '2016-11-23', '11月16日2016年保利西海岸业态涵盖超高层住宅、写字楼、soho公寓、大型集中商业及滨江商业街。楼盘目前在售93-1785平临街商铺，均价2.5-5万/平。10月13日2016年保利西海岸 滨江新城城市综合体保利西海岸，位于潇湘大道与岳麓大道交汇处西南角，地处大河西先导区门户、滨江新城桥头堡，占据长沙滨江', '0', null, 'a6c2b855-b791-4f3e-9f6d-c3f6a9d11ffd.jpg', '0', null, '保利西海岸', '1', '66', '0', null, null, null, 'http://yun200.qfangimg.com/group1/150x112/M00/20/FC/CvtcKVf_Jk2AZ29VAAEPCcf6aOA689.jpg,', '岳麓区', '1');
INSERT INTO `cms_article` VALUES ('121', '2', '<p>楼盘动态</p><ul style=\"margin: 0px; padding: 0px; list-style: none;\"><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">08月02日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p>五矿麓谷科技产业园在售B4、B5栋1210-1280平厂房，均价3800元/平。另在售C5、C6、C9栋1980、2460平企业独栋，均价5800元/平。全款享98折，按揭享99折。</p></li><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">04月18日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p>&nbsp; 五矿麓谷科技产业园在售B4、B5栋1210-1280平厂房，均价3800元/平。另在售C5、C6、C9栋1980、2460平企业独栋，均价5800元/平。全款享98折，按揭享99折。</p></li><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">03月25日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p>&nbsp; 五矿麓谷科技产业园在售B4、B5栋1210-1280平厂房，均价3800元/平。另在售C5、C6、C9栋1980、2460平企业独栋，均价5800元/平。全款享98折，按揭享99折。</p></li></ul><p><br/></p>', '2016-11-23', '楼盘动态08月02日2016年五矿麓谷科技产业园在售B4、B5栋1210-1280平厂房，均价3800元/平。另在售C5、C6、C9栋1980、2460平企业独栋，均价5800元/平。全款享98折，按揭享99折。04月18日2016年  五矿麓谷科技产业园在售B4、B5栋1210-1280平厂房，均价3800', '0', null, 'a1f86560-8c38-471a-90b6-290c28f5ec70.jpg', '0', null, '五矿麓谷科技产业园', '1', '66', '0', null, null, null, '', '岳麓区', '1');
INSERT INTO `cms_article` VALUES ('122', '3', '<ul style=\"margin: 0px; padding: 0px; list-style: none; color: rgb(46, 46, 46); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, Tahoma, &#39;Microsoft YaHei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 18px; white-space: normal; background-color: rgb(255, 255, 255);\"><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">11月07日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p>洋湖时代广场现主要在售17#LOFT公寓，户型面积为35、39、62平，均价6600元/平。另在售少量住宅，均价8500元/平。</p></li><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">10月25日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p class=\"fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left;\"><a href=\"http://changsha.qfang.com/newhouse/info/detail/57061\" target=\"_blank\" style=\"color: rgb(51, 51, 51); text-decoration: none; outline: none; transition: color 0.3s, background-color 0.3s, border-color 0.3s; -webkit-transition: color 0.3s, background-color 0.3s, border-color 0.3s;\"><img width=\"150\" height=\"112\" src=\"http://yun200.qfangimg.com/group1/150x112/M00/22/DD/CvtcKlgOyPGAK1csAAFGcNYHDlQ713.jpg\" style=\"border: none; display: inline-block; vertical-align: top;\"/></a></p><p class=\"title\" style=\"margin-top: 0px; margin-bottom: 10px; padding: 0px; font-size: 16px; font-weight: bold; overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\"><a href=\"http://changsha.qfang.com/newhouse/info/detail/57061\" target=\"_blank\" style=\"color: rgb(51, 51, 51); text-decoration: none; outline: none; transition: color 0.3s, background-color 0.3s, border-color 0.3s; -webkit-transition: color 0.3s, background-color 0.3s, border-color 0.3s;\">洋湖时代广场 洋湖板块杰出之作</a></p><p class=\"text\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px;\">洋湖时代广场（曾用名：洋湖style）位于洋湖板块，学士路与象咀路交汇处的东南角，项目东临洋湖湿地公园， 洋湖时代广场周边呈“三纵三横三桥”格局，其中由西往东的纵向道路有象咀路、车塘河路、含浦大道，三横由北往南分别为云栖路、学士路、洋湖大道，三桥由北往南分别是猴子石大桥、湘府路大桥、黑石铺大桥，项目本身是一个集住宅、写字楼、酒店于一体的区域及商业综合体。</p></li><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">10月24日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p>洋湖时代广场目前在售17号栋公寓，面积为33-62平，均价为6200元/平。另在售11、12号栋住宅，93平户型剩余5户，价格为8200元/平，96平户型剩余2户，价格为8500元/平，132平户型剩余1户，价格为8500元/平。</p></li></ul><p><br/></p>', '2016-11-23', '11月07日2016年洋湖时代广场现主要在售17#LOFT公寓，户型面积为35、39、62平，均价6600元/平。另在售少量住宅，均价8500元/平。10月25日2016年洋湖时代广场 洋湖板块杰出之作洋湖时代广场（曾用名：洋湖style）位于洋湖板块，学士路与象咀路交汇处的东南角，项目东临洋湖湿地公园， 洋', '0', null, '1a445a0f-06f9-4fbd-a46f-abab9ba4b5c6.jpg', '0', null, '洋湖时代广场', '1', '66', '0', null, null, null, 'http://yun200.qfangimg.com/group1/150x112/M00/22/DD/CvtcKlgOyPGAK1csAAFGcNYHDlQ713.jpg,', '岳麓区', '1');
INSERT INTO `cms_article` VALUES ('123', '1', '<ul style=\"margin: 0px; padding: 0px; list-style: none; color: rgb(46, 46, 46); font-family: &#39;Helvetica Neue&#39;, Helvetica, Arial, Tahoma, &#39;Microsoft YaHei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 18px; white-space: normal; background-color: rgb(255, 255, 255);\"><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">11月17日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p>才子嘉都现主推公寓和住宅。其中14#户型面积为公寓50-70平，在售公寓位于4楼、5楼和6楼。23#住宅户型面积为75平、109平，在售房源位于3楼、4楼、18楼和顶楼，折后均价7800-7900元/平。</p></li><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">10月20日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p>才子嘉都现主推14#公寓，在售公寓位于4楼、5楼和6楼50-60平，均价7600-7700元/平。另23#住宅在售，户型面积为75平、109平，在售房源位于3楼和顶楼，均价8300元/平。</p></li><li><p class=\"date fl\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; float: left; width: 72px; text-align: right;\"><span style=\"font-size: 16px;\">09月23日</span><span style=\"color: rgb(204, 204, 204);\">2016年</span></p><p><span class=\"icons_saledetails node-circle\" style=\"width: 18px; height: 18px; display: block; font-size: 0px; line-height: 0; overflow: hidden; background-image: url(http://changsha.qfang.com/themes/default/images/frontend/details/icons_saledetails.gif); position: absolute; left: -10px; top: 0px; background-position: -256px -305px; background-repeat: no-repeat no-repeat;\"></span></p><p>才子嘉都现均价6000-7000元/平。现仅顶楼有售，10#有66平公寓，15、16、22#有96、126平在售。</p></li></ul><p><br/></p>', '2016-11-23', '11月17日2016年才子嘉都现主推公寓和住宅。其中14#户型面积为公寓50-70平，在售公寓位于4楼、5楼和6楼。23#住宅户型面积为75平、109平，在售房源位于3楼、4楼、18楼和顶楼，折后均价7800-7900元/平。10月20日2016年才子嘉都现主推14#公寓，在售公寓位于4楼、5楼和6楼50-6', '0', null, 'd6b34ce2-5db6-4831-ac54-3323e8b03090.jpg', '0', null, '才子嘉都', '1', '65', '0', null, null, null, '', '天心区', '1');
INSERT INTO `cms_article` VALUES ('124', '1', '<p class=\"main-desc-p\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; line-height: 20px; color: rgb(102, 102, 102);\"><span class=\"main-desc-tip\" style=\"margin: 0px; padding: 0px; list-style: none; font-weight: 700;\">大家印象：</span>&nbsp;毗临湘江、文物古迹众多的岳麓山，是南岳衡山七十二峰之一，有一份古老的墨香，是一个寻幽访古的好去处。&nbsp;<a class=\"click-more-info\" style=\"margin: 0px; padding: 0px; list-style: none; background-color: transparent; color: rgb(0, 145, 217); cursor: pointer;\">[详细简介]</a></p><p><span class=\"main-besttime\" style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block; color: rgb(102, 102, 102);\"><span style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 18px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); font-family: globel-iconfont !important;\"></span>到达与离开：岳麓山景区位于长沙市...</span></span><span class=\"main-besttime\" style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block; color: rgb(102, 102, 102);\"><span style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 18px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); font-family: globel-iconfont !important;\"></span>景点类型：山峰</span></span><span class=\"main-besttime\" style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block; color: rgb(102, 102, 102);\"><span style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 18px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); font-family: globel-iconfont !important;\"></span>最佳季节：四季皆宜。 春天的岳...</span></span><span class=\"main-dcnt\" style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block; color: rgb(102, 102, 102);\"><span style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 18px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); font-family: globel-iconfont !important;\"></span>建议游玩：4-6小时</span></span></p><p><br/></p><p><span class=\"title\" style=\"margin: 0px 10px 0px 0px; padding: 0px; list-style: none; font-size: 30px; font-family: &#39;microsoft yahei&#39;; color: rgb(17, 17, 17); display: inline-block; vertical-align: top;\">特价门票</span></p><ul style=\"margin: 0px; padding: 0px; list-style: none;\"><li><span class=\"ticket-td ticket-index\" style=\"margin: 23px 13px 0px 11px; padding: 0px; list-style: none; vertical-align: top; float: left; position: relative; display: inline-block; width: 15px; height: 15px; border-top-left-radius: 50%; border-top-right-radius: 50%; border-bottom-right-radius: 50%; border-bottom-left-radius: 50%; border: 1px solid rgb(255, 142, 12); color: rgb(255, 142, 12); line-height: 1;\"><span style=\"margin: 0px; padding: 0px; list-style: none; display: inline-block; width: 15px; height: 15px; font-size: 10px; line-height: 16px; text-align: center; font-family: Arial; -webkit-transform: scale(0.8333);\">01</span></span><p><span class=\"name\" style=\"margin: 0px 0px 7px; padding: 0px; list-style: none; display: inline-block;\"><span class=\"clicklog\" clicklog=\"{&quot;pos&quot;:&quot;ticketBookTitle&quot;,&quot;locate&quot;:&quot;area-main&quot;}\" target=\"_blank\" pb-id=\"ticketMainBookTitle_ctripticket2\" pb-index=\"0\" pb-attr-tickettype=\"ctripticket2\" style=\"margin: 0px; padding: 0px; list-style: none; font-size: 14px; line-height: 24px; font-family: &#39;microsoft yahei&#39;; cursor: pointer; display: inline; overflow: hidden;\">长沙岳麓山索道成人票（下行）</span><span class=\"globel-iconfont\" style=\"margin: 0px 0px 0px -1em; padding: 0px; list-style: none; font-size: 20px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; display: inline-block; vertical-align: top; line-height: 1.25; cursor: pointer; position: relative; left: 1em; font-family: globel-iconfont !important;\"></span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; cursor: pointer;\"><span class=\"bao-text\" style=\"margin: 0px; padding: 0px; list-style: none; display: inline-block; float: left; width: 170px;\"><span class=\"globel-iconfont\" style=\"margin: 0px; padding: 0px; list-style: none; font-size: 24px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; display: inline-block; width: 24px; height: 24px; vertical-align: top; cursor: pointer; color: rgb(90, 206, 178); font-family: globel-iconfont !important;\"></span>&nbsp;<span style=\"margin: 0px; padding: 0px; list-style: none; width: 140px; display: inline-block;\">当天15:00前可预订</span></span></p><p><span class=\"price-container\" style=\"margin: 6px 0px 0px; padding: 0px; list-style: none; display: inline-block;\"><span class=\"price-now\" style=\"margin: 0px; padding: 0px; list-style: none; color: rgb(255, 139, 6); font-size: 18px; line-height: 1; font-family: Arial;\"><span class=\"icon-rmb\" style=\"margin: 0px; padding: 0px; list-style: none; font-weight: 700; letter-spacing: -2px;\">￥</span>25</span></span><a href=\"https://lvyou.baidu.com/plan/ajax/ur?qt=sceneticket&src=ctripticket2&url=http%3A%2F%2Flvyou.baidu.com%2Fbusiness%2Fticket%2Forderfill%2Fqt%3Dorder_input%26partner_id%3Dctripticket2%26scope_id%3D9011%26ticket_id%3D2461666%26scope_name%3D%26order_from%3Dlvyou%26is_adult_ticket%3D0%26is_into_scope%3D0%26from%3Dpc%26uid%3D\" clicklog=\"{&quot;pos&quot;:&quot;ticketBookBtn&quot;,&quot;locate&quot;:&quot;area-main&quot;,&quot;refer&quot;:&quot;jingdian&quot;}\" target=\"_blank\" class=\"btn-booking clicklog\" pb-id=\"ticketMainBookBtnctripticket2\" pb-index=\"0\" pb-attr-tickettype=\"ctripticket2\" data-iscloseloop=\"1\" style=\"margin: 0px 22px 0px 0px; padding: 0px 20px; list-style: none; text-decoration: none; background-color: rgb(255, 139, 6); color: rgb(255, 255, 255); display: inline-block; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-size: 12px; line-height: 30px; font-family: &#39;microsoft yahei&#39;; text-align: center; float: right; cursor: pointer;\">预订</a></p></li><li><span class=\"ticket-td ticket-index\" style=\"margin: 23px 13px 0px 11px; padding: 0px; list-style: none; vertical-align: top; float: left; position: relative; display: inline-block; width: 15px; height: 15px; border-top-left-radius: 50%; border-top-right-radius: 50%; border-bottom-right-radius: 50%; border-bottom-left-radius: 50%; border: 1px solid rgb(255, 142, 12); color: rgb(255, 142, 12); line-height: 1;\"><span style=\"margin: 0px; padding: 0px; list-style: none; display: inline-block; width: 15px; height: 15px; font-size: 10px; line-height: 16px; text-align: center; font-family: Arial; -webkit-transform: scale(0.8333);\">02</span></span><p><span class=\"name\" style=\"margin: 0px 0px 7px; padding: 0px; list-style: none; display: inline-block;\"><span class=\"clicklog\" clicklog=\"{&quot;pos&quot;:&quot;ticketBookTitle&quot;,&quot;locate&quot;:&quot;area-main&quot;}\" target=\"_blank\" pb-id=\"ticketMainBookTitle_ctripticket2\" pb-index=\"1\" pb-attr-tickettype=\"ctripticket2\" style=\"margin: 0px; padding: 0px; list-style: none; font-size: 14px; line-height: 24px; font-family: &#39;microsoft yahei&#39;; cursor: pointer; display: inline; overflow: hidden;\">长沙岳麓山索道成人票（上行）</span><span class=\"globel-iconfont\" style=\"margin: 0px 0px 0px -1em; padding: 0px; list-style: none; font-size: 20px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; display: inline-block; vertical-align: top; line-height: 1.25; cursor: pointer; position: relative; left: 1em; font-family: globel-iconfont !important;\"></span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; cursor: pointer;\"><span class=\"bao-text\" style=\"margin: 0px; padding: 0px; list-style: none; display: inline-block; float: left; width: 170px;\"><span class=\"globel-iconfont\" style=\"margin: 0px; padding: 0px; list-style: none; font-size: 24px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; display: inline-block; width: 24px; height: 24px; vertical-align: top; cursor: pointer; color: rgb(90, 206, 178); font-family: globel-iconfont !important;\"></span>&nbsp;<span style=\"margin: 0px; padding: 0px; list-style: none; width: 140px; display: inline-block;\">当天15:00前可预订</span></span></p><p><span class=\"price-container\" style=\"margin: 6px 0px 0px; padding: 0px; list-style: none; display: inline-block;\"><span class=\"price-now\" style=\"margin: 0px; padding: 0px; list-style: none; color: rgb(255, 139, 6); font-size: 18px; line-height: 1; font-family: Arial;\"><span class=\"icon-rmb\" style=\"margin: 0px; padding: 0px; list-style: none; font-weight: 700; letter-spacing: -2px;\">￥</span>30</span></span><a href=\"https://lvyou.baidu.com/plan/ajax/ur?qt=sceneticket&src=ctripticket2&url=http%3A%2F%2Flvyou.baidu.com%2Fbusiness%2Fticket%2Forderfill%2Fqt%3Dorder_input%26partner_id%3Dctripticket2%26scope_id%3D9011%26ticket_id%3D1665055%26scope_name%3D%26order_from%3Dlvyou%26is_adult_ticket%3D0%26is_into_scope%3D0%26from%3Dpc%26uid%3D\" clicklog=\"{&quot;pos&quot;:&quot;ticketBookBtn&quot;,&quot;locate&quot;:&quot;area-main&quot;,&quot;refer&quot;:&quot;jingdian&quot;}\" target=\"_blank\" class=\"btn-booking clicklog\" pb-id=\"ticketMainBookBtnctripticket2\" pb-index=\"1\" pb-attr-tickettype=\"ctripticket2\" data-iscloseloop=\"1\" style=\"margin: 0px 22px 0px 0px; padding: 0px 20px; list-style: none; text-decoration: none; background-color: rgb(255, 139, 6); color: rgb(255, 255, 255); display: inline-block; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-size: 12px; line-height: 30px; font-family: &#39;microsoft yahei&#39;; text-align: center; float: right; cursor: pointer;\">预订</a></p></li><li><span class=\"ticket-td ticket-index\" style=\"margin: 23px 13px 0px 11px; padding: 0px; list-style: none; vertical-align: top; float: left; position: relative; display: inline-block; width: 15px; height: 15px; border-top-left-radius: 50%; border-top-right-radius: 50%; border-bottom-right-radius: 50%; border-bottom-left-radius: 50%; border: 1px solid rgb(255, 142, 12); color: rgb(255, 142, 12); line-height: 1;\"><span style=\"margin: 0px; padding: 0px; list-style: none; display: inline-block; width: 15px; height: 15px; font-size: 10px; line-height: 16px; text-align: center; font-family: Arial; -webkit-transform: scale(0.8333);\">03</span></span><p><span class=\"name\" style=\"margin: 0px 0px 7px; padding: 0px; list-style: none; display: inline-block;\"><span class=\"clicklog\" clicklog=\"{&quot;pos&quot;:&quot;ticketBookTitle&quot;,&quot;locate&quot;:&quot;area-main&quot;}\" target=\"_blank\" pb-id=\"ticketMainBookTitle_ctripticket2\" pb-index=\"2\" pb-attr-tickettype=\"ctripticket2\" style=\"margin: 0px; padding: 0px; list-style: none; font-size: 14px; line-height: 24px; font-family: &#39;microsoft yahei&#39;; cursor: pointer; display: inline; overflow: hidden;\">长沙岳麓山索道成人票（往返）</span><span class=\"globel-iconfont\" style=\"margin: 0px 0px 0px -1em; padding: 0px; list-style: none; font-size: 20px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; display: inline-block; vertical-align: top; line-height: 1.25; cursor: pointer; position: relative; left: 1em; font-family: globel-iconfont !important;\"></span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; cursor: pointer;\"><span class=\"bao-text\" style=\"margin: 0px; padding: 0px; list-style: none; display: inline-block; float: left; width: 170px;\"><span class=\"globel-iconfont\" style=\"margin: 0px; padding: 0px; list-style: none; font-size: 24px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; display: inline-block; width: 24px; height: 24px; vertical-align: top; cursor: pointer; color: rgb(90, 206, 178); font-family: globel-iconfont !important;\"></span>&nbsp;<span style=\"margin: 0px; padding: 0px; list-style: none; width: 140px; display: inline-block;\">当天14:00前可预订</span></span></p><p><span class=\"price-container\" style=\"margin: 6px 0px 0px; padding: 0px; list-style: none; display: inline-block;\"><span class=\"price-now\" style=\"margin: 0px; padding: 0px; list-style: none; color: rgb(255, 139, 6); font-size: 18px; line-height: 1; font-family: Arial;\"><span class=\"icon-rmb\" style=\"margin: 0px; padding: 0px; list-style: none; font-weight: 700; letter-spacing: -2px;\">￥</span>50</span></span><a href=\"https://lvyou.baidu.com/plan/ajax/ur?qt=sceneticket&src=ctripticket2&url=http%3A%2F%2Flvyou.baidu.com%2Fbusiness%2Fticket%2Forderfill%2Fqt%3Dorder_input%26partner_id%3Dctripticket2%26scope_id%3D9011%26ticket_id%3D2461694%26scope_name%3D%26order_from%3Dlvyou%26is_adult_ticket%3D0%26is_into_scope%3D0%26from%3Dpc%26uid%3D\" clicklog=\"{&quot;pos&quot;:&quot;ticketBookBtn&quot;,&quot;locate&quot;:&quot;area-main&quot;,&quot;refer&quot;:&quot;jingdian&quot;}\" target=\"_blank\" class=\"btn-booking clicklog\" pb-id=\"ticketMainBookBtnctripticket2\" pb-index=\"2\" pb-attr-tickettype=\"ctripticket2\" data-iscloseloop=\"1\" style=\"margin: 0px 22px 0px 0px; padding: 0px 20px; list-style: none; text-decoration: none; background-color: rgb(255, 139, 6); color: rgb(255, 255, 255); display: inline-block; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-size: 12px; line-height: 30px; font-family: &#39;microsoft yahei&#39;; text-align: center; float: right; cursor: pointer;\">预订</a></p></li></ul><p><br/></p>', '2016-11-23', '大家印象： 毗临湘江、文物古迹众多的岳麓山，是南岳衡山七十二峰之一，有一份古老的墨香，是一个寻幽访古的好去处。 [详细简介]到达与离开：岳麓山景区位于长沙市...景点类型：山峰最佳季节：四季皆宜。 春天的岳...建议游玩：4-6小时特价门票01长沙岳麓山索道成人票（下行） 当天15:00前可预订￥', '0', null, '7fccbee7-413a-4062-bd9c-2dc2abd050c9.jpg', '0', null, '关于岳麓山', '1', '72', '0', null, null, null, '', '岳麓区', '2');
INSERT INTO `cms_article` VALUES ('125', '1', '<p class=\"main-desc-p\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; line-height: 20px; color: rgb(102, 102, 102);\"><span class=\"main-desc-tip\" style=\"margin: 0px; padding: 0px; list-style: none; font-weight: 700;\">大家印象：</span>&nbsp;橘子洲晚上的烟火可是一道靓丽的风景，印象最深的就是喷泉和烟花，小火车挺好玩的。毛爷爷巨大的雕塑特霸气...&nbsp;<a class=\"click-more-info\" style=\"margin: 0px; padding: 0px; list-style: none; background-color: transparent; color: rgb(0, 145, 217); cursor: pointer;\">[详细简介]</a></p><p><span class=\"point-rank\" style=\"margin: 0px 0px 5px; padding: 0px; list-style: none; width: 270px; display: block; color: rgb(102, 102, 102); height: 26px;\">长沙193个景点中排名第<span class=\"rank\" style=\"margin: 0px 0px 0px 3px; padding: 0px; list-style: none; display: inline; position: relative; width: auto; color: rgb(255, 156, 0); font-size: 14px;\">3</span></span><span class=\"main-besttime\" style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block; color: rgb(102, 102, 102);\"><span style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 18px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); font-family: globel-iconfont !important;\"></span>景点类型：其他</span></span><span class=\"main-besttime\" style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block; color: rgb(102, 102, 102);\"><span style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 18px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); font-family: globel-iconfont !important;\"></span>最佳季节：四季皆宜。春天江鸥点...</span></span><span class=\"main-dcnt\" style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block; color: rgb(102, 102, 102);\"><span style=\"margin: 0px; padding: 0px; list-style: none; width: 270px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 18px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); font-family: globel-iconfont !important;\"></span>建议游玩：2-3小时</span></span></p><p><img src=\"http://image.zscat.com/upload1/20161123/1479903249824.jpg\" style=\"float:none;\" title=\"thumbnails (1).jpg\"/></p><p><img src=\"http://image.zscat.com/upload1/20161123/1479903252226.jpg\" style=\"float:none;\" title=\"thumbnails (2).jpg\"/></p><p><br/></p>', '2016-11-23', '大家印象： 橘子洲晚上的烟火可是一道靓丽的风景，印象最深的就是喷泉和烟花，小火车挺好玩的。毛爷爷巨大的雕塑特霸气... [详细简介]长沙193个景点中排名第3景点类型：其他最佳季节：四季皆宜。春天江鸥点...建议游玩：2-3小时', '0', null, 'a37f5203-b76e-42b8-98e5-47d4b841dd95.jpg', '0', null, '关于橘子洲', '1', '72', '0', null, null, null, 'http://image.zscat.com/upload1/20161123/1479903249824.jpg,http://image.zscat.com/upload1/20161123/1479903252226.jpg,', '岳麓区', '2');
INSERT INTO `cms_article` VALUES ('126', '2', '<p><span style=\"margin: 0px; padding: 0px; list-style: none; line-height: 30px; color: rgb(51, 51, 51); font-weight: 700;\">大家印象</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none;\">西汉长沙国丞相利仓及其家属墓葬，为后人了解西汉历史提供资料。还算保存的完好，在这里可见中国古人的智慧。</p><p><span style=\"margin: 0px; padding: 0px; list-style: none; line-height: 30px; color: rgb(51, 51, 51); font-weight: 700;\">走进马王堆汉墓</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none;\">马王堆位于长沙市东郊长浏公路北侧，距市中心约4公里。 马王堆并非“马王”之堆，而是西汉初期长沙国丞相、轪侯利仓及其家属的墓地。堆上东西又各突起土冢一个，其间相距20余米。形似马鞍，故也称为马鞍堆。 堆上分布西汉墓三座，三座汉墓中，二号墓葬的是汉初长沙国丞相轪侯利苍，一号墓是利苍妻的墓，三号墓是利苍之子的墓。现在一、二号墓坑已填塞，其中出土的女尸、素纱禅衣及一大批西汉器皿和帛书画等都保存于湖南省博物馆；三号墓坑经过整理加固，供人们参观。 马王堆汉墓是西汉初期长沙国丞相、轪侯利仓及其家属的墓葬。长沙为汉长沙国首府临湘县所在地。该墓地曾被讹传为五代十国时楚王马殷的墓地，故称马王堆；又曾被附会为长沙王刘发埋葬其母程、唐二姬的“双女”。 湖南省博物馆与中国科学院考古研究所1972年发掘了1号墓；1973至1974年初，发掘了2号、3号墓。 马王堆三座汉墓共出土珍贵文物3000多件，绝大多数保存完好。其中五百多件各种漆器，制作精致，纹饰华丽，光泽如新。珍贵的是一号墓的大量丝织品，保护完好。品种众多，有绢、绮、罗、纱、锦等。有一件素纱襌衣，轻若烟雾，薄如蝉翼，该衣长1.28米，且有长袖，重量仅49克，织造技巧之高超，真是天工巧夺。出土的帛画，为我国现存最早的描写当时现实生活的大型作品。还有彩俑、乐器、兵器、印章、帛书等珍品。 从最早发掘的一号墓中出土了一具保存完好的女尸，据考证为利苍的妻子辛追，年龄约五十岁左右，出土时软组织有弹性，关节能活动，血管清晰可见，为世界考古史上前所未见的不腐湿尸，此后将此类古尸命名为马王堆尸。</p><p><span class=\"main-besttime\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span></span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">景点类型：</span><span style=\"margin: 0px 5px 10px 0px; padding: 0px; list-style: none; width: auto;\">历史遗址</span></p><p><span class=\"main-besttime\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">最佳季节：</span>四季皆宜。</p></span></span><span class=\"main-dcnt\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">建议游玩：</span>3-5小时</p></span></span><span class=\"main-ticket-price\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">门票：</span>免费不免票的原则，要出示身份证排队领票。每天限量5000人，发票时间为每个开放日的8:30-16:00，门票有限，发完即止。讲解免费。</p></span></span><span class=\"main-open\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">开放时间：</span>全年开放 夏季：08:00~16:30 冬季：09:00~16:00</p></span></span><span class=\"main-address\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">地址：</span>长沙市区东郊四千米处的浏阳河旁的马王堆乡</p></span></span><span class=\"main-phone\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">电话：</span>0731-5810110</p></span></span></p><p></p><p><br/></p>', '2016-11-23', '大家印象西汉长沙国丞相利仓及其家属墓葬，为后人了解西汉历史提供资料。还算保存的完好，在这里可见中国古人的智慧。走进马王堆汉墓马王堆位于长沙市东郊长浏公路北侧，距市中心约4公里。 马王堆并非“马王”之堆，而是西汉初期长沙国丞相、轪侯利仓及其家属的墓地。堆上东西又各突起土冢一个，其间相距20余米。形似马鞍，故也称', '0', null, 'c4103e55-f6a5-4b07-91d3-8992d1f0ea86.jpg', '0', null, '关于马王堆汉墓', '1', '73', '0', null, null, null, '', '芙蓉区', '2');
INSERT INTO `cms_article` VALUES ('127', '1', '<p><span style=\"margin: 0px; padding: 0px; list-style: none; line-height: 30px; color: rgb(51, 51, 51); font-weight: 700;\">大家印象</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none;\">北京文化底蕴深厚，是一个古典与现代结合的城市。旅游资源十分丰富，景色都很宏伟壮观。北京的交通和购物都很方便，也有很多美食，小吃和北京烤鸭好吃，雾霾比较严重，空气质量不行。</p><p><span style=\"margin: 0px; padding: 0px; list-style: none; line-height: 30px; color: rgb(51, 51, 51); font-weight: 700;\">走进北京</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none;\">北京，中国首都。每个人心中，都有一个“我爱北京天安门”的北京情结，都曾梦想着生活在传说中的紫禁城；梦想着穿梭在王朔笔下的胡同和大院；也梦想着爬上万里长城，大喊：我是好汉！在每个人心中，都一个人属于自己的北京。 北京是一座包容万象、海纳百川的城市。三千年的历史，六朝故都，这里荟萃了自元明清以来的中华文化，荟萃了众多名胜古迹和人文景观。这里汇聚了八方来客，宗教、文化、语言在这里融合，兼容并蓄。如果想准确的描绘出北京的模样，无异于痴人说梦，北京在红宫墙外的宁静小路上，在胡同儿的转弯拐角儿，在国贸的匆匆路旁，也在未名湖边的石砖小径。只有用心去感受，去聆听，才能听到北京的内心独白。 在我的心里，北京表面上它是现代大都会，但是内心却有抹不去的古朴和怀旧。闲庭信步在逐渐少去的胡同里，走进那热气腾腾的涮肉店，那才是真正的北京。 有许多著名的学府如清华、北大等也汇聚于此，可以漫步校园中想象朱自清、胡适等昔日大师在校任教时的情景。 还有许多闻名遐迩的自然景观，如红叶迷人的香山公园、竹林遍地的紫竹院、环境幽雅的玉渊潭……</p><p><span class=\"main-besttime\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span></span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">最佳季节：</span>9月-10月。这是来北京旅游的最佳时节。 秋季的北京一年中最美丽的，此时秋高气爽，气候宜人，空气质量最佳。尤其是十月下旬（霜降前后）至十一月上旬，是红叶层林尽染的时候，著名的香山“红叶节”也将在此期间举行。 另一个在北京旅游观光的好时间是每年12月初至次年2月中旬，这个时候来北京就一定要去北京的庙会逛一逛。正月里（农历大年三十到二月初一）是举办庙会最为集中的日子，厂甸、五显财神庙、白云观、雍和宫、东岳庙、龙潭湖等都会举办规模盛大的庙会，处处人山人海、热闹非凡，一派和谐欢乐的景象。</p><p><span class=\"main-dcnt\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">建议游玩：</span>5-7天</p></span></span></p><p></p><p><br/></p>', '2016-11-23', '大家印象北京文化底蕴深厚，是一个古典与现代结合的城市。旅游资源十分丰富，景色都很宏伟壮观。北京的交通和购物都很方便，也有很多美食，小吃和北京烤鸭好吃，雾霾比较严重，空气质量不行。走进北京北京，中国首都。每个人心中，都有一个“我爱北京天安门”的北京情结，都曾梦想着生活在传说中的紫禁城；梦想着穿梭在王朔笔下的胡同', '0', null, '59afdb18-2f69-4e96-ba90-154e79c34879.jpg', '0', null, '关于北京', '1', '70', '0', null, null, null, '', '朝阳区', '2');
INSERT INTO `cms_article` VALUES ('128', '1', '<p><span style=\"margin: 0px; padding: 0px; list-style: none; line-height: 30px; color: rgb(51, 51, 51); font-weight: 700;\">大家印象</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none;\">故宫是一直向往的神圣之地，风景很美。故宫的建筑群保存得非常完好，无论是恢宏的气势、绝佳的建筑，还是深厚的历史文化底蕴都让人印象深刻。天气好的时候看得更加真切。</p><p><span style=\"margin: 0px; padding: 0px; list-style: none; line-height: 30px; color: rgb(51, 51, 51); font-weight: 700;\">走进故宫</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none;\">北京故宫，旧称紫禁城，是中国明清两代24位皇帝的皇宫。是无与伦比的古代建筑杰作，也是世界现存最大、最完整的木质结构的古建筑群。 故宫宫殿建筑均是木结构、黄琉璃瓦顶、青白石底座，饰以金碧辉煌的彩画。被誉为世界五大宫之一（北京故宫、法国凡尔赛宫、英国白金汉宫、美国白宫、俄罗斯克里姆林宫）。 故宫的建筑沿着一条南北向中轴线排列并向两旁展开，南北取直，左右对称。依据其布局与功用分为“外朝”与“内廷”两大部分，以乾清门为界，乾清门以南为外朝，以北为内廷。外朝、内廷的建筑气氛迥然不同。 故宫有4个门，正门名午门，东门名东华门，西门名西华门，北门名神武门。面对北门神武门，有用土、石筑成的景山，满山松柏成林。 外朝以太和殿、中和殿、保和殿三大殿为中心，其中三大殿中的&quot;太和殿”俗称“金銮殿”，是皇帝举行朝会 的地方，也称为“前朝”。是封建皇帝行使权力、举行盛典的地方。此外两翼东有文华殿、文渊阁、上驷院、南三所；西有武英殿、内务府等建筑。建筑造型宏伟壮丽，庭院明朗开阔，象征封建政权至高无上。 内廷以乾清宫、交泰殿、坤宁宫后三宫为中心，两翼为养心殿、东六宫、西六宫、斋宫、毓庆宫，后有御花园。是封建帝王与后妃居住之所。内廷东部的宁寿宫是当年乾隆皇帝退位后养老而修建。内廷西部有慈宁宫、寿安宫等。此外还有重华宫，北五所等建筑。庭院深邃，建筑紧凑，自成一体，秩序井然。</p><p><span class=\"main-besttime\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span></span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">景点类型：</span><span style=\"margin: 0px 5px 10px 0px; padding: 0px; list-style: none; width: auto;\">公园</span><span style=\"margin: 0px 5px 10px 0px; padding: 0px; list-style: none; width: auto;\">历史建筑</span><span style=\"margin: 0px 5px 10px 0px; padding: 0px; list-style: none; width: auto;\">历史遗址</span></p><p><span class=\"main-besttime\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">最佳季节：</span>四季皆宜。春季气候舒适，在故宫赏花是不错的选择；夏季炎热，可在室内参观；秋季，北京秋高气爽，红叶满地，游览故宫非常合适；冬季虽然寒冷，但是故宫的雪景确实美不胜收。</p></span></span><span class=\"main-dcnt\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">建议游玩：</span>3-4小时</p></span></span><span class=\"main-ticket-price\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">门票：</span>旺季（4月1日~10月31日）：60.00元 淡季（11月1日~3月31日）：40.00元 珍宝馆（即进入宁寿宫区，含戏曲馆、石鼓馆）：10.00元 钟表馆（即进入奉先殿区）：10.00元</p></span></span><span class=\"main-open\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">开放时间：</span>1. 旺季（4月1日~10月31日）：08:30~17:00 停止售票时间：16:00 停止入场时间：16:10 2. 淡季（11月1日~3月31日）：08:30~16:30 停止售票时间：15:30 停止入场时间：15:40 Tips：除法定节假日和暑期（7月1日~8月31日）外，故宫博物院全年实行周一下午闭馆的措施。每周一开馆时间为08:30~12:00，停止售票时间为11:00，停止检票时间为11:10，闭馆时间为12:00。</p></span></span><span class=\"main-address\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">地址：</span>北京市东城区景山前街4号</p></span></span><span class=\"main-phone\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">电话：</span>86-10-85007422,85007421</p></span></span></p><p></p><p><br/></p>', '2016-11-23', '大家印象故宫是一直向往的神圣之地，风景很美。故宫的建筑群保存得非常完好，无论是恢宏的气势、绝佳的建筑，还是深厚的历史文化底蕴都让人印象深刻。天气好的时候看得更加真切。走进故宫北京故宫，旧称紫禁城，是中国明清两代24位皇帝的皇宫。是无与伦比的古代建筑杰作，也是世界现存最大、最完整的木质结构的古建筑群。 故宫宫殿', '0', null, '62a72273-77ac-41b0-a643-09c86b71baef.jpg', '0', null, '关于故宫', '1', '71', '0', null, null, null, '', '海定区', '2');
INSERT INTO `cms_article` VALUES ('129', '1', '<p><span style=\"margin: 0px; padding: 0px; list-style: none; line-height: 30px; color: rgb(51, 51, 51); font-weight: 700;\">大家印象</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none;\">颐和园是现今保存最完整的皇家园林，北方的皇室园林更体现出大方的特色。昆明湖的湖水很清澈，视野也辽阔，长廊的壁画最为经典。夏季的荷花和金鱼特别美，深冬的雪景也很赞。</p><p><span style=\"margin: 0px; padding: 0px; list-style: none; line-height: 30px; color: rgb(51, 51, 51); font-weight: 700;\">走进颐和园</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none;\">颐和园位于北京西北郊海淀区内，距北京城区15公里，是我国现存规模最大，保存最完整的皇家园林之一，也是享誉世界的旅游胜地之一。 颐和园是利用昆明湖、万寿山为基址，以杭州西湖风景为蓝本，汲取江南园林的某些设计手法和意境而建成的一座大型天然山水园，也是保存得最完整的一座皇家行宫御苑，被誉为皇家园林博物馆。 颐和园景区规模宏大，园内建筑以佛香阁为中心，园中有景点建筑物百余座、大小院落20余处，3555古建筑，面积70000多平方米，共有亭、台、楼、阁、廊、榭等不同形式的建筑3000多间。古树名木1600余株。其中佛香阁、长廊、石舫、苏州街、十七孔桥、谐趣园、大戏台等都已成为家喻户晓的代表性建筑。</p><p><span class=\"main-besttime\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span></span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">景点类型：</span><span style=\"margin: 0px 5px 10px 0px; padding: 0px; list-style: none; width: auto;\">历史建筑</span></p><p><span class=\"main-besttime\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">最佳季节：</span>9-10月最佳。北京的春秋不冷不热，气候适中，是理想的旅游季节，尤其是秋季天高气爽，气候宜人；夏季虽炎热，但是景色绝佳，在昆明湖游船赏景再合适不过了；冬季寒冷，湖面结冰，白雪下的颐和园也别有一番神秘的景致。</p></span></span><span class=\"main-dcnt\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">建议游玩：</span>4-5小时</p></span></span><span class=\"main-ticket-price\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">门票：</span>1. 旺季（4月1日~10月31日）：30.00元 德和园：5.00元 佛香阁：10.00元 苏州街：10.00元 文昌院：20.00元 联票（含门票、文昌院、德和园、佛香阁、苏州街澹宁堂）：60.00元 2. 淡季（11月1日~3月31日）：20.00元 德和园：5.00元 佛香阁：10.00元 苏州街：10.00元 文昌院：20.00元 联票（含门票、文昌院、德和园、佛香阁、苏州街澹宁堂）：50.00元</p></span></span><span class=\"main-open\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">开放时间：</span>1. 旺季（4月1日~10月31日）：06:30~20:00 停止售票时间：18:00 园中园（含文昌院、德和园、佛香阁、苏州街澹宁堂）：08:30~17:00 2. 淡季（11月1日~3月31日）：07:00~19:00 停止售票时间：17:00 园中园（含文昌院、德和园、佛香阁、苏州街澹宁堂）：09:00~18:00</p></span></span><span class=\"main-address\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">地址：</span>北京市海淀区新建宫门路19号</p></span></span><span class=\"main-phone\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">电话：</span>010-62881144</p></span></span><span class=\"main-website\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">官方网站：</span>http://www.summerpalace-china.com</p></span></span></p><p></p><p><br/></p>', '2016-11-23', '大家印象颐和园是现今保存最完整的皇家园林，北方的皇室园林更体现出大方的特色。昆明湖的湖水很清澈，视野也辽阔，长廊的壁画最为经典。夏季的荷花和金鱼特别美，深冬的雪景也很赞。走进颐和园颐和园位于北京西北郊海淀区内，距北京城区15公里，是我国现存规模最大，保存最完整的皇家园林之一，也是享誉世界的旅游胜地之一。 颐和', '0', null, '090da8fd-9749-438d-89f6-5d6c70487bfe.jpg', '0', null, '关于颐和园', '1', '70', '0', null, null, null, '', '朝阳区', '2');
INSERT INTO `cms_article` VALUES ('131', '1', '<p><span style=\"margin: 0px; padding: 0px; list-style: none; line-height: 30px; color: rgb(51, 51, 51); font-weight: 700;\">大家印象</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none;\">八达岭长城壮观宏伟，风景秀丽，不愧是世界八大奇迹之一，象征着中国古代劳动人民智慧的结晶。有的台阶挺陡峭的，爬起来有些吃力。八达岭长城离市区远，节假日人山人海，千万别去。</p><p><span style=\"margin: 0px; padding: 0px; list-style: none; line-height: 30px; color: rgb(51, 51, 51); font-weight: 700;\">走进八达岭长城</span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none;\">八达岭长城位于北京市延庆县军都山关沟古道北口。是明长城中保存最好、也最具代表性的地段。联合国“世界文化遗产”之一。 八达岭长城典型地表现了万里长城雄伟险峻的风貌。作为北京的屏障，这里山峦重叠，形势险要。气势极其磅礴的城墙南北盘旋延伸于群峦峻岭之中。依山势向两侧展开的长城雄峙危崖，陡壁悬崖上古人所书的&quot;天险&quot;二字，确切的概括了八达岭位置的军事重要性。 八达岭长城驰名中外，誉满全球。是万里长城向游人开放最早的地段。“不到长城非好汉”。迄今，先后有尼克松、里根、撒切尔、戈尔巴乔夫、伊丽莎白等372位外国首脑和众多的世界风云人物登上八达岭观光游览。 八达岭长城为居庸关的重要前哨，古称“居庸之险不在关而在八达岭”。明长城的八达岭段是长城建筑最精华段，集巍峨险峻、秀丽苍翠于一体，“玉关天堑”为明代居庸关八景之一。 八达岭长城其关城为东窄西宽的梯形，建于明弘治十八年，嘉靖、万历年间曾修葺。关城有东西二门，东门额题“居庸外镇”，刻于嘉靖十八年；西门额题“北门锁钥”，刻于万历十年。 八达岭是历史上许多重大事件的见证。第一帝王秦始皇东临碣石后，从八达岭取道大同，再驾返咸阳。肖太后巡幸、元太祖入关、元代皇帝每年两次往返北京和上都之间、明代帝王北伐、李自成攻陷北京、清代天子亲征……八达岭都是必经之地。近代史上，慈禧西逃泪洒八达岭、詹天佑在八达岭主持修筑中国自力修建的第一条铁路——京张铁路、孙中山先生登临八达岭长城等，留下了许多历史典故和珍贵的历史回忆，是历史名地。 八达岭景区除了长城外，还有长城碑林、五郎像、石佛寺石像、戚继光景园、袁崇焕景园、长城碑林景园等景点。</p><p><span class=\"main-besttime\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span></span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">到达与离开：</span></p><p><span class=\"main-besttime\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">景点类型：</span><span style=\"margin: 0px 5px 10px 0px; padding: 0px; list-style: none; width: auto;\">历史建筑</span></p></span></span><span class=\"main-besttime\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">最佳季节：</span>3月-5月和9月-11月为最佳登长城时间。 春季是北京气温最舒适的季节，此时游人较少，可尽情领略雄关漫道。 秋季则是天高气爽，登长城看万山树叶红遍奇景。 冬夏二季气候条件比春秋略逊，但是冬季被大雪覆盖的长城更有庄严巍巍气势。</p></span></span><span class=\"main-dcnt\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">建议游玩：</span>3-4小时</p></span></span><span class=\"main-ticket-price\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">门票：</span>旺季（4~10月）：45.00元 淡季（11~3月）：40.00元</p></span></span><span class=\"main-open\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">开放时间：</span>旺季（4~10月）：06:30~19:00 淡季（11~3月）：07:00~18:00</p></span></span><span class=\"main-address\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">地址：</span>北京市延庆县军都山关沟古道北口</p></span></span><span class=\"main-phone\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">电话：</span>010-69121226</p></span></span><span class=\"main-website\" style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: 653px; display: block;\"><span class=\"globel-iconfont\" style=\"margin: 0px 5px 0px 0px; padding: 0px; list-style: none; font-size: 16px; -webkit-font-smoothing: antialiased; -webkit-text-stroke-width: 0.2px; color: rgb(165, 170, 173); vertical-align: top; font-family: globel-iconfont !important;\"></span><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; list-style: none; display: inline-block; width: 630.46875px; vertical-align: top;\"><span style=\"margin: 0px 0px 10px; padding: 0px; list-style: none; width: auto; font-weight: 700;\">官方网站：</span>www.badaling.gov.cn</p></span></span></p><p></p><p><br/></p>', '2016-11-23', '大家印象八达岭长城壮观宏伟，风景秀丽，不愧是世界八大奇迹之一，象征着中国古代劳动人民智慧的结晶。有的台阶挺陡峭的，爬起来有些吃力。八达岭长城离市区远，节假日人山人海，千万别去。走进八达岭长城八达岭长城位于北京市延庆县军都山关沟古道北口。是明长城中保存最好、也最具代表性的地段。联合国“世界文化遗产”之一。 八达', '0', null, '679e8864-90fc-4a82-a2c0-7ce8bd6d5006.jpg', '0', null, '关于八达岭长城', '1', '70', '0', null, null, null, '', '朝阳区', '2');
INSERT INTO `cms_article` VALUES ('132', '1', '<section class=\"poi-dishes\" style=\"margin: 0px 0px 20px; padding: 0px; color: rgb(51, 51, 51); font-family: tahoma, arial, 宋体, sans-serif; font-size: 12px; line-height: 18px; white-space: normal;\"><h3 class=\"title-hd\" style=\"margin: 0px 0px 15px; padding: 0px 0px 0px 10px; font-size: 20px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(255, 191, 0); font-weight: normal; line-height: normal; font-family: 微软雅黑;\">推荐菜</h3><ul class=\"dishes-list taggleMore__list\" style=\"margin: 0px 0px 22px; padding: 0px 15px; list-style: none;\"><li>炸酱面(4233)</li><li>爆肚(1998)</li><li>蓑衣黄瓜(1980)</li><li>炸灌肠(1721)</li><li>炒红果(1669)</li><li>芥末墩(1623)</li><li>肉丁炸酱面(1588)</li><li>驴打滚(1479)</li><li>麻豆腐(1432)</li><li>豆汁(1180)</li><li>艾窝窝(1141)</li><li>茄泥(1070)</li><li>糖醋里脊(999)</li><li>腔骨(917)</li><li>茶汤(902)</li><li>灌肠(857)</li><li><a href=\"https://lvyou.baidu.com/scene/poi/restaurant?surl=beijing&place_uid=39d43f82c7673a9fa8059d04###\" class=\"taggleMore__anchor\" style=\"text-decoration: none; color: rgb(0, 126, 217);\">更多<span class=\"triangle-down\" style=\"display: inline-block; position: relative; width: 0px; height: 0px; margin: 0px auto; border-width: 6px; border-style: solid dashed dashed; border-color: rgb(137, 137, 137) transparent transparent; top: 5px;\"><span style=\"position: absolute; top: -8px; left: -7px; display: block; width: 0px; height: 0px; font-size: 0px; line-height: 0; border-width: 7px; border-style: solid dashed dashed; border-color: rgb(255, 255, 255) transparent transparent;\"></span></span></a></li></ul><ul style=\"margin: 0px; padding: 0px 15px; list-style: none;\"></ul></section><p><section class=\"poi-recommend\" style=\"margin: 0px 0px 60px; padding: 0px 0px 20px; border-bottom-style: dotted; border-bottom-width: 1px; border-bottom-color: rgb(221, 221, 221); color: rgb(51, 51, 51); font-family: tahoma, arial, 宋体, sans-serif; font-size: 12px; line-height: 18px; white-space: normal;\"><p class=\"description\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 15px; font-size: 14px; line-height: 24px; font-family: normal;\">典型老北京馆子，店小二吆喝着端上来各种地道北京美食。</p></section></p><p><br/></p>', '2016-11-23', '推荐菜炸酱面(4233)爆肚(1998)蓑衣黄瓜(1980)炸灌肠(1721)炒红果(1669)芥末墩(1623)肉丁炸酱面(1588)驴打滚(1479)麻豆腐(1432)豆汁(1180)艾窝窝(1141)茄泥(1070)糖醋里脊(999)腔骨(917)茶汤(902)灌肠(857)更多典型老北京馆子，店小二吆', '0', null, 'ea5cf1f3-dc85-45b1-be5b-714ee6a08db3.jpg', '0', null, '海碗居(牡丹园店)', '1', '74', '0', null, null, null, '', '东城', '2');
INSERT INTO `cms_article` VALUES ('133', '1', '<section class=\"poi-dishes\" style=\"margin: 0px 0px 20px; padding: 0px; color: rgb(51, 51, 51); font-family: tahoma, arial, 宋体, sans-serif; font-size: 12px; line-height: 18px; white-space: normal;\"><h3 class=\"title-hd\" style=\"margin: 0px 0px 15px; padding: 0px 0px 0px 10px; font-size: 20px; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(255, 191, 0); font-weight: normal; line-height: normal; font-family: 微软雅黑;\">推荐菜</h3><ul class=\"dishes-list taggleMore__list\" style=\"margin: 0px 0px 22px; padding: 0px 15px; list-style: none;\"><li>烤鸭(19974)</li><li>芥末鸭掌(6773)</li><li>盐水鸭肝(5989)</li><li>火燎鸭心(5273)</li><li>鸭架汤(4544)</li><li>豌豆黄(2561)</li><li>片皮鸭(2278)</li><li>小鸭酥(2192)</li><li>干烧四鲜(1879)</li><li>鸭汤(1600)</li><li>酸辣黄瓜(1368)</li><li>鸭肝(1325)</li><li>芥茉鸭掌(1251)</li><li>鸭舌(1145)</li><li>糟溜鸭三白(1016)</li><li>雀巢鸭宝(976)</li><li><a href=\"https://lvyou.baidu.com/scene/poi/restaurant?surl=beijing&place_uid=79cceb3678185b901f58009d###\" class=\"taggleMore__anchor\" style=\"text-decoration: none; color: rgb(0, 126, 217);\">更多<span class=\"triangle-down\" style=\"display: inline-block; position: relative; width: 0px; height: 0px; margin: 0px auto; border-width: 6px; border-style: solid dashed dashed; border-color: rgb(137, 137, 137) transparent transparent; top: 5px;\"><span style=\"position: absolute; top: -8px; left: -7px; display: block; width: 0px; height: 0px; font-size: 0px; line-height: 0; border-width: 7px; border-style: solid dashed dashed; border-color: rgb(255, 255, 255) transparent transparent;\"></span></span></a></li></ul><ul style=\"margin: 0px; padding: 0px 15px; list-style: none;\"></ul></section><p><section class=\"poi-recommend\" style=\"margin: 0px 0px 60px; padding: 0px 0px 20px; border-bottom-style: dotted; border-bottom-width: 1px; border-bottom-color: rgb(221, 221, 221); color: rgb(51, 51, 51); font-family: tahoma, arial, 宋体, sans-serif; font-size: 12px; line-height: 18px; white-space: normal;\"><p class=\"description\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 15px; font-size: 14px; line-height: 24px; font-family: normal;\">全球最大的烤鸭店，环境和味道绝对超一流！</p></section></p><p><br/></p>', '2016-11-23', '推荐菜烤鸭(19974)芥末鸭掌(6773)盐水鸭肝(5989)火燎鸭心(5273)鸭架汤(4544)豌豆黄(2561)片皮鸭(2278)小鸭酥(2192)干烧四鲜(1879)鸭汤(1600)酸辣黄瓜(1368)鸭肝(1325)芥茉鸭掌(1251)鸭舌(1145)糟溜鸭三白(1016)雀巢鸭宝(976)更多全', '0', null, 'f61062b1-4070-4d6f-8fbe-2da746a15d50.jpg', '0', null, '全聚德(和平门店)', '1', '75', '0', null, null, null, '', '西城', '2');
INSERT INTO `cms_article` VALUES ('134', 'vedio', '<p><img src=\"http://image.zscat.com/upload1/20161209/1481272185740.gif\" title=\"1环境搭建.gif\"/></p>', '2016-12-09', '', '0', null, '8257b51f-5319-4056-bb48-18f5e57448f0.jpg', '0', null, 'zscat', '1', '60', '0', null, null, null, '', '天津房产', '1');
INSERT INTO `cms_article` VALUES ('135', 'text', '<p><img src=\"http://image.zscat.com/upload1/20161209/1481272185740.gif\" title=\"1环境搭建.gif\"/></p>', '2016-12-09', '', '0', null, '8257b51f-5319-4056-bb48-18f5e57448f0.jpg', '0', null, 'zscat', '1', '60', '0', null, null, null, '', '天津房产', '1');
INSERT INTO `cms_article` VALUES ('136', 'subject', '<p><img src=\"http://image.zscat.com/upload1/20161209/1481272185740.gif\" title=\"1环境搭建.gif\"/></p>', '2016-12-09', '', '0', null, '8257b51f-5319-4056-bb48-18f5e57448f0.jpg', '0', null, 'zscat', '1', '60', '0', null, null, null, '', '天津房产', '1');
INSERT INTO `cms_article` VALUES ('137', 'activity', '<p><img src=\"http://image.zscat.com/upload1/20161209/1481272185740.gif\" title=\"1环境搭建.gif\"/></p>', '2016-12-09', '', '0', null, '8257b51f-5319-4056-bb48-18f5e57448f0.jpg', '0', null, 'zscat', '1', '60', '0', null, null, null, '', '天津房产', '1');
INSERT INTO `cms_article` VALUES ('138', 'quwen', '<p><img src=\"http://image.zscat.com/upload1/20161209/1481272185740.gif\" title=\"1环境搭建.gif\"/></p>', '2016-12-09', '', '0', null, '8257b51f-5319-4056-bb48-18f5e57448f0.jpg', '0', null, 'zscat', '1', '60', '0', null, null, null, '', '天津房产', '1');
INSERT INTO `cms_article` VALUES ('139', 'reader', '<p><img src=\"http://image.zscat.com/upload1/20161209/1481272185740.gif\" title=\"1环境搭建.gif\"/></p>', '2016-12-09', '', '0', null, '8257b51f-5319-4056-bb48-18f5e57448f0.jpg', '0', null, 'zscat', '1', '60', '0', null, null, null, '', '天津房产', '1');
INSERT INTO `cms_article` VALUES ('140', 'vedio', '<p><img src=\"http://image.zscat.com/upload1/20161209/1481272185740.gif\" title=\"1环境搭建.gif\"/></p>', '2016-12-09', '', '0', null, '8257b51f-5319-4056-bb48-18f5e57448f0.jpg', '0', null, 'zscat', '1', '60', '0', null, null, null, '', '天津房产', '1');
INSERT INTO `cms_article` VALUES ('141', 'vedio', '<p><img src=\"http://image.zscat.com/upload1/20161209/1481272185740.gif\" title=\"1环境搭建.gif\"/></p>', '2016-12-09', '', '0', null, '8257b51f-5319-4056-bb48-18f5e57448f0.jpg', '0', null, 'zscat', '1', '60', '0', null, null, null, '', '天津房产', '1');

-- ----------------------------
-- Table structure for cms_category
-- ----------------------------
DROP TABLE IF EXISTS `cms_category`;
CREATE TABLE `cms_category` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `description` varchar(255) DEFAULT NULL COMMENT '描述',
  `image` varchar(255) DEFAULT NULL COMMENT '图片',
  `keywords` varchar(255) DEFAULT NULL COMMENT '关键字',
  `module` varchar(255) DEFAULT NULL COMMENT '模块',
  `name` varchar(255) DEFAULT NULL COMMENT '名称',
  `parent_id` bigint(20) DEFAULT NULL,
  `grade` int(11) NOT NULL COMMENT '级别',
  `isShow` int(11) NOT NULL COMMENT '是否展示',
  `orderNo` int(11) NOT NULL,
  `site_id` bigint(20) DEFAULT NULL COMMENT '网址',
  `url` varchar(255) DEFAULT NULL COMMENT '链接',
  `parent_ids` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK2478CF34EA0C9E18` (`parent_id`) USING BTREE,
  KEY `FK2478CF341EEC3DA4` (`site_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=76 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of cms_category
-- ----------------------------
INSERT INTO `cms_category` VALUES ('60', '1', null, '1', 'houseNav', '天津房产', '0', '1', '1', '1', '1', '1', '0,');
INSERT INTO `cms_category` VALUES ('61', '1', null, '1', '0', '朝阳区', '59', '1', '1', '1', '1', '1', '0,59,');
INSERT INTO `cms_category` VALUES ('62', '1', null, '1', '0', '海淀区', '59', '1', '1', '1', '1', '1', '0,59,');
INSERT INTO `cms_category` VALUES ('63', '1', null, '1', '0', '昌平区', '59', '1', '1', '1', '1', '1', '0,59,');
INSERT INTO `cms_category` VALUES ('64', '1', null, '1', 'houseNav', '长沙房产', '0', '1', '1', '1', '1', '1', '0,');
INSERT INTO `cms_category` VALUES ('65', '1', null, '1', '0', '天心区', '64', '1', '1', '1', '1', '1', '0,64,');
INSERT INTO `cms_category` VALUES ('66', '1', null, '1', '0', '岳麓区', '64', '1', '1', '1', '1', '1', '0,64,');
INSERT INTO `cms_category` VALUES ('67', '1', null, '1', 'travelNav', '北京旅游', '0', '1', '1', '1', '2', '1', '0,');
INSERT INTO `cms_category` VALUES ('68', '1', null, '1', 'travelNav', '天津旅游', '0', '1', '1', '1', '2', '1', '0,');
INSERT INTO `cms_category` VALUES ('69', '1', null, '1', 'travelNav', '长沙旅游', '0', '1', '1', '1', '2', '1', '0,');
INSERT INTO `cms_category` VALUES ('70', '1', null, '1', '0', '朝阳区', '67', '1', '1', '1', '2', '1', '0,67,');
INSERT INTO `cms_category` VALUES ('71', '1', null, '1', '0', '海定区', '67', '1', '1', '1', '2', '1', '0,67,');
INSERT INTO `cms_category` VALUES ('72', '1', null, '1', '0', '岳麓区', '69', '1', '1', '1', '2', '1', '0,69,');
INSERT INTO `cms_category` VALUES ('73', '1', null, '去', '0', '芙蓉区', '69', '1', '1', '1', '2', '1', '0,69,');
INSERT INTO `cms_category` VALUES ('74', '1', null, '1', '0', '东城', '67', '1', '1', '1', '2', '1', '0,67,');
INSERT INTO `cms_category` VALUES ('75', '1', null, '1', '0', '西城', '67', '1', '1', '1', '2', '1', '0,67,');

-- ----------------------------
-- Table structure for cms_comment
-- ----------------------------
DROP TABLE IF EXISTS `cms_comment`;
CREATE TABLE `cms_comment` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `auditDate` date DEFAULT NULL,
  `content` varchar(255) DEFAULT NULL,
  `createDate` datetime DEFAULT NULL,
  `delFlag` int(11) NOT NULL,
  `email` varchar(255) DEFAULT NULL,
  `ip` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `url` varchar(255) DEFAULT NULL,
  `article_id` bigint(20) DEFAULT NULL,
  `auditer_id` bigint(20) DEFAULT NULL,
  `headPath` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FKF7A9BD69C09E6470` (`article_id`),
  KEY `FKF7A9BD696F3C6204` (`auditer_id`)
) ENGINE=InnoDB AUTO_INCREMENT=415 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of cms_comment
-- ----------------------------
INSERT INTO `cms_comment` VALUES ('13', null, '测试头像。。。', '2014-06-13 11:45:03', '0', '', '118.113.170.115', 'haha', '', '59', null, '/assets/img/face/6.png');
INSERT INTO `cms_comment` VALUES ('14', null, '<img alt=\"哭\" src=\"/assets/comp/xheditor/xheditor_emot/default/cry.gif\" />哈哈', '2014-06-13 12:13:01', '0', '', '118.113.170.115', 'hello', '', '59', null, '/assets/img/face/6.png');
INSERT INTO `cms_comment` VALUES ('15', null, '<img alt=\"微笑\" src=\"/assets/comp/xheditor/xheditor_emot/default/smile.gif\" /><img alt=\"大哭\" src=\"/assets/comp/xheditor/xheditor_emot/default/wail.gif\" /><img alt=\"敲打\" src=\"/assets/comp/xheditor/xheditor_emot/default/knock.gif\" />', '2014-06-13 12:14:19', '0', '', '118.113.170.115', '匿名', '', '59', null, '/assets/img/face/5.png');
INSERT INTO `cms_comment` VALUES ('16', null, '&nbsp;&nbsp;不好意思&nbsp;找遍你的网站&nbsp;我都没有看到本站链接&nbsp;麻烦加上去', '2014-06-15 21:19:41', '0', '', '59.55.14.121', '星少·', '', '35', null, '/assets/img/face/5.png');
INSERT INTO `cms_comment` VALUES ('17', null, '您好，贵站好像没有把我站添加上去，处理好后，邮件可以直接通知我！', '2014-06-16 09:55:07', '0', 'youqinglianjie@tiejiang.org', '101.231.214.242', '铁匠运维网', 'www.tiejiang.org', '35', null, '/assets/img/face/12.png');
INSERT INTO `cms_comment` VALUES ('18', null, '<img alt=\"敲打\" src=\"/assets/comp/xheditor/xheditor_emot/default/knock.gif\" /><img alt=\"惊讶\" src=\"/assets/comp/xheditor/xheditor_emot/default/ohmy.gif\" />', '2014-06-16 14:26:38', '0', '', '171.216.78.13', 'cy', '', '48', null, '/assets/img/face/3.png');
INSERT INTO `cms_comment` VALUES ('20', null, '支持一下', '2014-06-22 18:33:57', '0', 'qanlgeokdcw@gmail.com', '86.51.26.18', '博彩网', 'http://www.7bocai8.com', '59', null, '/assets/img/face/1.png');
INSERT INTO `cms_comment` VALUES ('21', null, '好凶', '2014-06-25 19:06:40', '0', '123123', '171.212.145.135', '32123', '123231', '62', null, '/assets/img/face/6.png');
INSERT INTO `cms_comment` VALUES ('22', null, '立欣社 &nbsp; &nbsp; &nbsp; &nbsp;www.78786866.com &nbsp; &nbsp;申请友链 &nbsp; &nbsp; &nbsp;已加贵站链接', '2014-06-27 14:25:00', '0', '2278786866@qq.com', '115.58.98.218', '立欣社', 'www.78786866.com', '35', null, '/assets/img/face/2.png');
INSERT INTO `cms_comment` VALUES ('23', null, '平兄，可以哦~&nbsp;', '2014-07-04 18:15:36', '0', '', '112.193.56.158', 'hewk', '', '35', null, '/assets/img/face/8.png');
INSERT INTO `cms_comment` VALUES ('24', null, '网站启用新域名：http://www.hackerr.org/<br />原站点名不变：苏晨\'s Blog', '2014-07-05 14:28:19', '0', '1142428579@qq.com', '112.5.236.67', '苏晨', 'www.hackerr.org', '35', null, '/assets/img/face/2.png');
INSERT INTO `cms_comment` VALUES ('25', null, '<p>小平 可以哦~ <br /></p><p>猜我是谁 哈哈<br /></p>', '2014-07-16 17:20:21', '0', '', '125.69.127.54', '~~~~', '', '35', null, '/assets/img/face/1.png');
INSERT INTO `cms_comment` VALUES ('75', null, '平平 &nbsp;顶一个', '2014-08-18 16:59:34', '0', '', '175.152.118.30', '昵称', '', '35', null, '/assets/img/face/1.png');
INSERT INTO `cms_comment` VALUES ('256', null, '谢谢分享<img alt=\"奋斗\" src=\"/assets/comp/xheditor/xheditor_emot/default/struggle.gif\" />', '2014-09-18 15:59:38', '0', '2100103948@qq.com', '58.19.46.154', '武汉装饰公司', 'http://www.rkzs.com/', '71', null, '/assets/img/face/10.png');
INSERT INTO `cms_comment` VALUES ('257', null, '学习了不错', '2014-09-18 16:00:28', '0', '2100103948@qq.com', '58.19.46.154', '武汉装饰公司', 'http：//www.rkzs.com/', '69', null, '/assets/img/face/8.png');
INSERT INTO `cms_comment` VALUES ('412', null, '<img alt=\"微笑\" src=\"/assets/comp/xheditor/xheditor_emot/default/smile.gif\" />', '2014-09-22 13:12:14', '0', '', '218.249.133.163', '11', '', '71', null, '/assets/img/face/1.png');
INSERT INTO `cms_comment` VALUES ('413', null, null, '2014-09-24 09:02:48', '0', null, '50.57.190.90', null, null, null, null, null);
INSERT INTO `cms_comment` VALUES ('414', null, null, '2014-09-28 21:39:04', '0', null, '69.84.207.246', null, null, null, null, null);

-- ----------------------------
-- Table structure for cms_img
-- ----------------------------
DROP TABLE IF EXISTS `cms_img`;
CREATE TABLE `cms_img` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  `path` varchar(255) DEFAULT NULL,
  `addTime` datetime DEFAULT NULL,
  `typeid` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=62 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of cms_img
-- ----------------------------
INSERT INTO `cms_img` VALUES ('59', 'tu', '1479177164826.jpg', '15/1479177164826.jpg', '2016-11-15 10:32:44', null);
INSERT INTO `cms_img` VALUES ('60', 'tu', '1479177295719.jpg', '15/1479177295719.jpg', '2016-11-15 10:34:55', null);
INSERT INTO `cms_img` VALUES ('61', 'tu', '1479177303673.jpg', '15/1479177303673.jpg', '2016-11-15 10:35:03', null);

-- ----------------------------
-- Table structure for cms_link
-- ----------------------------
DROP TABLE IF EXISTS `cms_link`;
CREATE TABLE `cms_link` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `color` varchar(255) DEFAULT NULL COMMENT '颜色',
  `href` varchar(255) DEFAULT NULL COMMENT '链接',
  `image` varchar(255) DEFAULT NULL COMMENT '图片',
  `title` varchar(255) DEFAULT NULL COMMENT '标题',
  `weight` int(11) DEFAULT NULL COMMENT '权重',
  `weightDate` date DEFAULT NULL,
  `CATEGORY_ID` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `FK7BC64D30CA4E9944` (`CATEGORY_ID`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of cms_link
-- ----------------------------
INSERT INTO `cms_link` VALUES ('1', 'red', 'http://www.baidu.com', 'img', '百度', '999', null, '18');
INSERT INTO `cms_link` VALUES ('2', 'black', 'http://www.taobao.com/', 'img', '淘宝网', '999', null, '17');
INSERT INTO `cms_link` VALUES ('3', 'black', 'http://www.aipp.me/', 'http://www.aipp.me/favicon.ico', 'b0y\'s blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('5', 'black', 'http://www.super-man.cc/', 'http://www.super-man.cc/content/templates/loper/images/favicon.ico', '陌小染\'s blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('6', 'black', 'http://www.hackerr.org/', 'http://www.hackerr.org/favicon.ico', '苏晨‘s Blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('7', 'black', 'http://www.meileche.com', 'http://www.meileche.com/image/meileche.jpg', '美乐车', '1', null, '35');
INSERT INTO `cms_link` VALUES ('8', 'black', 'http://www.tiejiang.org/', 'http://www.google.com/s2/favicons?domain=www.tiejiang.org', '铁匠运维网', '1', null, '35');
INSERT INTO `cms_link` VALUES ('9', 'black', 'http://www.duoluosb.com/', 'http://www.duoluosb.com/Favicon.ico', '堕络\'s Blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('10', 'black', 'http://0ol.org/', 'http://www.google.com/s2/favicons?domain=0ol.org', '星少‘S Blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('11', 'black', 'http://www.bccsafe.com/', 'http://www.bccsafe.com/wp-content/themes/20130801171447/images/favicon.ico', 'BccSafe\'s Blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('12', 'black', 'http://www.hkzn.cn/', 'http://www.hkzn.cn/wp-content/themes/fengying/images/favicon.ico', '指南针Sec', '1', null, '35');
INSERT INTO `cms_link` VALUES ('13', 'black', 'http://prsec.ml/', 'http://www.google.com/s2/favicons?domain=www.prsec.ml', 'Passer\'s Blog', '1', null, '35');
INSERT INTO `cms_link` VALUES ('14', 'black', 'http://www.78786866.com', 'http://www.78786866.com/wp-content/uploads/2014/05/favicon.ico', '立欣社', '1', null, '35');

-- ----------------------------
-- Table structure for cms_site
-- ----------------------------
DROP TABLE IF EXISTS `cms_site`;
CREATE TABLE `cms_site` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `copyright` varchar(255) DEFAULT NULL COMMENT '版权',
  `description` varchar(255) DEFAULT NULL COMMENT '描述',
  `keywords` varchar(255) DEFAULT NULL COMMENT '关键字',
  `logo` varchar(255) DEFAULT NULL COMMENT 'logo',
  `name` varchar(255) DEFAULT NULL COMMENT '名称',
  `theme` varchar(255) DEFAULT NULL COMMENT '主题',
  `title` varchar(255) DEFAULT NULL COMMENT '标题',
  PRIMARY KEY (`id`),
  UNIQUE KEY `name_UNIQUE` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of cms_site
-- ----------------------------
INSERT INTO `cms_site` VALUES ('1', '@copy2016', '房产cms', 'blog', 'blog', 'blog', 'blog', '房产cms');
INSERT INTO `cms_site` VALUES ('2', '@copy2016', '旅游cms', 'news', 'news', 'news', 'news thems', '旅游cms');

-- ----------------------------
-- Table structure for country
-- ----------------------------
DROP TABLE IF EXISTS `country`;
CREATE TABLE `country` (
  `Id` bigint(11) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `countryname` varchar(255) DEFAULT NULL COMMENT '名称',
  `countrycode` varchar(255) DEFAULT NULL COMMENT '代码',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='国家信息';

-- ----------------------------
-- Records of country
-- ----------------------------

-- ----------------------------
-- Table structure for sys_area
-- ----------------------------
DROP TABLE IF EXISTS `sys_area`;
CREATE TABLE `sys_area` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `parent_id` bigint(20) NOT NULL COMMENT '父级编号',
  `parent_ids` varchar(2000) DEFAULT NULL COMMENT '所有父级编号',
  `code` varchar(100) DEFAULT NULL COMMENT '区域编码',
  `name` varchar(100) NOT NULL COMMENT '区域名称',
  `type` char(1) DEFAULT NULL COMMENT '区域类型',
  `create_by` varchar(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) DEFAULT '0' COMMENT '删除标记(0活null 正常 1,删除)',
  `icon` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `sys_area_parent_id` (`parent_id`),
  KEY `sys_area_parent_ids` (`parent_ids`(255)),
  KEY `sys_area_del_flag` (`del_flag`)
) ENGINE=InnoDB AUTO_INCREMENT=40 DEFAULT CHARSET=utf8 COMMENT='区域表';

-- ----------------------------
-- Records of sys_area
-- ----------------------------
INSERT INTO `sys_area` VALUES ('1', '0', '0,', '100000', '中国', '1', '1', '2013-05-27 08:00:00', '2,超级管理员', '2015-02-28 20:37:03', '', '0', 'fa fa-institution');
INSERT INTO `sys_area` VALUES ('2', '1', '0,1,', '110000', '北京市', '2', '1', '2013-05-27 08:00:00', '22', '2015-01-20 22:15:47', '', '0', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('3', '2', '0,1,2,', '110101', '东城区', '4', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0', null);
INSERT INTO `sys_area` VALUES ('4', '2', '0,1,2,', '110102', '西城区', '4', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0', null);
INSERT INTO `sys_area` VALUES ('5', '2', '0,1,2,', '110103', '朝阳区', '4', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0', null);
INSERT INTO `sys_area` VALUES ('6', '2', '0,1,2,', '110104', '丰台区', '4', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0', null);
INSERT INTO `sys_area` VALUES ('7', '2', '0,1,2,', '110105', '海淀区', '4', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0', null);
INSERT INTO `sys_area` VALUES ('8', '1', '0,1,', '370000', '山东省', '2', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', '', '0', null);
INSERT INTO `sys_area` VALUES ('9', '8', '0,1,8,', '370531', '济南市', '3', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', '', '0', null);
INSERT INTO `sys_area` VALUES ('10', '9', '0,1,8,9,', '370532', '高新区', '4', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', '', '0', null);
INSERT INTO `sys_area` VALUES ('11', '9', '0,1,8,9,', '370533', '历城区', '4', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', '', '0', null);
INSERT INTO `sys_area` VALUES ('12', '9', '0,1,8,9,', '370534', '历下区', '4', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', '', '0', null);
INSERT INTO `sys_area` VALUES ('13', '9', '0,1,8,9,', '370535', '天桥区', '4', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', '', '0', null);
INSERT INTO `sys_area` VALUES ('14', '9', '0,1,8,9,', '370536', '槐荫区', '4', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', '', '0', null);
INSERT INTO `sys_area` VALUES ('15', '1', '0,1,', '110000x', '测试导入', '2', '2,超级管理员', '2015-01-31 20:49:31', '22', '2015-01-31 20:49:31', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('16', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 20:57:38', '22', '2015-01-31 20:57:38', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('17', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 20:59:10', '22', '2015-01-31 20:59:10', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('18', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 21:00:07', '22', '2015-01-31 21:00:07', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('19', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 21:01:37', '22', '2015-01-31 21:01:37', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('20', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 21:04:52', '22', '2015-01-31 21:04:52', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('21', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 21:08:07', '22', '2015-01-31 21:08:07', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('22', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 21:09:53', '22', '2015-01-31 21:09:53', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('23', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 21:11:53', '22', '2015-01-31 21:11:53', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('24', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 21:13:31', '22', '2015-01-31 21:13:31', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('25', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 22:15:36', '22', '2015-01-31 22:15:36', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('26', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 22:16:18', '22', '2015-01-31 22:16:18', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('27', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 22:16:53', '22', '2015-01-31 22:16:53', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('28', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 22:17:20', '22', '2015-01-31 22:17:20', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('29', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 22:18:00', '22', '2015-01-31 22:18:00', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('30', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 22:19:39', '22', '2015-01-31 22:19:39', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('31', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 22:21:10', '22', '2015-01-31 22:21:10', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('32', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 22:21:37', '22', '2015-01-31 22:21:37', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('33', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-01-31 22:23:28', '22', '2015-01-31 22:23:28', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('34', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-02-02 01:27:54', '22', '2015-02-02 01:27:54', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('35', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-02-02 01:28:44', '22', '2015-02-02 01:28:44', '', '1', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('36', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-02-02 01:30:40', '22', '2015-02-02 01:30:40', '', '0', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('37', '1', '0,1,', '110000', '测试导入', '2', '2,超级管理员', '2015-02-02 01:31:00', '22', '2015-02-02 01:31:00', '', '0', 'fa fa-smile-o');
INSERT INTO `sys_area` VALUES ('38', '1', '0,1,', '10010', '湖南', '2', '2,超级管理员', '2015-10-25 11:05:06', null, '2015-10-25 11:05:06', '', '0', 'fa fa-bus');
INSERT INTO `sys_area` VALUES ('39', '38', '0,1,38,', '10010', '岳阳', '3', '2,超级管理员', '2015-10-25 11:05:42', null, '2015-10-25 11:05:42', '', '0', 'fa fa-ils');

-- ----------------------------
-- Table structure for sys_dict
-- ----------------------------
DROP TABLE IF EXISTS `sys_dict`;
CREATE TABLE `sys_dict` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `label` varchar(100) NOT NULL COMMENT '标签名',
  `value` varchar(100) NOT NULL COMMENT '数据值',
  `type` varchar(100) NOT NULL COMMENT '类型',
  `description` varchar(100) NOT NULL COMMENT '描述',
  `sort` int(11) NOT NULL DEFAULT '1' COMMENT '排序（升序）',
  `create_by` varchar(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) NOT NULL DEFAULT '0' COMMENT '删除标记',
  PRIMARY KEY (`id`),
  KEY `sys_dict_value` (`value`),
  KEY `sys_dict_label` (`label`),
  KEY `sys_dict_del_flag` (`del_flag`)
) ENGINE=InnoDB AUTO_INCREMENT=86 DEFAULT CHARSET=utf8 COMMENT='字典表';

-- ----------------------------
-- Records of sys_dict
-- ----------------------------
INSERT INTO `sys_dict` VALUES ('1', '正常', '0', 'del_flag', '删除标记', '10', '1', '2013-05-27 08:00:00', '2,超级管理员', '2015-02-28 23:07:13', null, '0');
INSERT INTO `sys_dict` VALUES ('2', '删除', '1', 'del_flag', '删除标记', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('3', '显示', '1', 'show_hide', '显示/隐藏', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('4', '隐藏', '0', 'show_hide', '显示/隐藏', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('5', '是', '1', 'yes_no', '是/否', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('6', '否', '0', 'yes_no', '是/否', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('17', '国家', '1', 'sys_area_type', '区域类型', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('18', '省份、直辖市', '2', 'sys_area_type', '区域类型', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('19', '地市', '3', 'sys_area_type', '区域类型', '30', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('20', '区县', '4', 'sys_area_type', '区域类型', '40', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('22', '部门', '2', 'sys_office_type', '机构类型', '70', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('23', '一级', '1', 'sys_office_grade', '机构等级', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('24', '二级', '2', 'sys_office_grade', '机构等级', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('25', '三级', '3', 'sys_office_grade', '机构等级', '30', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('26', '四级', '4', 'sys_office_grade', '机构等级', '40', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('27', '所有数据', '1', 'sys_data_scope', '数据范围', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('28', '所在公司及以下数据', '2', 'sys_data_scope', '数据范围', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('29', '所在公司数据', '3', 'sys_data_scope', '数据范围', '30', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('30', '所在部门及以下数据', '4', 'sys_data_scope', '数据范围', '40', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('31', '所在部门数据', '5', 'sys_data_scope', '数据范围', '50', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('32', '仅本人数据', '8', 'sys_data_scope', '数据范围', '90', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('33', '按明细设置', '9', 'sys_data_scope', '数据范围', '100', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('34', '系统管理', '1', 'sys_user_type', '用户类型', '10', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('35', '部门经理', '2', 'sys_user_type', '用户类型', '20', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('36', '普通用户', '3', 'sys_user_type', '用户类型', '30', '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('62', '操作日志', '1', 'sys_log_type', '日志类型', '30', '1', '2013-06-03 08:00:00', '1', '2013-06-03 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('63', '异常日志', '2', 'sys_log_type', '日志类型', '40', '1', '2013-06-03 08:00:00', '1', '2013-06-03 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('64', '单表增删改查', 'single', 'prj_template_type', '代码模板', '10', '1', '2013-06-03 08:00:00', '1', '2013-06-03 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('65', '所有entity和dao', 'entityAndDao', 'prj_template_type', '代码模板', '20', '1', '2013-06-03 08:00:00', '1', '2013-06-03 08:00:00', null, '0');
INSERT INTO `sys_dict` VALUES ('66', '公司', '1', 'sys_office_type', '', '1', null, '2015-01-10 22:15:43', null, '2015-01-10 22:15:43', null, '0');
INSERT INTO `sys_dict` VALUES ('67', '等级', '1', 'score', '', '1', '2,超级管理员', '2015-12-28 22:19:24', null, '2015-12-28 22:19:24', null, '0');
INSERT INTO `sys_dict` VALUES ('68', '首页导航', '0', 'nav_type', '', '1', null, null, null, null, null, '0');
INSERT INTO `sys_dict` VALUES ('69', '底部导航', '1', 'nav_type', '', '2', null, null, null, null, null, '0');
INSERT INTO `sys_dict` VALUES ('70', '文章', '0', 'cms_cate_type', '1', '1', null, null, null, null, null, '0');
INSERT INTO `sys_dict` VALUES ('71', '图片', '1', 'cms_cate_type', '2', '2', null, null, null, null, null, '0');
INSERT INTO `sys_dict` VALUES ('72', '阅读', 'reader', 'cms_wap_type', '1', '1', null, '2016-11-17 12:58:42', null, '2016-11-17 12:58:42', null, '0');
INSERT INTO `sys_dict` VALUES ('73', '图集', 'img', 'cms_wap_type', '2', '2', null, '2016-11-17 12:58:55', null, '2016-11-17 12:58:55', null, '0');
INSERT INTO `sys_dict` VALUES ('74', '趣闻', 'quwen', 'cms_wap_type', '', '4', null, '2016-11-20 11:17:29', null, '2016-11-20 11:17:29', null, '0');
INSERT INTO `sys_dict` VALUES ('75', '活动', 'activity', 'cms_wap_type', '5', '5', null, '2016-11-20 11:17:47', null, '2016-11-20 11:17:47', null, '0');
INSERT INTO `sys_dict` VALUES ('76', '萌专题', 'subject', 'cms_wap_type', '6', '6', null, '2016-11-20 11:18:12', null, '2016-11-20 11:18:12', null, '0');
INSERT INTO `sys_dict` VALUES ('77', '视频', 'vedio', 'cms_wap_type', '7', '7', null, '2016-11-20 11:18:35', null, '2016-11-20 11:18:35', null, '0');
INSERT INTO `sys_dict` VALUES ('78', '新鲜事', 'text', 'cms_wap_type', '', '1', null, '2016-11-20 11:18:50', null, '2016-11-20 11:18:50', null, '0');
INSERT INTO `sys_dict` VALUES ('79', '房产导航', 'houseNav', 'cms_cate_type', '2', '2', null, '2016-11-20 15:47:57', null, '2016-11-20 15:47:57', null, '0');
INSERT INTO `sys_dict` VALUES ('80', '旅游导航', 'travelNav', 'cms_cate_type', '2', '2', null, '2016-11-20 16:36:45', null, '2016-11-20 16:37:29', null, '0');
INSERT INTO `sys_dict` VALUES ('81', '地铁线', '1', 'cms_wap_type', '1', '1', '1', '2016-11-23 15:23:05', null, '2016-11-23 15:23:05', null, '0');
INSERT INTO `sys_dict` VALUES ('82', '靠海边', '2', 'cms_wap_type', '2', '2', '1', '2016-11-23 15:29:16', null, '2016-11-23 15:29:16', null, '0');
INSERT INTO `sys_dict` VALUES ('83', '靠公交', '3', 'cms_wap_type', '3', '3', '1', '2016-11-23 15:32:17', null, '2016-11-23 15:32:17', null, '0');
INSERT INTO `sys_dict` VALUES ('84', '风景旅游', '1', 'cms_wap_type', '1', '1', '2', '2016-11-23 15:35:12', null, '2016-11-23 15:35:12', null, '0');
INSERT INTO `sys_dict` VALUES ('85', '古迹旅游', '2', 'cms_wap_type', '2', '2', '2', '2016-11-23 15:47:54', null, '2016-11-23 15:47:54', null, '0');

-- ----------------------------
-- Table structure for sys_log
-- ----------------------------
DROP TABLE IF EXISTS `sys_log`;
CREATE TABLE `sys_log` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `type` char(1) DEFAULT '1' COMMENT '日志类型',
  `create_by` varchar(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `remote_addr` varchar(255) DEFAULT NULL COMMENT '操作IP地址',
  `user_agent` varchar(255) DEFAULT NULL COMMENT '用户代理',
  `request_uri` varchar(255) DEFAULT NULL COMMENT '请求URI',
  `method` varchar(5) DEFAULT NULL COMMENT '操作方式',
  `params` text COMMENT '操作提交的数据',
  `exception` text COMMENT '异常信息',
  `description` text COMMENT '描述',
  PRIMARY KEY (`id`),
  KEY `sys_log_create_by` (`create_by`),
  KEY `sys_log_request_uri` (`request_uri`),
  KEY `sys_log_type` (`type`),
  KEY `sys_log_create_date` (`create_date`)
) ENGINE=InnoDB AUTO_INCREMENT=94 DEFAULT CHARSET=utf8 COMMENT='日志表';

-- ----------------------------
-- Records of sys_log
-- ----------------------------
INSERT INTO `sys_log` VALUES ('75', '0', null, '2017-03-08 17:21:14', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/index', 'GET', null, '/pig-web/index', null);
INSERT INTO `sys_log` VALUES ('76', '7', null, '2017-03-08 17:21:33', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/login', 'POST', null, '/pig-web/login', null);
INSERT INTO `sys_log` VALUES ('77', '0', null, '2017-03-08 17:21:33', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/index', 'GET', null, '/pig-web/index', null);
INSERT INTO `sys_log` VALUES ('78', '6', null, '2017-03-08 17:21:36', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/role', 'GET', null, '/pig-web/role', null);
INSERT INTO `sys_log` VALUES ('79', '4', null, '2017-03-08 17:21:36', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/tag/treeselect', 'POST', null, '/pig-web/tag/treeselect', null);
INSERT INTO `sys_log` VALUES ('80', '9', null, '2017-03-08 17:21:36', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/tag/treeselect', 'POST', null, '/pig-web/tag/treeselect', null);
INSERT INTO `sys_log` VALUES ('81', '5', null, '2017-03-08 17:21:36', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/role/list', 'POST', null, '/pig-web/role/list', null);
INSERT INTO `sys_log` VALUES ('82', '9', null, '2017-03-08 17:21:36', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/menu/tree', 'POST', null, '/pig-web/menu/tree', null);
INSERT INTO `sys_log` VALUES ('83', '7', null, '2017-03-08 17:21:36', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/office/tree', 'POST', null, '/pig-web/office/tree', null);
INSERT INTO `sys_log` VALUES ('84', '9', null, '2017-03-08 17:21:37', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/office', 'GET', null, '/pig-web/office', null);
INSERT INTO `sys_log` VALUES ('85', '0', null, '2017-03-08 17:21:37', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/office/list', 'POST', null, '/pig-web/office/list', null);
INSERT INTO `sys_log` VALUES ('86', '3', null, '2017-03-08 17:21:37', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/menu', 'GET', null, '/pig-web/menu', null);
INSERT INTO `sys_log` VALUES ('87', '0', null, '2017-03-08 17:21:37', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/menu/list', 'POST', null, '/pig-web/menu/list', null);
INSERT INTO `sys_log` VALUES ('88', '1', null, '2017-03-08 17:21:38', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/area', 'GET', null, '/pig-web/area', null);
INSERT INTO `sys_log` VALUES ('89', '4', null, '2017-03-08 17:21:38', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/area/list', 'POST', null, '/pig-web/area/list', null);
INSERT INTO `sys_log` VALUES ('90', '8', null, '2017-03-08 17:21:38', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/dict', 'GET', null, '/pig-web/dict', null);
INSERT INTO `sys_log` VALUES ('91', '5', null, '2017-03-08 17:21:38', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/dict/list', 'POST', null, '/pig-web/dict/list', null);
INSERT INTO `sys_log` VALUES ('92', '1', null, '2017-03-08 17:21:39', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/syslog', 'GET', null, '/pig-web/syslog', null);
INSERT INTO `sys_log` VALUES ('93', '0', null, '2017-03-08 17:21:39', '127.0.0.1', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36', '/pig-web/syslog/list', 'POST', null, '/pig-web/syslog/list', null);

-- ----------------------------
-- Table structure for sys_office
-- ----------------------------
DROP TABLE IF EXISTS `sys_office`;
CREATE TABLE `sys_office` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `parent_id` bigint(20) NOT NULL COMMENT '父级编号',
  `parent_ids` varchar(2000) NOT NULL COMMENT '所有父级编号',
  `area_id` bigint(20) NOT NULL COMMENT '归属区域',
  `code` varchar(100) DEFAULT NULL COMMENT '区域编码',
  `name` varchar(100) NOT NULL COMMENT '机构名称',
  `type` char(1) DEFAULT NULL COMMENT '机构类型',
  `grade` char(1) DEFAULT NULL COMMENT '机构等级',
  `address` varchar(255) DEFAULT NULL COMMENT '联系地址',
  `zip_code` varchar(100) DEFAULT NULL COMMENT '邮政编码',
  `master` varchar(100) DEFAULT NULL COMMENT '负责人',
  `phone` varchar(200) DEFAULT NULL COMMENT '电话',
  `fax` varchar(200) DEFAULT NULL COMMENT '传真',
  `email` varchar(200) DEFAULT NULL COMMENT '邮箱',
  `create_by` varchar(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) NOT NULL DEFAULT '0' COMMENT '删除标记',
  `icon` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `sys_office_parent_id` (`parent_id`),
  KEY `sys_office_parent_ids` (`parent_ids`(255)),
  KEY `sys_office_del_flag` (`del_flag`)
) ENGINE=InnoDB AUTO_INCREMENT=55 DEFAULT CHARSET=utf8 COMMENT='机构表';

-- ----------------------------
-- Records of sys_office
-- ----------------------------
INSERT INTO `sys_office` VALUES ('1', '0', '0,', '2', '100000', '北京市总公司', '1', '1', '', null, '', '', '', '', '1', '2013-05-27 08:00:00', '2,超级管理员', '2015-02-28 20:49:57', '', '0', 'fa fa-bicycle');
INSERT INTO `sys_office` VALUES ('2', '1', '0,1,', '2', '100001', '公司领导', '2', '1', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0', null);
INSERT INTO `sys_office` VALUES ('3', '1', '0,1,', '2', '100002', '人力部', '2', '1', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0', null);
INSERT INTO `sys_office` VALUES ('4', '1', '0,1,', '2', '100003', '市场部', '2', '1', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0', null);
INSERT INTO `sys_office` VALUES ('5', '1', '0,1,', '2', '100004', '技术部', '2', '4', '', null, '', '', '', '', '1', '2013-05-27 08:00:00', '22', '2015-01-24 16:39:03', '', '0', '');
INSERT INTO `sys_office` VALUES ('6', '1', '0,1,', '2', '100005', '研发部', '2', '1', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '1', '2013-05-27 08:00:00', null, '0', null);
INSERT INTO `sys_office` VALUES ('7', '1', '0,1,', '3', '200000', '山东省分公司', '1', '2', '', '', '', '', '', '', '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', '', '0', null);
INSERT INTO `sys_office` VALUES ('8', '7', '0,1,7,', '8', '200001', '公司领导', '2', '2', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('9', '7', '0,1,7,', '8', '200002', '综合部', '2', '2', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('10', '7', '0,1,7,', '8', '200003', '市场部', '2', '2', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('11', '7', '0,1,7,', '8', '200004', '技术部', '2', '2', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('12', '7', '0,1,7,', '9', '201000', '济南市分公司', '1', '3', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('13', '12', '0,1,7,12,', '9', '201001', '公司领导', '2', '3', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('14', '12', '0,1,7,12,', '9', '201002', '综合部', '2', '3', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('15', '12', '0,1,7,12,', '9', '201003', '市场部', '2', '3', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('16', '12', '0,1,7,12,', '9', '201004', '技术部', '2', '3', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('17', '12', '0,1,7,12,', '11', '201010', '济南市历城区分公司', '1', '4', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('18', '17', '0,1,7,12,17,', '11', '201011', '公司领导', '2', '4', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('19', '17', '0,1,7,12,17,', '11', '201012', '综合部', '2', '4', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('20', '17', '0,1,7,12,17,', '11', '201013', '市场部', '2', '4', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('21', '17', '0,1,7,12,17,', '11', '201014', '技术部', '2', '4', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('22', '12', '0,1,7,12,', '12', '201020', '济南市历下区分公司', '1', '4', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('23', '22', '0,1,7,12,22,', '12', '201021', '公司领导', '2', '4', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('24', '22', '0,1,7,12,22,', '12', '201022', '综合部', '2', '4', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('25', '22', '0,1,7,12,22,', '12', '201023', '市场部', '2', '4', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('26', '22', '0,1,7,12,22,', '12', '201024', '技术部', '2', '4', null, null, null, null, null, null, '1', '2013-05-27 08:00:00', '2', '2014-11-23 22:00:25', null, '0', null);
INSERT INTO `sys_office` VALUES ('27', '5', '0,1,5,', '2', null, '技术1部门', '2', null, '', null, '', '', '', '', null, '2015-01-11 15:19:53', null, '2015-01-11 15:19:53', '', '0', null);
INSERT INTO `sys_office` VALUES ('28', '0', '0,', '1', null, '测试公司名字一定要长', '1', null, '', null, '', '', '', '', null, '2015-01-11 23:48:22', null, '2015-01-12 21:46:32', '', '1', null);
INSERT INTO `sys_office` VALUES ('29', '28', '0,28,', '1', null, '测试部门1', '2', null, '', null, '', '', '', '', null, '2015-01-11 23:48:35', null, '2015-01-11 23:48:35', '', '1', null);
INSERT INTO `sys_office` VALUES ('30', '10', '0,1,7,10,', '1', null, '市场子部门', '2', null, '', null, '', '', '', '', null, '2015-01-13 22:56:14', null, '2015-01-13 22:56:14', '', '0', null);
INSERT INTO `sys_office` VALUES ('35', '0', '0,', '1', null, 'fsdfsdf', '2', '1', '', null, '', '', '', '', null, '2015-01-14 23:13:43', null, '2015-01-14 23:13:43', '', '0', null);
INSERT INTO `sys_office` VALUES ('36', '35', '0,35,', '1', null, '2222', '2', '2', '', null, '', '', '', '', '2', '2015-01-18 20:29:53', '2', '2015-01-18 20:34:08', '', '0', null);
INSERT INTO `sys_office` VALUES ('37', '1', '0,1,', '2', null, '测测', '2', '2', '', null, '', '', '', '', '22', '2015-01-24 15:19:09', null, '2015-01-24 15:19:09', '', '0', '');
INSERT INTO `sys_office` VALUES ('38', '5', '0,1,5,', '2', null, 'sdsd', '2', '3', '', null, '', '', '', '', '22', '2015-01-24 17:08:50', null, '2015-01-24 17:08:50', '', '0', '');
INSERT INTO `sys_office` VALUES ('39', '35', '0,35,', '1', null, 'sssddd', '2', '2', '', null, '', '', '', '', '2', '2015-01-24 17:35:09', null, '2015-01-24 17:35:09', '', '0', '');
INSERT INTO `sys_office` VALUES ('40', '1', '0,1,', '2', null, '测试', '2', '2', '', null, '', '', '', '', '22', '2015-01-25 10:23:15', null, '2015-01-25 10:23:15', '', '1', '');
INSERT INTO `sys_office` VALUES ('41', '1', '0,1,', '2', null, 'aaaa', '2', '2', '', null, '', '', '', '', '22', '2015-01-25 21:34:43', null, '2015-01-25 21:34:43', '', '0', '');
INSERT INTO `sys_office` VALUES ('42', '1', '0,1,', '2', null, 'aaaa', '2', '2', '', null, '', '', '', '', '22', '2015-01-25 21:37:13', null, '2015-01-25 21:37:13', '', '1', '');
INSERT INTO `sys_office` VALUES ('43', '1', '0,1,', '2', null, 'ffffddd', '2', '2', '', null, '', '', '', '', '22', '2015-01-25 21:37:48', null, '2015-01-25 21:37:48', '', '0', '');
INSERT INTO `sys_office` VALUES ('45', '1', '0,1,', '2', null, '测试自动赋权', '2', '2', '', null, '', '', '', '', '22', '2015-01-27 20:02:50', null, '2015-01-27 20:02:50', '', '0', '');
INSERT INTO `sys_office` VALUES ('46', '1', '0,1,', '2', null, 'cc22', '2', '2', '', null, '', '', '', '', '22', '2015-01-27 20:19:45', null, '2015-01-27 20:19:45', '', '0', '');
INSERT INTO `sys_office` VALUES ('47', '0', '0,', '1', null, 'sss', '1', '1', '', null, '', '', '', '', '2', '2015-01-28 21:46:00', null, '2015-01-28 21:46:00', '', '1', '');
INSERT INTO `sys_office` VALUES ('48', '1', '0,1,', '1', null, 'dd', '1', '2', '', null, '', '', '', '', '22', '2015-01-28 22:33:04', null, '2015-01-28 22:33:04', '', '0', '');
INSERT INTO `sys_office` VALUES ('49', '0', '0,', '1', null, 'xcxzcxc', '2', '1', '', null, '', '', '', '', '22', '2015-01-28 22:55:37', null, '2015-01-28 22:55:37', '', '0', '');
INSERT INTO `sys_office` VALUES ('50', '0', '0,', '1', null, '北京zscat科技有限公司', '1', '1', '', null, 'zscat', '', '', '', '2,超级管理员', '2016-12-21 16:34:37', null, '2016-12-21 16:34:37', '', '0', 'fa fa-angellist');
INSERT INTO `sys_office` VALUES ('51', '50', '0,50,', '1', null, '技术部', '2', '2', '', null, 'zscatDep', '', '', '', '2,超级管理员', '2016-12-21 16:35:06', null, '2016-12-21 16:35:06', '', '0', 'fa fa-cc-mastercard');
INSERT INTO `sys_office` VALUES ('52', '0', '0,50,0,', '1', null, '北京xxx科技有限公司', '1', '3', '', null, 'xxx', '', '', '', '2,超级管理员', '2016-12-21 16:35:45', null, '2016-12-21 16:35:45', '', '0', 'fa fa-copyright');
INSERT INTO `sys_office` VALUES ('53', '52', '0,50,0,52,', '1', null, '人事部', '2', '4', '', null, '', '', '', '', '2,超级管理员', '2016-12-21 16:36:06', null, '2016-12-21 16:36:06', '', '0', 'fa fa-ioxhost');
INSERT INTO `sys_office` VALUES ('54', '50', '0,50,', '1', null, '人事部', '2', '2', '', null, '人事', '', '', '', '2,超级管理员', '2016-12-21 16:36:24', null, '2016-12-21 16:36:24', '', '0', '');

-- ----------------------------
-- Table structure for sys_resource
-- ----------------------------
DROP TABLE IF EXISTS `sys_resource`;
CREATE TABLE `sys_resource` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(64) DEFAULT NULL COMMENT '资源名称',
  `common` char(1) DEFAULT '0' COMMENT '是否是公共资源(0.不是 1.是)',
  `icon` varchar(64) DEFAULT NULL COMMENT '图标',
  `sort` int(11) DEFAULT '1' COMMENT '排序号',
  `parent_id` bigint(20) DEFAULT NULL COMMENT '父级id',
  `type` char(1) DEFAULT '0' COMMENT '类型(0.菜单 1.按钮)',
  `url` varchar(255) DEFAULT NULL COMMENT '链接',
  `description` varchar(255) DEFAULT NULL COMMENT '描述',
  `status` char(1) DEFAULT '0' COMMENT '状态(0.正常 1.禁用)',
  `parent_ids` varchar(2000) DEFAULT NULL COMMENT '父级集合',
  `create_date` datetime DEFAULT NULL,
  `update_date` datetime DEFAULT NULL,
  `create_by` varchar(64) DEFAULT NULL,
  `update_by` varchar(64) DEFAULT NULL,
  `del_flag` char(1) DEFAULT '0',
  `permission_str` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=256 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_resource
-- ----------------------------
INSERT INTO `sys_resource` VALUES ('1', '菜单配置', '0', 'fa fa-list', '5', '188', '0', 'menu', '', '0', '0,188,', null, '2015-03-11 23:12:27', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('181', '区域管理', '0', 'fa fa-globe', '6', '188', '0', 'area', '', '0', '0,188,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('188', '系统管理', '0', 'fa fa-cogs', '1', '0', '0', '', '', '0', '0,', null, '2015-03-12 23:57:18', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('190', '字典管理', '0', 'fa fa-calculator', '7', '188', '0', 'dict', '', '0', '0,188,', null, '2015-03-11 23:12:41', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('192', '机构管理', '0', 'fa fa-sitemap', '4', '188', '0', 'office', '', '0', '0,188,', null, '2015-03-11 23:08:59', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('193', '用户管理', '0', 'fa fa-calculator', '1', '188', '0', 'sysuser', '', '0', '0,188,', null, '2016-11-25 22:04:42', null, '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('194', '角色管理', '0', 'fa fa-graduation-cap', '2', '188', '0', 'role', '', '0', '0,188,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('195', '日志查询', '0', 'fa fa-copy', '8', '188', '0', 'syslog', '', '0', '0,188,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('203', '搜索按钮', '0', 'fa fa-angellist', '1', '181', '1', 'sys:area:find', '这是一个按钮级别的示例，页面为添加，请添加@if(auth.hasPermission(\"sys:area:find\")){}测试', '0', '0,188,181,', '2015-01-20 20:50:16', '2015-01-20 20:57:38', '22', '22', '0', null);
INSERT INTO `sys_resource` VALUES ('204', '系统监控', '0', 'fa fa-binoculars', '6', '0', '0', '', '', '0', '0,', '2015-03-03 20:11:10', '2015-03-11 23:12:56', '2,超级管理员', '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('205', 'Ehcache监控', '0', 'fa fa-crosshairs', '1', '204', '0', 'monitor/ehcache', '', '0', '0,204,', '2015-03-03 20:11:19', '2015-03-11 23:15:52', '2,超级管理员', '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('206', 'jvm监控', '0', 'fa fa-flash', '1', '204', '0', 'monitor/jvm', '', '0', '0,204,', '2015-03-08 11:17:00', '2015-03-11 23:20:19', '2,超级管理员', '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('207', '执行sql', '0', 'fa fa-ge', '1', '204', '0', 'monitor/db/sql', '', '0', '0,204,', '2015-03-09 21:07:49', '2015-03-11 23:18:39', '2,超级管理员', '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('208', '数据库监控', '0', 'fa fa-github-alt', '1', '204', '0', 'monitor/db/druid', '', '0', '0,204,', '2015-03-10 21:11:20', '2015-03-11 23:19:56', '2,超级管理员', '2,超级管理员', '0', null);
INSERT INTO `sys_resource` VALUES ('214', '博客管理', '0', 'fa fa-bell-slash', '1', '0', '0', '', '', '0', '0,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('215', '博客类型', '0', '', '1', '214', '0', 'blogType', '', '0', '0,214,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('216', '文章管理', '0', '', '1', '214', '0', 'blog', '', '0', '0,214,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('228', '内容管理', '0', '', '1', '0', '0', '', '', '0', '0,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('229', '文章管理', '0', '', '1', '228', '0', 'cmsArticle', '', '0', '0,228,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('230', '网站链接', '0', '', '4', '228', '0', 'cmsLink', '', '0', '0,228,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('231', '增加', '0', 'fa fa-area-chart', '1', '230', '1', 'cms:cmsLink:add', '', '0', '0,228,230,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('232', '官网管理', '0', 'fa fa-youtube', '1', '0', '0', '', '', '0', '0,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('233', '产品管理', '0', 'fa fa-area-chart', '1', '232', '0', 'product', '', '0', '0,232,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('234', '产品类型', '0', 'fa fa-bicycle', '2', '232', '0', 'productType', '', '0', '0,232,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('235', '官网信息', '0', 'fa fa-cc-mastercard', '4', '232', '0', 'gwInfo', '', '0', '0,232,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('236', '官网导航', '0', 'fa fa-arrows-alt', '1', '232', '0', 'nav', '', '0', '0,232,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('237', '编辑', '0', '', '1', '233', '1', 'gw:product:edit', '', '0', '0,232,233,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('238', '删除', '0', '', '1', '233', '1', 'gw:product:delete', '', '0', '0,232,233,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('239', '删除', '0', '', '1', '236', '1', 'gw:nav:delete', '', '0', '0,232,236,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('242', '文章管理', '0', '', '1', '214', '0', 'blog', '', '0', '0,214,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('244', '站点管理', '0', '', '2', '228', '0', 'cmsSite', '', '0', '0,228,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('245', '栏目管理', '0', '', '3', '228', '0', 'cmsCategory', '', '0', '0,228,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('246', '图片管理', '0', '', '7', '228', '0', 'cmsImg', '', '0', '0,228,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('247', '模板管理', '0', '', '2', '214', '0', 'blogTemplate', '', '0', '0,214,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('249', '留言管理', '0', '', '3', '214', '0', 'comment', '', '0', '0,214,', '2016-11-25 22:01:00', '2016-11-25 22:01:00', null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('250', '友好链接', '0', '', '4', '214', '0', 'link', '', '0', '0,214,', '2016-11-25 22:02:09', '2016-11-25 22:02:09', null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('251', 'database', '0', '', '5', '204', '0', 'database', '', '0', '0,204,', '2016-11-29 11:18:04', '2016-11-29 11:18:04', null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('253', '图表展示', '0', 'fa fa-area-chart', '9', '188', '0', 'chart', '', '0', '0,188,', null, null, null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('254', 'luence管理', '0', 'fa fa-cc', '1', '188', '0', 'luence', '', '0', '0,188,', '2017-03-02 11:02:33', '2017-03-02 11:03:06', null, null, '0', null);
INSERT INTO `sys_resource` VALUES ('255', 'redis管理', '0', 'fa fa-cc-mastercard', '1', '188', '0', 'redis', '', '0', '0,188,', '2017-03-02 11:02:57', '2017-03-02 11:02:57', null, null, '0', null);

-- ----------------------------
-- Table structure for sys_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_role`;
CREATE TABLE `sys_role` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `office_id` bigint(20) DEFAULT NULL COMMENT '归属机构',
  `name` varchar(100) NOT NULL COMMENT '角色名称',
  `data_scope` char(1) DEFAULT NULL COMMENT '数据范围',
  `create_by` varchar(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) NOT NULL DEFAULT '0' COMMENT '删除标记',
  PRIMARY KEY (`id`),
  KEY `sys_role_del_flag` (`del_flag`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8 COMMENT='角色表';

-- ----------------------------
-- Records of sys_role
-- ----------------------------
INSERT INTO `sys_role` VALUES ('21', '49', 'test', '8', '2,超级管理员', '2016-03-08 22:14:31', null, '2016-03-08 22:14:31', null, '0');
INSERT INTO `sys_role` VALUES ('22', '49', 'zhuan', '5', '2,超级管理员', '2016-03-08 22:18:25', '2,超级管理员', '2016-03-08 22:18:46', null, '0');
INSERT INTO `sys_role` VALUES ('23', '50', '数据测试', '9', '2,超级管理员', '2016-12-21 16:38:08', null, '2016-12-21 16:38:08', null, '0');
INSERT INTO `sys_role` VALUES ('24', '50', '所有数据', '1', '2,超级管理员', '2016-12-21 16:42:36', null, '2016-12-21 16:42:36', null, '0');
INSERT INTO `sys_role` VALUES ('25', '50', '所在公司及以下数据', '2', '2,超级管理员', '2016-12-21 16:43:26', null, '2016-12-21 16:43:26', null, '0');
INSERT INTO `sys_role` VALUES ('26', '50', '所在公司数据', '3', '2,超级管理员', '2016-12-21 16:43:53', '2,超级管理员', '2016-12-21 16:45:11', null, '0');
INSERT INTO `sys_role` VALUES ('27', '50', '所在部门及以下数据', '4', '2,超级管理员', '2016-12-21 16:44:19', '2,超级管理员', '2016-12-21 16:59:51', null, '0');
INSERT INTO `sys_role` VALUES ('28', '50', '所在部门数据', '5', '2,超级管理员', '2016-12-21 16:44:40', null, '2016-12-21 16:44:40', null, '0');
INSERT INTO `sys_role` VALUES ('29', '50', '本人数据', '8', '2,超级管理员', '2016-12-21 16:44:58', null, '2016-12-21 16:44:58', null, '0');
INSERT INTO `sys_role` VALUES ('30', null, 'shen', null, null, null, null, null, null, '0');

-- ----------------------------
-- Table structure for sys_role_office
-- ----------------------------
DROP TABLE IF EXISTS `sys_role_office`;
CREATE TABLE `sys_role_office` (
  `role_id` bigint(20) NOT NULL COMMENT '角色编号',
  `office_id` bigint(20) NOT NULL COMMENT '机构编号',
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `create_by` varchar(64) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `update_by` varchar(64) DEFAULT NULL,
  `update_date` datetime DEFAULT NULL,
  `del_flag` char(1) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='角色-机构';

-- ----------------------------
-- Records of sys_role_office
-- ----------------------------

-- ----------------------------
-- Table structure for sys_role_resource
-- ----------------------------
DROP TABLE IF EXISTS `sys_role_resource`;
CREATE TABLE `sys_role_resource` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `role_id` bigint(20) DEFAULT NULL,
  `resource_id` bigint(20) DEFAULT NULL,
  `create_by` varchar(64) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `update_by` varchar(64) DEFAULT NULL,
  `update_date` datetime DEFAULT NULL,
  `del_flag` char(1) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1538 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_role_resource
-- ----------------------------
INSERT INTO `sys_role_resource` VALUES ('1334', '21', '188', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1335', '21', '1', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1336', '21', '190', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1337', '21', '195', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1338', '21', '189', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1339', '21', '181', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1340', '21', '203', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1341', '21', '192', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1342', '21', '193', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1343', '21', '194', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1344', '21', '204', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1345', '21', '205', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1346', '21', '206', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1347', '21', '207', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1348', '21', '208', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1469', '22', '188', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1470', '22', '1', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1471', '22', '181', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1472', '22', '203', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1473', '22', '190', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1474', '22', '192', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1475', '22', '193', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1476', '22', '195', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1477', '22', '194', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1478', '22', '214', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1479', '22', '215', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1480', '22', '228', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1481', '22', '229', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1482', '22', '244', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1483', '22', '245', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1484', '22', '230', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1485', '22', '231', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1486', '22', '232', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1487', '22', '233', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1488', '22', '236', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1489', '22', '234', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1490', '22', '235', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1491', '22', '204', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1492', '22', '205', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1493', '22', '206', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1494', '22', '207', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1495', '22', '208', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1496', '23', '214', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1497', '23', '215', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1498', '23', '242', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1499', '23', '247', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1500', '23', '249', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1501', '23', '250', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1502', '24', '214', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1503', '24', '215', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1504', '24', '242', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1505', '24', '247', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1506', '24', '249', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1507', '24', '250', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1508', '25', '214', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1509', '25', '215', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1510', '25', '242', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1511', '25', '247', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1512', '25', '249', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1513', '25', '250', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1514', '28', '214', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1515', '28', '215', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1516', '28', '242', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1517', '28', '247', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1518', '28', '249', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1519', '28', '250', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1520', '29', '214', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1521', '29', '215', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1522', '29', '242', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1523', '29', '247', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1524', '29', '249', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1525', '29', '250', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1526', '26', '214', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1527', '26', '215', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1528', '26', '242', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1529', '26', '247', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1530', '26', '249', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1531', '26', '250', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1532', '27', '214', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1533', '27', '215', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1534', '27', '242', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1535', '27', '247', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1536', '27', '249', null, null, null, null, '0');
INSERT INTO `sys_role_resource` VALUES ('1537', '27', '250', null, null, null, null, '0');

-- ----------------------------
-- Table structure for sys_user
-- ----------------------------
DROP TABLE IF EXISTS `sys_user`;
CREATE TABLE `sys_user` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '编号',
  `company_id` bigint(20) DEFAULT NULL COMMENT '归属公司',
  `office_id` bigint(20) DEFAULT NULL COMMENT '归属部门',
  `username` varchar(100) DEFAULT NULL COMMENT '登录名',
  `password` varchar(100) DEFAULT NULL COMMENT '密码',
  `no` varchar(100) DEFAULT NULL COMMENT '工号',
  `name` varchar(100) DEFAULT NULL COMMENT '姓名',
  `email` varchar(200) DEFAULT NULL COMMENT '邮箱',
  `phone` varchar(200) DEFAULT NULL COMMENT '电话',
  `mobile` varchar(200) DEFAULT NULL COMMENT '手机',
  `user_type` char(1) DEFAULT '0' COMMENT '用户类型(0.普通 1.系统超级管理员)',
  `login_ip` varchar(100) DEFAULT NULL COMMENT '最后登陆IP',
  `login_date` datetime DEFAULT NULL COMMENT '最后登陆时间',
  `create_by` varchar(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) DEFAULT '0' COMMENT '删除标记',
  `status` char(1) DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `sys_user_office_id` (`office_id`),
  KEY `sys_user_company_id` (`company_id`),
  KEY `sys_user_update_date` (`update_date`),
  KEY `sys_user_del_flag` (`del_flag`),
  KEY `sys_user_login_name` (`username`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=42 DEFAULT CHARSET=utf8 COMMENT='用户表';

-- ----------------------------
-- Records of sys_user
-- ----------------------------
INSERT INTO `sys_user` VALUES ('27', '1', '1', 'admin', '86f3059b228c8acf99e69734b6bb32cc', '', 'admin', '', '', '', '0', '0:0:0:0:0:0:0:1', '2017-03-08 20:22:31', '2,超级管理员', '2015-11-06 14:01:01', '27,shen', '2017-03-08 20:22:31', '', '1', '0');
INSERT INTO `sys_user` VALUES ('33', '50', '51', 'geren', '8274aeaeadd1a6e2b4097cb03fa3fd93', '', '个人', '', '', '', '0', null, null, '2,超级管理员', '2016-12-21 16:38:48', null, '2016-12-21 16:38:48', '', '1', '0');
INSERT INTO `sys_user` VALUES ('34', '50', '50', 'bumen', '94a33792d99db0b5d42732477e08d8a0', '', '部门', '', '', '', '0', null, null, '2,超级管理员', '2016-12-21 16:39:20', null, '2016-12-21 16:39:20', '', '1', '0');
INSERT INTO `sys_user` VALUES ('35', '50', '50', '111111', '2e030f4ec30f015da3ffa0cdda972119', '', '本人', '', '', '', '1', '0:0:0:0:0:0:0:1', '2017-03-28 16:39:01', '2,超级管理员', '2016-12-21 16:50:59', '35,本人', '2017-03-28 16:39:01', '', '0', '0');
INSERT INTO `sys_user` VALUES ('36', '50', '50', '222222', 'd76b7a7eea5c7d4a051eed8f61c03986', '', '所在部门数据', '', '', '', '0', '0:0:0:0:0:0:0:1', '2016-12-21 17:26:37', '2,超级管理员', '2016-12-21 16:51:31', '36,所在部门数据', '2016-12-21 17:26:37', '', '0', '0');
INSERT INTO `sys_user` VALUES ('37', '50', '50', '333333', '9e2407837a557fe8f8116667084471c4', '', '所在部门及以下数据', '', '', '', '0', '0:0:0:0:0:0:0:1', '2016-12-21 16:58:13', '2,超级管理员', '2016-12-21 16:51:58', '37,所在部门及以下数据', '2016-12-21 16:58:13', '', '0', '0');
INSERT INTO `sys_user` VALUES ('39', '50', '50', '555555', '', '', '所在公司及以下数据', '22@qq.com', '', '13146587711', '0', '0:0:0:0:0:0:0:1', '2016-12-21 17:03:38', '2,超级管理员', '2016-12-21 16:52:57', '39,所在公司及以下数据', '2016-12-21 17:03:38', '', '0', '0');
INSERT INTO `sys_user` VALUES ('41', null, null, '111', '', null, '111', '111@qq.com', null, '13146587722', '0', null, null, null, null, null, null, null, '0', '0');

-- ----------------------------
-- Table structure for sys_user_role
-- ----------------------------
DROP TABLE IF EXISTS `sys_user_role`;
CREATE TABLE `sys_user_role` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `role_id` bigint(20) DEFAULT NULL,
  `user_id` bigint(20) DEFAULT NULL,
  `create_by` varchar(64) DEFAULT NULL,
  `create_date` datetime DEFAULT NULL,
  `update_by` varchar(64) DEFAULT NULL,
  `update_date` datetime DEFAULT NULL,
  `del_flag` char(1) DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=98 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of sys_user_role
-- ----------------------------
INSERT INTO `sys_user_role` VALUES ('94', '21', '32', null, null, null, null, '0');
INSERT INTO `sys_user_role` VALUES ('95', '21', '33', null, null, null, null, '0');
INSERT INTO `sys_user_role` VALUES ('96', '21', '31', null, null, null, null, '0');
INSERT INTO `sys_user_role` VALUES ('97', '21', '39', null, null, null, null, '0');

-- ----------------------------
-- Table structure for t_blog
-- ----------------------------
DROP TABLE IF EXISTS `t_blog`;
CREATE TABLE `t_blog` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(200) DEFAULT NULL COMMENT '标题',
  `summary` text COMMENT '摘要',
  `releaseDate` datetime DEFAULT NULL COMMENT '发布时间',
  `clickHit` int(11) DEFAULT NULL,
  `replyHit` int(11) DEFAULT '0',
  `content` longtext,
  `typeId` bigint(11) DEFAULT NULL,
  `keyWord` varchar(200) DEFAULT NULL,
  `state` int(11) DEFAULT NULL,
  `blogger_id` bigint(20) DEFAULT NULL,
  `typename` varchar(255) DEFAULT NULL,
  `img` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `typeId` (`typeId`)
) ENGINE=InnoDB AUTO_INCREMENT=127 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_blog
-- ----------------------------
INSERT INTO `t_blog` VALUES ('87', 'Spring MVC注解故障追踪记', 'Spring MVC是美团点评很多团队使用的Web框架。在基于Spring MVC的项目里，注解的使用几乎遍布在项目中的各个模块，有Java提供的注解，如：@Override、@Deprecated等；也有Spring提供的注解，如：@Controller、@Service、@Autowired等；同时还可能', '2016-10-27 19:16:09', '0', '0', '<p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Spring MVC是美团点评很多团队使用的Web框架。在基于Spring MVC的项目里，注解的使用几乎遍布在项目中的各个模块，有Java提供的注解，如：@Override、@Deprecated等；也有Spring提供的注解，如：@Controller、@Service、@Autowired等；同时还可能有自定义注解等。注解一方面可以作为标记说明使用；另一方面也能帮助我们省去一些配置工作，加快开发速度。注解就像语法糖一样，我有时候会“随心所欲”的把它带入到代码里，一直乐 (hú)此(lǐ)不(hú)疲(tú)。直到笔者遇到了一个由@Service注解引发的空指针问题时，才真正意识到乱用注解的危害，同时也有了下文的深入探讨！</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">事件起因</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">接到业务方需求需要封装上游的一个HTTP接口来提供系统内的服务支持，我封装这个接口并通过本地单元测试后就部署到测试环境中开始测试了。没想到一测试就报NullPointerException异常，异常栈信息如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">ERROR [qtp384587033-86] 2015-12-21 16:29:00.905 com.meituan.trip.mobile.hermes.common.utils.HttpClientUtils.doRequest(HttpClientUtils.java:359) HttpClientUtils.doRequest invoke get error, url:nullmt/api/test/v1/query?id=123456\r\n &nbsp;org.apache.http.client.ClientProtocolException\r\n &nbsp; &nbsp;at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:186) ~[httpclient-4.3.5.jar:4.3.5]\r\n &nbsp;…\r\n &nbsp;Caused by: org.apache.http.ProtocolException: Target host is not specified\r\n &nbsp;...</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">从异常栈上可以清楚的看出错误原因，是由于请求地址不标准（以 http:// 开头）导致的。这个错误其实很诡异，因为我已经在配置文件中通过XML的方式注入URL属性值了，而且在本地写单元测试都能通过，为什么还会属性注入失败呢？经过反复的检查和尝试，发现只要在class的定义上加@Service注解，问题就会重现，去掉则正常运行。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">问题定位</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在保留@Service注解的情况下，重新在本地部署并启动工程，从启动日志上发现此实现Bean被替换过：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;INFO [main] 2015-12-21 16:28:47.078 org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:665) Overriding bean definition for bean &#39;queryPartnerImpl&#39;: replacing [Generic bean: class [com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [/Users/hanzhankang/hermes/hermes-sal/target/classes/com/meituan/trip/mobile/hermes/sal/meilv/impl/QueryPartnerImpl.class]] with [Generic bean: class [com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [sal/service-outer.xml]]</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Spring Bean发生替换是因为在同一个WebApplicationContext下，重复注入同一名称的Bean实例。从上面的日志中我们可以看出，queryPartnerImpl对象最终保留的是通过[sal/service-outer.xml]配置文件注入的Bean，在这个配置文件里详细的设置了相关属性。从替换结果来看，即使发生过替换也不会影响程序到正确运行。那问题会出在哪里呢？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">经过反复调试发现，只要在QueryPartnerImpl类的定义前面加上@Service注解，问题就会重现。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">问题排查及解决</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">遇到如此诡异的问题，且又不能确定此问题是否是系统其他环境配置导致的时候，不妨可以从这个类在系统中的实例对象身上着手分析，最简单的办法是通过Jmap查询系统中的对象实例个数。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">使用Jmap查询QueryPartnerImpl类在系统中的实例个数及结果：（Jmap是JDK自带的堆分析工具Java Memory Map，可以通过此工具打印出某个Java进程内存内的所有对象大小和数量；建议在测试环境中使用jmap -histo:live命令查询，执行此命令会触发一次Full GC）</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp; &nbsp;$ jmap -histo:live 20881 | grep QueryPartnerImpl\r\n &nbsp; &nbsp;1354: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 80 &nbsp;com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">查看发现系统中居然有2个实例！这和我们对“Spring创建Bean默认是单例的”认知不符，那就把进程Dump出来详细解刨下这2个对象吧！通过Jmap的dump参数把进程镜像dump出来：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;$ jmap -dump:format=b,file=/tmp/heap.bin 20881\r\n &nbsp;Dumping heap to /private/tmp/dump.data ...\r\n &nbsp;Heap dump file created</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">此时可以使用MAT（内存分析工具，Memory Analysis Tool）并配合Jhat快速定位到此类的实例对象上，通过对象间的引用关系来查找定位原因。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">首先通过Jhat工具来查看QueryPartnerImpl对象及对象间的引用关系：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;$ jhat &nbsp;/tmp/heap.bin\r\n &nbsp;...........................................................................\r\n &nbsp;Snapshot resolved.\r\n &nbsp;Started HTTP server on port 7000\r\n &nbsp;Server is ready.</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">（Jhat是JDK自带的堆分析工具Java Heap Analyse Tool，可以将堆中的对象以HTML的形式显示出来，包括对象的数量、大小等，默认端口7000。）</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过Jhat加载dump文件成功后，访问localhost:7000进入对象列表页，此时通过关键字“QueryPartnerImpl”搜索定位到具体的类上，再点击进去查看详情：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"> &nbsp;Class 0x6c36938b0\r\n &nbsp;class com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl\r\n &nbsp;Instances （类的实例）\r\n &nbsp;Exclude subclasses\r\n &nbsp;Include subclasses\r\n &nbsp;References summary by Type（对象的引用关系）\r\n &nbsp;References summary by type</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">点击链接Instances -&gt; Exclude subclasses查看类的实例对象：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><code style=\"padding: 0px 0.5em; margin: 0px; color: rgb(0, 0, 0); font-family: monospace, monospace; font-size: 1em; border-radius: 0.3em; border: 1px solid rgb(204, 204, 204); background: rgb(238, 238, 238);\">com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl@0x6c41b6f80 (64 bytes)</code><br style=\"padding: 0px; margin: 0px;\"/><code style=\"padding: 0px 0.5em; margin: 0px; color: rgb(0, 0, 0); font-family: monospace, monospace; font-size: 1em; border-radius: 0.3em; border: 1px solid rgb(204, 204, 204); background: rgb(238, 238, 238);\">com.meituan.trip.mobile.hermes.sal.meilv.impl.QueryPartnerImpl@0x7aeafac20 (64 bytes)</code></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这2个就是QueryPartnerImpl在系统中创建的2个实例对象，点击查看每个对象属性注入情况：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">QueryPartnerImpl@0x6c41b6f80 (64 bytes)\r\n属性：\r\nclientId (L) : trip_trade (28 bytes)\r\nclientSecret (L) : 6ee952489a93b51b1ffcadd040ca562e (28 bytes)\r\nconnectTimeout (I) : 15000\r\nencode (L) : UTF-8 (28 bytes)\r\nlog (L) : org.apache.logging.slf4j.Log4jLogger@0x6c3f26240 (41 bytes)\r\nreadTimeout (I) : 15000\r\nurl (L) : &nbsp;http://test.url.meituan.com/ &nbsp;(28 bytes)\r\n\r\n引用关系：\r\ncom.meituan.trip.mobile.hermes.biz.cs.GroupTravelCsOrderDetailBiz@0x6c41b6f60 (48 bytes) : field queryPartnerImpl\r\njava.util.concurrent.ConcurrentHashMap$Node@0x6c4420fe8 (44 bytes) : field val\r\norg.springframework.beans.factory.support.DisposableBeanAdapter@0x6c41b79f0 (66 bytes) : field bean\r\ncom.meituan.trip.mobile.hermes.biz.driven.listener.snapshot.GroupTravelOrderSnapshotEventListener@0x7ae57c490 (96 bytes) : field queryPartnerImpl\r\ncom.meituan.trip.mobile.hermes.web.controller.api.ApiAliveController@0x6c3619fe8 (24 bytes) : field queryPartnerImpl\r\n\r\nQueryPartnerImpl@0x7aeafac20 (64 bytes)\r\n属性：\r\nclientId (L) : &lt;null&gt;\r\nclientSecret (L) : &lt;null&gt;\r\nconnectTimeout (I) : 0\r\nencode (L) : &lt;null&gt;\r\nlog (L) : org.apache.logging.slf4j.Log4jLogger@0x6c3f26240 (41 bytes)\r\nreadTimeout (I) : 0\r\nurl (L) : &lt;null&gt;\r\n引用关系：\r\norg.springframework.beans.factory.support.DisposableBeanAdapter@0x7aeccfd40 (66 bytes) : field bean\r\njava.util.concurrent.ConcurrentHashMap$Node@0x7aeb05b18 (44 bytes) : field val\r\ncom.meituan.trip.mobile.hermes.biz.cs.GroupTravelCsOrderDetailBiz@0x7aeafab88 (48 bytes) : field queryPartnerImpl\r\ncom.meituan.trip.mobile.hermes.web.controller.api.ApiAliveController@0x7aeb80228 (24 bytes) : field queryPartnerImpl\r\ncom.meituan.trip.mobile.hermes.biz.driven.listener.snapshot.GroupTravelOrderSnapshotEventListener@0x7aeb03908 (96 bytes) : field queryPartnerImpl</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">结果发现QueryPartnerImpl@0x6c41b6f80对象的属性是注入成功的，而QueryPartnerImpl@0x7aeafac20对象的属性却注入失败。从这里可以初步判断：导致错误的原因是我们使用的对象是属性注入失败的QueryPartnerImpl@0x7aeafac20。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">问题排除到这里，我们不禁有2个疑问：<br style=\"padding: 0px; margin: 0px;\"/>1）<strong style=\"padding: 0px; margin: 0px;\">为什么会出现2个对象？</strong><br style=\"padding: 0px; margin: 0px;\"/>从Spring启动日志看到queryPartnerImpl有被替换的情况，其实替换的结果是把通过@Service注入的Bean替换成了用XML定义并注入的Bean，这也只能有1个对象，另一个对象怎么出现的？<br style=\"padding: 0px; margin: 0px;\"/>2）<strong style=\"padding: 0px; margin: 0px;\">谁在使用这2个对象？</strong><br style=\"padding: 0px; margin: 0px;\"/>既然错误已成事实，那是谁在使用这个属性注入失败的QueryPartnerImpl@0x7aeafac20呢？而且我们每次都是使用它，而不是属性注入成功的QueryPartnerImpl@0x6c41b6f80。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过Jhat展示的对象引用关系看，只有org.springframework.beans.factory.support.DisposableBeanAdapter和java.util.concurrent.ConcurrentHashMap$Node 比较可疑。但DisposableBeanAdapter是用来管理Spring Bean的销毁，所以和本事故无关，重点就落在java.util.concurrent.ConcurrentHashMap$Node 上了。<br style=\"padding: 0px; margin: 0px;\"/>通过MAT工具来分析java.util.concurrent.ConcurrentHashMap$Node@0x7aeb05b18的引用关系，通过对象查找工具并输入对象的内存地址定位：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/52373.png\" width=\"600\" title=\"通过MAT工具查找对象\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">可直接查看此对象：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/649372.png\" width=\"600\" title=\"对象查找结果\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">选中这个对象，右键打开菜单选项，选择：Lists objects -&gt; with incoming references查看都有哪些对象持有此对象（with outgoing references表示此对象拥有哪些对象）：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/270014.png\" width=\"600\" title=\"查看对象引用关系1\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/596625.png\" width=\"600\" title=\"查看对象引用关系2\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过上面对象引用追踪路径可以看到，queryPartnerImpl@0x7aeafac20最终被DispatcherServlet@0x7ae577e00对象引用。<br style=\"padding: 0px; margin: 0px;\"/>采用同样的方式来分析queryPartnerImpl@0x6c41b6f80的对象引用关系：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/434085.png\" width=\"600\" title=\"查看对象引用关系3\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/480991.png\" width=\"600\" title=\"查看对象引用关系4\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">queryPartnerImpl@0x6c41b6f80最终被ContextLoaderListener@0x6c358f7f8引用。<br style=\"padding: 0px; margin: 0px;\"/>通过对比发现:</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">queryPartnerImpl@0x6c41b6f80 被 XmlWebApplicationContext@0x6c358f810 引用，而 XmlWebApplicationContext@0x6c358f810 又被 ContextLoaderListener@0x6c358f7f8 引用;\r\nqueryPartnerImpl@0x7aeafac20 被 XmlWebApplicationContext@0x7ae9ca338 引用，而 XmlWebApplicationContext@0x7ae9ca338 又被 DispatcherServlet@0x7ae577e00 引用。</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">ContextLoaderListener和DispatcherServlet对我们来说非常熟悉，这是在Spring MVC项目中的web.xml中配置的，ContextLoaderListener用来初始化root WebApplicationContext；DispatcherServlet是请求分发控制器，启动时也会初始化一个自己的WebApplicationContext，并设置parent为root WebApplicationContext，从而形成常说的“父子关系”。DispatcherServlet如果在自己的WebApplicationContext能找到需要用的对象就直接使用，只有在找不到对象的情况下才会去查找父容器里的。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">到这里我们找到了引起事故发生的根本原因，但是我们还需要找出引发事故的罪魁祸首！通过前面的分析我们知道这和ContextLoaderListener、DispatcherServlet有关系，那就定位到web.xml的配置文件中来：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/597466.png\" width=\"600\" title=\"web.xml的配置\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在spring/spring-servlet.xml配置文件中我们开启了注解扫描功能，并且从项目路径“com.meituan.trip.mobile.hermes”开始扫描：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/608828.png\" width=\"600\" title=\"spring-servlet.xml的配置\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">我们知道Spring会通过@Service注解去实例化一个Bean，属性如果没有通过注解注入进来的话，就用默认值。在此配置文件后面就再没有对queryPartnerImpl的定义，也就不会发生替换的情况。DispatcherServlet只能获得由注解加载的半成品Bean。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">再来看看ContextLoaderListener的配置文件applicationContext.xml：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/499078.png\" width=\"600\" title=\"applicationContext.xml的配置\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">我们在applicationContext.xml中也同样开启了注解扫描功能，也是从项目路径“com.meituan.trip.mobile.hermes”开始扫描，但是在下文的sal/service-out.xml配置文件中，又重新对queryPartnerImpl通过XML定义，所以会发生替换现象。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">到这里我们才最终搞清楚发生这次事故的最根本原因，解决办法是要让整个系统中只有一个属性注入成功的queryPartnerImpl对象，途径有如下几种：<br style=\"padding: 0px; margin: 0px;\"/>1）删除@Service注解：这个方法治标不治本，因为配置<context:annotation-config style=\"padding: 0px; margin: 0px;\">、<context:component-scan style=\"padding: 0px; margin: 0px;\">&nbsp;注解扫描功能后会开启包括@Service在内的超过6种注解，而这些注解部分在用；<br style=\"padding: 0px; margin: 0px;\"/>2）扫描隔离：通过配置<context:component-scan style=\"padding: 0px; margin: 0px;\">的属性use-default-filters并配合include-filter/exclude-filter实现扫描过滤，只扫描指定注解。<br style=\"padding: 0px; margin: 0px;\"/>修改后的spring-servlet.xml配置（applicationContext.xml配置也需要做调整）：</context:component-scan></context:component-scan></context:annotation-config></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/873114.png\" width=\"600\" title=\"修改后的spring-servlet.xml配置\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">use-default-filters＝true，表示Spring将会创建那些被@Component, @Repository, @Service 或 @Controller等注解标注的Bean，默认值为true。如果use-default-filters＝true，同时使用<context:exclude-filter style=\"padding: 0px; margin: 0px;\">并指定注解类，表示不扫描指定base-package路径下的此注解；如果use-default-filters＝false，同时使用<context:include-filter style=\"padding: 0px; margin: 0px;\">并指定注解类，表示扫描指定base-package路径下面的此注解。</context:include-filter></context:exclude-filter></p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">问题总结</h2><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>使用注解并不一定会引起错误，但是注解要使用规范，不能乱用。如果通过注解注入，属性值最好也要通过注解方式注入；</li><li>注解扫描功能虽然很强大、很方便，但是要注意区分扫描范围及过滤特定注解；</li><li>单元测试能通过的原因：我们一般只指定加载一个配置文件作为测试环境，类实例只会出现一个，故能测试通过；</li><li>最好最重要的一点就是在使用任何框架时，最好按&quot;Best Practice&quot;规范，避免出现一些莫名其妙的问题。</li></ol><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">进一步探讨</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过阅读Spring源码中涉及ContextLoaderListener和DispatcherServlet的部分学习到，ContextLoaderListener在Context初始化的时候会创建一个root WebApplicationContext，并将此对象存储在ServletContext中，Key为：WebApplicationContext.class.getName() + &quot;.ROOT”；DispatcherServlet在初始化过程也实例化了一个自己的WebApplicationContext，设置在ServletContext中的key为：<br style=\"padding: 0px; margin: 0px;\"/>FrameworkServlet.class.getName() + &quot;.CONTEXT.”+ getServletName()，同时设置此对象的parent为 ContextLoaderListener定义的 root WebApplicationContext。DispatcherServlet所创建的WebApplicationContext被称为子容器，子容器可以访问父容器中的内容，但父容器不能访问子容器中的内容。<br style=\"padding: 0px; margin: 0px;\"/>Spring官方在介绍Spring MVC的同时，也给我们介绍了WebApplicationContext的继承关系：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/springmvc_service_annotation/309178.png\" title=\"WebApplicationContext的继承关系\" style=\"padding: 0px 10px; margin: auto; max-width: 100%; border: 0px; vertical-align: middle; display: block;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">从图中可以看出，每个DispatcherServlet都会去实例化一个自己的WebApplicationContext，而这个WebApplicationContext可以获得root WebApplicationContext中已经实例化好的Bean。</p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('88', '分布式系统互斥性与幂等性问题的分析与解决', '前言随着互联网信息技术的飞速发展，数据量不断增大，业务逻辑也日趋复杂，对系统的高并发访问、海量数据处理的场景也越来越多。如何用较低成本实现系统的高可用、易伸缩、可扩展等目标就显得越发重要。为了解决这一系列问题，系统架构也在不断演进。传统的集中式系统已经逐渐无法满足要求，分布式系统被使用在更多的场景中。分布式系', '2016-10-27 19:19:11', '0', '0', '<h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">前言</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">随着互联网信息技术的飞速发展，数据量不断增大，业务逻辑也日趋复杂，对系统的高并发访问、海量数据处理的场景也越来越多。如何用较低成本实现系统的高可用、易伸缩、可扩展等目标就显得越发重要。为了解决这一系列问题，系统架构也在不断演进。传统的集中式系统已经逐渐无法满足要求，分布式系统被使用在更多的场景中。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式系统由独立的服务器通过网络松散耦合组成。在这个系统中每个服务器都是一台独立的主机，服务器之间通过内部网络连接。分布式系统有以下几个特点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>可扩展性：可通过横向水平扩展提高系统的性能和吞吐量。</li><li>高可靠性：高容错，即使系统中一台或几台故障，系统仍可提供服务。</li><li>高并发性：各机器并行独立处理和计算。</li><li>廉价高效：多台小型机而非单台高性能机。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">然而，在分布式系统中，其环境的复杂度、网络的不确定性会造成诸如时钟不一致、“拜占庭将军问题”（Byzantine failure）等。存在于集中式系统中的机器宕机、消息丢失等问题也会在分布式环境中变得更加复杂。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">基于分布式系统的这些特征，有两种问题逐渐成为了分布式环境中需要重点关注和解决的典型问题：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>互斥性问题。</li><li>幂等性问题。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">今天我们就针对这两个问题来进行分析。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">互斥性问题</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">先看两个常见的例子：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">例1：</strong>某服务记录关键数据X，当前值为100。A请求需要将X增加200；同时，B请求需要将X减100。<br style=\"padding: 0px; margin: 0px;\"/>在理想的情况下，A先读取到X=100，然后X增加200，最后写入X=300。B请求接着从读取X=300，减少100，最后写入X=200。<br style=\"padding: 0px; margin: 0px;\"/>然而在真实情况下，如果不做任何处理，则可能会出现：A和B同时读取到X=100；A写入之前B读取到X；B比A先写入等等情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">例2：</strong>某服务提供一组任务，A请求随机从任务组中获取一个任务；B请求随机从任务组中获取一个任务。<br style=\"padding: 0px; margin: 0px;\"/>在理想的情况下，A从任务组中挑选一个任务，任务组删除该任务，B从剩下的的任务中再挑一个，任务组删除该任务。<br style=\"padding: 0px; margin: 0px;\"/>同样的，在真实情况下，如果不做任何处理，可能会出现A和B挑中了同一个任务的情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上的两个例子，都存在操作互斥性的问题。互斥性问题用通俗的话来讲，就是对共享资源的抢占问题。如果不同的请求对同一个或者同一组资源读取并修改时，无法保证按序执行，无法保证一个操作的原子性，那么就很有可能会出现预期外的情况。因此操作的互斥性问题，也可以理解为一个需要保证时序性、原子性的问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在传统的基于数据库的架构中，对于数据的抢占问题往往是通过数据库事务（ACID）来保证的。在分布式环境中，出于对性能以及一致性敏感度的要求，使得分布式锁成为了一种比较常见而高效的解决方案。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">事实上，操作互斥性问题也并非分布式环境所独有，在传统的多线程、多进程情况下已经有了很好的解决方案。因此在研究分布式锁之前，我们先来分析下这两种情况的解决方案，以期能够对分布式锁的解决方案提供一些实现思路。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">多线程环境解决方案及原理</h2><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">解决方案</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">《Thinking in Java》书中写到：</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">基本上所有的并发模式在解决线程冲突问题的时候，都是采用序列化访问共享资源的方案。</p></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在多线程环境中，线程之间因为公用一些存储空间，冲突问题时有发生。解决冲突问题最普遍的方式就是用互斥锁把该资源或对该资源的操作保护起来。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Java JDK中提供了两种互斥锁Lock和synchronized。不同的线程之间对同一资源进行抢占，该资源通常表现为某个类的普通成员变量。因此，利用ReentrantLock或者synchronized将共享的变量及其操作锁住，即可基本解决资源抢占的问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面来简单聊一聊两者的实现原理。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">原理</h3><h4 id=\"reentrantlock\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">ReentrantLock</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">ReentrantLock主要利用CAS+CLH队列来实现。它支持公平锁和非公平锁，两者的实现类似。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>CAS：Compare and Swap，比较并交换。CAS有3个操作数：内存值V、预期值A、要修改的新值B。当且仅当预期值A和内存值V相同时，将内存值V修改为B，否则什么都不做。该操作是一个原子操作，被广泛的应用在Java的底层实现中。在Java中，CAS主要是由sun.misc.Unsafe这个类通过JNI调用CPU底层指令实现。</li><li>CLH队列：带头结点的双向非循环链表(如下图所示)：</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/distributed-system-mutually-exclusive-idempotence-cerberus-gtis/clh_queue.png\" alt=\"CLH队列\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">ReentrantLock的基本实现可以概括为：先通过CAS尝试获取锁。如果此时已经有线程占据了锁，那就加入CLH队列并且被挂起。当锁被释放之后，排在CLH队列队首的线程会被唤醒，然后CAS再次尝试获取锁。在这个时候，如果：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>非公平锁：如果同时还有另一个线程进来尝试获取，那么有可能会让这个线程抢先获取；</li><li>公平锁：如果同时还有另一个线程进来尝试获取，当它发现自己不是在队首的话，就会排到队尾，由队首的线程获取到锁。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面分析下两个片段：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"Java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">nonfairTryAcquire</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">int</span> acquires)</span> </span>{ &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> Thread current = Thread.currentThread(); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">int</span> c = getState(); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (c == <span class=\"number\" style=\"padding: 0px; margin: 0px;\">0</span>) { &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (compareAndSetState(<span class=\"number\" style=\"padding: 0px; margin: 0px;\">0</span>, acquires)) {\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;setExclusiveOwnerThread(current); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n &nbsp; &nbsp; &nbsp; &nbsp;}\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">else</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (current == getExclusiveOwnerThread()) { &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">int</span> nextc = c + acquires; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (nextc &lt; <span class=\"number\" style=\"padding: 0px; margin: 0px;\">0</span>) <span class=\"comment\" style=\"padding: 0px; margin: 0px;\">// overflow</span>\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">throw</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">new</span> Error(<span class=\"string\" style=\"padding: 0px; margin: 0px;\">&quot;Maximum lock count exceeded&quot;</span>);\r\n &nbsp; &nbsp; &nbsp; &nbsp;setState(nextc); &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">false</span>;\r\n}</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在尝试获取锁的时候，会先调用上面的方法。如果状态为0，则表明此时无人占有锁。此时尝试进行set，一旦成功，则成功占有锁。如果状态不为0，再判断是否是当前线程获取到锁。如果是的话，将状态+1，因为此时就是当前线程，所以不用CAS。这也就是可重入锁的实现原理。</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"Java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">acquireQueued</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> Node node, <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">int</span> arg)</span> </span>{ &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> failed = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">try</span> { &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> interrupted = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">false</span>; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">for</span> (;;) { &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> Node p = node.predecessor(); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (p == head &amp;&amp; tryAcquire(arg)) {\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;setHead(node);\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;p.next = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>; <span class=\"comment\" style=\"padding: 0px; margin: 0px;\">// help GC</span>\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;failed = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">false</span>; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> interrupted;\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;parkAndCheckInterrupt())\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;interrupted = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n &nbsp; &nbsp; &nbsp; &nbsp;}\r\n &nbsp; &nbsp;} <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">finally</span> { &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (failed)\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cancelAcquire(node);\r\n &nbsp; &nbsp;}\r\n}<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">private</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">final</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">parkAndCheckInterrupt</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">()</span> </span>{\r\n &nbsp; &nbsp;LockSupport.park(<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">this</span>); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> Thread.interrupted();\r\n}</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">该方法是在尝试获取锁失败加入CHL队尾之后，如果发现前序节点是head，则CAS再尝试获取一次。否则，则会根据前序节点的状态判断是否需要阻塞。如果需要阻塞，则调用LockSupport的park方法阻塞该线程。</p><h4 id=\"synchronized\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">synchronized</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在Java语言中存在两种内建的synchronized语法：synchronized语句、synchronized方法。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>synchronized语句：当源代码被编译成字节码的时候，会在同步块的入口位置和退出位置分别插入monitorenter和monitorexit字节码指令;</li><li>synchronized方法：在Class文件的方法表中将该方法的access_flags字段中的synchronized标志位置1。这个在specification中没有明确说明。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在Java虚拟机的specification中，有关于monitorenter和monitorexit字节码指令的详细描述：<a href=\"http://docs.oracle.com/Javase/specs/jvms/se7/html/jvms-6.html#jvms-6.5.monitorenter\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">http://docs.oracle.com/Javase/specs/jvms/se7/html/jvms-6.html#jvms-6.5.monitorenter</a>&nbsp;。</p><h5 id=\"monitorenter\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">monitorenter</h5><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">The objectref must be of type reference.<br style=\"padding: 0px; margin: 0px;\"/>Each object is associated with a monitor. A monitor is locked if and only if it has an owner. The thread that executes monitorenter attempts to gain ownership of the monitor associated with objectref, as follows:</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>If the entry count of the monitor associated with objectref is zero, the thread enters the monitor and sets its entry count to one. The thread is then the owner of the monitor.</li><li>If the thread already owns the monitor associated with objectref, it reenters the monitor, incrementing its entry count.</li><li>If another thread already owns the monitor associated with objectref, the thread blocks until the monitor&#39;s entry count is zero, then tries again to gain ownership.</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">每个对象都有一个锁，也就是监视器（monitor）。当monitor被占有时就表示它被锁定。线程执行monitorenter指令时尝试获取对象所对应的monitor的所有权，过程如下：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>如果monitor的进入数为0，则该线程进入monitor，然后将进入数设置为1，该线程即为monitor的所有者;</li><li>如果线程已经拥有了该monitor，只是重新进入，则进入monitor的进入数加1;</li><li>如果其他线程已经占用了monitor，则该线程进入阻塞状态，直到monitor的进入数为0，再重新尝试获取monitor的所有权。</li></ul><h5 id=\"monitorexit\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">monitorexit</h5><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">The objectref must be of type reference.<br style=\"padding: 0px; margin: 0px;\"/>The thread that executes monitorexit must be the owner of the monitor associated with the instance referenced by objectref.<br style=\"padding: 0px; margin: 0px;\"/>The thread decrements the entry count of the monitor associated with objectref. If as a result the value of the entry count is zero, the thread exits the monitor and is no longer its owner. Other threads that are blocking to enter the monitor are allowed to attempt to do so.</p></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">执行monitorexit的线程必须是相应的monitor的所有者。<br style=\"padding: 0px; margin: 0px;\"/>指令执行时，monitor的进入数减1，如果减1后进入数为0，那线程退出monitor，不再是这个monitor的所有者。其他被这个monitor阻塞的线程可以尝试去获取这个monitor的所有权。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在JDK1.6及其之前的版本中monitorenter和monitorexit字节码依赖于底层的操作系统的Mutex Lock来实现的，但是由于使用Mutex Lock需要将当前线程挂起并从用户态切换到内核态来执行，这种切换的代价是非常昂贵的。然而在现实中的大部分情况下，同步方法是运行在单线程环境（无锁竞争环境）。如果每次都调用Mutex Lock将严重的影响程序的性能。因此在JDK 1.6之后的版本中对锁的实现做了大量的优化，这些优化在很大程度上减少或避免了Mutex Lock的使用。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">多进程的解决方案</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在多道程序系统中存在许多进程，它们共享各种资源，然而有很多资源一次只能供一个进程使用，这便是临界资源。多进程中的临界资源大致上可以分为两类，一类是物理上的真实资源，如打印机；一类是硬盘或内存中的共享数据，如共享内存等。而进程内互斥访问临界资源的代码被称为临界区。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对临界资源的互斥访问，JVM层面的锁就已经失去效力了。在多进程的情况下，主要还是利用操作系统层面的进程间通信原理来解决临界资源的抢占问题。比较常见的一种方法便是使用信号量（Semaphores）。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">信号量在POSIX标准下有两种，分别为有名信号量和无名信号量。无名信号量通常保存在共享内存中，而有名信号量是与一个特定的文件名称相关联。信号量是一个整数变量，有计数信号量和二值信号量两种。对信号量的操作，主要是P操作（wait）和V操作（signal）。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>P操作：先检查信号量的大小，若值大于零，则将信号量减1，同时进程获得共享资源的访问权限，继续执行；若小于或者等于零，则该进程被阻塞后，进入等待队列。</li><li>V操作：该操作将信号量的值加1，如果有进程阻塞着等待该信号量，那么其中一个进程将被唤醒。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">举个例子，设信号量为1，当一个进程A在进入临界区之前，先进行P操作。发现值大于零，那么就将信号量减为0，进入临界区执行。此时，若另一个进程B也要进去临界区，进行P操作，发现信号量等于0，则会被阻塞。当进程A退出临界区时，会进行V操作，将信号量的值加1，并唤醒阻塞的进程B。此时B就可以进入临界区了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这种方式，其实和多线程环境下的加解锁非常类似。因此用信号量处理临界资源抢占，也可以简单地理解为对临界区进行加锁。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过上面的一些了解，我们可以概括出解决互斥性问题，即资源抢占的基本方式为：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">对共享资源的操作前后（进入退出临界区）加解锁，保证不同线程或进程可以互斥有序的操作资源。</strong></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">加解锁方式，有显式的加解锁，如ReentrantLock或信号量；也有隐式的加解锁，如synchronized。那么在分布式环境中，为了保证不同JVM不同主机间不会出现资源抢占，那么同样只要对临界区加解锁就可以了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">然而在多线程和多进程中，锁已经有比较完善的实现，直接使用即可。但是在分布式环境下，就需要我们自己来实现分布式锁。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式环境下的解决方案——分布式锁</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">首先，我们来看看分布式锁的基本条件。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式锁条件</h3><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">基本条件</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">再回顾下多线程和多进程环境下的锁，可以发现锁的实现有很多共通之处，它们都需要满足一些最基本的条件：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>需要有存储锁的空间，并且锁的空间是可以访问到的。</li><li>锁需要被唯一标识。</li><li>锁要有至少两种状态。</li></ol><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">仔细分析这三个条件：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>存储空间</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">锁是一个抽象的概念，锁的实现，需要依存于一个可以存储锁的空间。在多线程中是内存，在多进程中是内存或者磁盘。更重要的是，这个空间是可以被访问到的。多线程中，不同的线程都可以访问到堆中的成员变量；在多进程中，不同的进程可以访问到共享内存中的数据或者存储在磁盘中的文件。但是在分布式环境中，不同的主机很难访问对方的内存或磁盘。这就需要一个都能访问到的外部空间来作为存储空间。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最普遍的外部存储空间就是数据库了，事实上也确实有基于数据库做分布式锁（行锁、version乐观锁），如quartz集群架构中就有所使用。除此以外，还有各式缓存如Redis、Tair、Memcached、Mongodb，当然还有专门的分布式协调服务Zookeeper，甚至是另一台主机。只要可以存储数据、锁在其中可以被多主机访问到，那就可以作为分布式锁的存储空间。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>唯一标识</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">不同的共享资源，必然需要用不同的锁进行保护，因此相应的锁必须有唯一的标识。在多线程环境中，锁可以是一个对象，那么对这个对象的引用便是这个唯一标识。多进程环境中，信号量在共享内存中也是由引用来作为唯一的标识。但是如果不在内存中，失去了对锁的引用，如何唯一标识它呢？上文提到的有名信号量，便是用硬盘中的文件名作为唯一标识。因此，在分布式环境中，只要给这个锁设定一个名称，并且保证这个名称是全局唯一的，那么就可以作为唯一标识。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>至少两种状态</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了给临界区加锁和解锁，需要存储两种不同的状态。如ReentrantLock中的status，0表示没有线程竞争，大于0表示有线程竞争；信号量大于0表示可以进入临界区，小于等于0则表示需要被阻塞。因此只要在分布式环境中，锁的状态有两种或以上：如有锁、没锁；存在、不存在等等，均可以实现。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">有了这三个条件，基本就可以实现一个简单的分布式锁了。下面以数据库为例，实现一个简单的分布式锁：<br style=\"padding: 0px; margin: 0px;\"/>数据库表，字段为锁的ID（唯一标识），锁的状态（0表示没有被锁，1表示被锁）。<br style=\"padding: 0px; margin: 0px;\"/>伪代码为：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"Java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">lock = mysql.get(id);<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">while</span>(lock.status == <span class=\"number\" style=\"padding: 0px; margin: 0px;\">1</span>) {\r\n &nbsp; &nbsp;sleep(<span class=\"number\" style=\"padding: 0px; margin: 0px;\">100</span>);\r\n}\r\nmysql.update(lock.status = <span class=\"number\" style=\"padding: 0px; margin: 0px;\">1</span>);\r\ndoSomething();\r\nmysql.update(lock.status = <span class=\"number\" style=\"padding: 0px; margin: 0px;\">0</span>);</code></pre><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">问题</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上的方式即可以实现一个粗糙的分布式锁，但是这样的实现，有没有什么问题呢？</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><p style=\"padding: 0px; margin-top: 0px; margin-bottom: 0px; font-size: 1em; word-wrap: break-word;\">问题1：锁状态判断原子性无法保证<br style=\"padding: 0px; margin: 0px;\"/>从读取锁的状态，到判断该状态是否为被锁，需要经历两步操作。如果不能保证这两步的原子性，就可能导致不止一个请求获取到了锁，这显然是不行的。因此，我们需要保证锁状态判断的原子性。</p></li><li><p style=\"padding: 0px; margin-top: 0px; margin-bottom: 0px; font-size: 1em; word-wrap: break-word;\">问题2：网络断开或主机宕机，锁状态无法清除<br style=\"padding: 0px; margin: 0px;\"/>假设在主机已经获取到锁的情况下，突然出现了网络断开或者主机宕机，如果不做任何处理该锁将仍然处于被锁定的状态。那么之后所有的请求都无法再成功抢占到这个锁。因此，我们需要在持有锁的主机宕机或者网络断开的时候，及时的释放掉这把锁。</p></li><li><p style=\"padding: 0px; margin-top: 0px; margin-bottom: 0px; font-size: 1em; word-wrap: break-word;\">问题3：无法保证释放的是自己上锁的那把锁<br style=\"padding: 0px; margin: 0px;\"/>在解决了问题2的情况下再设想一下，假设持有锁的主机A在临界区遇到网络抖动导致网络断开，分布式锁及时的释放掉了这把锁。之后，另一个主机B占有了这把锁，但是此时主机A网络恢复，退出临界区时解锁。由于都是同一把锁，所以A就会将B的锁解开。此时如果有第三个主机尝试抢占这把锁，也将会成功获得。因此，我们需要在解锁时，确定自己解的这个锁正是自己锁上的。</p></li></ul><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">进阶条件</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果分布式锁的实现，还能再解决上面的三个问题，那么就可以算是一个相对完整的分布式锁了。然而，在实际的系统环境中，还会对分布式锁有更高级的要求。</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>可重入：线程中的可重入，指的是外层函数获得锁之后，内层也可以获得锁，ReentrantLock和synchronized都是可重入锁；衍生到分布式环境中，一般仍然指的是线程的可重入，在绝大多数分布式环境中，都要求分布式锁是可重入的。</li><li>惊群效应（Herd Effect）：在分布式锁中，惊群效应指的是，在有多个请求等待获取锁的时候，一旦占有锁的线程释放之后，如果所有等待的方都同时被唤醒，尝试抢占锁。但是这样的情况会造成比较大的开销，那么在实现分布式锁的时候，应该尽量避免惊群效应的产生。</li><li>公平锁和非公平锁：不同的需求，可能需要不同的分布式锁。非公平锁普遍比公平锁开销小。但是业务需求如果必须要锁的竞争者按顺序获得锁，那么就需要实现公平锁。</li><li>阻塞锁和自旋锁：针对不同的使用场景，阻塞锁和自旋锁的效率也会有所不同。阻塞锁会有上下文切换，如果并发量比较高且临界区的操作耗时比较短，那么造成的性能开销就比较大了。但是如果临界区操作耗时比较长，一直保持自旋，也会对CPU造成更大的负荷。</li></ol><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">保留以上所有问题和条件，我们接下来看一些比较典型的实现方案。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">典型实现</h3><h4 id=\"zookeeper-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">ZooKeeper的实现</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">ZooKeeper（以下简称“ZK”）中有一种节点叫做顺序节点，假如我们在/lock/目录下创建3个节点，ZK集群会按照发起创建的顺序来创建节点，节点分别为/lock/0000000001、/lock/0000000002、/lock/0000000003。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">ZK中还有一种名为临时节点的节点，临时节点由某个客户端创建，当客户端与ZK集群断开连接，则该节点自动被删除。EPHEMERAL_SEQUENTIAL为临时顺序节点。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">根据ZK中节点是否存在，可以作为分布式锁的锁状态，以此来实现一个分布式锁，下面是分布式锁的基本逻辑：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>客户端调用create()方法创建名为“/dlm-locks/lockname/lock-”的临时顺序节点。</li><li>客户端调用getChildren(“lockname”)方法来获取所有已经创建的子节点。</li><li>客户端获取到所有子节点path之后，如果发现自己在步骤1中创建的节点是所有节点中序号最小的，那么就认为这个客户端获得了锁。</li><li>如果创建的节点不是所有节点中需要最小的，那么则监视比自己创建节点的序列号小的最大的节点，进入等待。直到下次监视的子节点变更的时候，再进行子节点的获取，判断是否获取锁。</li></ol><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">释放锁的过程相对比较简单，就是删除自己创建的那个子节点即可，不过也仍需要考虑删除节点失败等异常情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">开源的基于ZK的Menagerie的源码就是一个典型的例子：<a href=\"https://github.com/sfines/menagerie\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">https://github.com/sfines/menagerie</a>&nbsp;。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Menagerie中的lock首先实现了可重入锁，利用ThreadLocal存储进入的次数，每次加锁次数加1，每次解锁次数减1。如果判断出是当前线程持有锁，就不用走获取锁的流程。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过tryAcquireDistributed方法尝试获取锁，循环判断前序节点是否存在，如果存在则监视该节点并且返回获取失败。如果前序节点不存在，则再判断更前一个节点。如果判断出自己是第一个节点，则返回获取成功。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了在别的线程占有锁的时候阻塞，代码中使用JUC的condition来完成。如果获取尝试锁失败，则进入等待且放弃localLock，等待前序节点唤醒。而localLock是一个本地的公平锁，使得condition可以公平的进行唤醒，配合循环判断前序节点，实现了一个公平锁。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这种实现方式非常类似于ReentrantLock的CHL队列，而且zk的临时节点可以直接避免网络断开或主机宕机，锁状态无法清除的问题，顺序节点可以避免惊群效应。这些特性都使得利用ZK实现分布式锁成为了最普遍的方案之一。</p><h4 id=\"redis-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Redis的实现</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Redis的分布式缓存特性使其成为了分布式锁的一种基础实现。通过Redis中是否存在某个锁ID，则可以判断是否上锁。为了保证判断锁是否存在的原子性，保证只有一个线程获取同一把锁，Redis有<strong style=\"padding: 0px; margin: 0px;\">SETNX</strong>（即SET if Not<br style=\"padding: 0px; margin: 0px;\"/>eXists）和<strong style=\"padding: 0px; margin: 0px;\">GETSET</strong>（先写新值，返回旧值，原子性操作，可以用于分辨是不是首次操作）操作。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了防止主机宕机或网络断开之后的死锁，Redis没有ZK那种天然的实现方式，只能依赖设置超时时间来规避。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以下是一种比较普遍但不太完善的Redis分布式锁的实现步骤（与下图一一对应）：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>线程A发送SETNX lock.orderid&nbsp;<current 1=\"\" unix=\"\" time=\"\" lock=\"\" timeout=\"\" style=\"padding: 0px; margin: 0px;\">尝试获得锁，如果锁不存在，则set并获得锁。</current></li><li>如果锁存在，则再判断锁的值（时间戳）是否大于当前时间，如果没有超时，则等待一下再重试。</li><li>如果已经超时了，在用GETSET lock.{orderid}&nbsp;<current 1=\"\" unix=\"\" time=\"\" lock=\"\" timeout=\"\" style=\"padding: 0px; margin: 0px;\">来尝试获取锁，如果这时候拿到的时间戳仍旧超时，则说明已经获得锁了。</current></li><li>如果在此之前，另一个线程C快一步执行了上面的操作，那么A拿到的时间戳是个未超时的值，这时A没有如期获得锁，需要再次等待或重试。</li></ol><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/distributed-system-mutually-exclusive-idempotence-cerberus-gtis/redis_lock.png\" alt=\"redis分布式锁实现\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">该实现还有一个需要考虑的问题是全局时钟问题，由于生产环境主机时钟不能保证完全同步，对时间戳的判断也可能会产生误差。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上是Redis的一种常见的实现方式，除此以外还可以用SETNX+EXPIRE来实现。Redisson是一个官方推荐的Redis客户端并且实现了很多分布式的功能。它的分布式锁就提供了一种更完善的解决方案，源码：<a href=\"https://github.com/mrniko/redisson\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">https://github.com/mrniko/redisson</a>&nbsp;。</p><h4 id=\"tair-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Tair的实现</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Tair和Redis的实现类似，Tair客户端封装了一个expireLock的方法：通过锁状态和过期时间戳来共同判断锁是否存在，只有锁已经存在且没有过期的状态才判定为有锁状态。在有锁状态下，不能加锁，能通过大于或等于过期时间的时间戳进行解锁。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">采用这样的方式，可以不用在Value中存储时间戳，并且保证了判断是否有锁的原子性。更值得注意的是，由于超时时间是由Tair判断，所以避免了不同主机时钟不一致的情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上的几种分布式锁实现方式，都是比较常见且有些已经在生产环境中应用。随着应用环境越来越复杂，这些实现可能仍然会遇到一些挑战。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">强依赖于外部组件</strong>：分布式锁的实现都需要依赖于外部数据存储如ZK、Redis等等，因此一旦这些外部组件出现故障，那么分布式锁就不可用了。</li><li><strong style=\"padding: 0px; margin: 0px;\">无法完全满足需求</strong>：不同分布式锁的实现，都有相应的特点，对于一些需求并不能很好的满足，如实现公平锁、给等待锁加超时时间等等。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">基于以上问题，结合多种实现方式，我们开发了Cerberus（得名自希腊神话里守卫地狱的猛犬），致力于提供灵活可靠的分布式锁。</p><h3 id=\"cerberus-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Cerberus分布式锁</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Cerberus有以下几个特点。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">特点一：一套接口多种引擎</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Cerberus分布式锁使用了多种引擎实现方式（Tair、ZK、未来支持Redis），支持使用方自主选择所需的一种或多种引擎。这样可以结合引擎特点，选择符合实际业务需求和系统架构的方式。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Cerberus分布式锁将不同引擎的接口抽象为一套，屏蔽了不同引擎的实现细节。使得使用方可以专注于业务逻辑，也可以任意选择并切换引擎而不必更改任何的业务代码。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><span style=\"color: rgb(42, 41, 53); font-size: 1.16em; line-height: 1.5em;\"><br/>特点二：使用灵活、学习成本低</span><br/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面是Cerberus的lock方法，这些方法和JUC的ReentrantLock的方式保持一致，使用非常灵活且不需要额外的学习时间。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>void lock();<br style=\"padding: 0px; margin: 0px;\"/>获取锁，如果锁被占用，将禁用当前线程，并且在获得锁之前，该线程将一直处于阻塞状态。</li><li>boolean tryLock();<br style=\"padding: 0px; margin: 0px;\"/>仅在调用时锁为空闲状态才获取该锁。<br style=\"padding: 0px; margin: 0px;\"/>如果锁可用，则获取锁，并立即返回值 true。如果锁不可用，则此方法将立即返回值 false。</li><li>boolean tryLock(long time, TimeUnit unit) throws InterruptedException;<br style=\"padding: 0px; margin: 0px;\"/>如果锁在给定的等待时间内空闲，并且当前线程未被中断，则获取锁。<br style=\"padding: 0px; margin: 0px;\"/>如果在给定时间内锁可用，则获取锁，并立即返回值 true。如果在给定时间内锁一直不可用，则此方法将立即返回值false。</li><li>void lockInterruptibly() throws InterruptedException;<br style=\"padding: 0px; margin: 0px;\"/>获取锁，如果锁被占用，则一直等待直到线程被中断或者获取到锁。</li><li>void unlock();<br style=\"padding: 0px; margin: 0px;\"/>释放当前持有的锁。</li></ul><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">特点三：支持一键降级</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">Cerberus提供了实时切换引擎的接口:</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>String switchEngine()<br style=\"padding: 0px; margin: 0px;\"/>转换分布式锁引擎，按配置的引擎的顺序循环转换。<br style=\"padding: 0px; margin: 0px;\"/>返回值：返回当前的engine名字，如：&quot;zk&quot;。</li><li>String switchEngine(String engineName)<br style=\"padding: 0px; margin: 0px;\"/>转换分布式锁引擎，切换为指定的引擎。<br style=\"padding: 0px; margin: 0px;\"/>参数：engineName - 引擎的名字，同配置bean的名字，&quot;zk&quot;/&quot;tair&quot;。<br style=\"padding: 0px; margin: 0px;\"/>返回值：返回当前的engine名字，如：&quot;zk&quot;。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">当使用方选择了两种引擎，平时分布式锁会工作在主引擎上。一旦所依赖的主引擎出现故障，那么使用方可以通过自动或者手动方式调用该切换引擎接口，平滑的将分布式锁切换到另一个引擎上以将风险降到最低。自动切换方式可以利用Hystrix实现。手动切换推荐的一个方案则是使用美团点评基于Zookeeper的基础组件MCC，通过监听MCC配置项更改，来达到手动将分布式系统所有主机同步切换引擎的目的。需要注意的是，切换引擎目前并不会迁移原引擎已有的锁。这样做的目的是出于必要性、系统复杂度和可靠性的综合考虑。在实际情况下，引擎故障到切换引擎，尤其是手动切换引擎的时间，要远大于分布式锁的存活时间。作为较轻量级的Cerberus来说，迁移锁会带来不必要的开销以及较高的系统复杂度。鉴于此，如果想要保证在引擎故障后的绝对可靠，那么则需要结合其他方案来进行处理。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">除此以外，Cerberus还提供了内置公用集群，免去搭建和配置集群的烦恼。Cerberus也有一套完善的应用授权机制，以此防止业务方未经评估使用，对集群造成影响。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">目前，Cerberus分布式锁已经持续迭代了8个版本，先后在美团点评多个项目中稳定运行。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">幂等性问题</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">所谓幂等，简单地说，就是对接口的多次调用所产生的结果和调用一次是一致的。扩展一下，这里的接口，可以理解为对外发布的HTTP接口或者Thrift接口，也可以是接收消息的内部接口，甚至是一个内部方法或操作。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">那么我们为什么需要接口具有幂等性呢？设想一下以下情形：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>在App中下订单的时候，点击确认之后，没反应，就又点击了几次。在这种情况下，如果无法保证该接口的幂等性，那么将会出现重复下单问题。</li><li>在接收消息的时候，消息推送重复。如果处理消息的接口无法保证幂等，那么重复消费消息产生的影响可能会非常大。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在分布式环境中，网络环境更加复杂，因前端操作抖动、网络故障、消息重复、响应速度慢等原因，对接口的重复调用概率会比集中式环境下更大，尤其是重复消息在分布式环境中很难避免。Tyler Treat也在<a href=\"http://bravenewgeek.com/you-cannot-have-exactly-once-delivery/\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">《You Cannot Have Exactly-Once Delivery》</a>一文中提到：</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">Within the context of a distributed system, you cannot have exactly-once message delivery.</p></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式环境中，有些接口是天然保证幂等性的，如查询操作。有些对数据的修改是一个常量，并且无其他记录和操作，那也可以说是具有幂等性的。其他情况下，所有涉及对数据的修改、状态的变更就都有必要防止重复性操作的发生。通过间接的实现接口的幂等性来防止重复操作所带来的影响，成为了一种有效的解决方案。</p><h2 id=\"gtis\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">GTIS</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">GTIS就是这样的一个解决方案。它是一个轻量的重复操作关卡系统，它能够确保在分布式环境中操作的唯一性。我们可以用它来间接保证每个操作的幂等性。它具有如下特点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>高效：低延时，单个方法平均响应时间在2ms内，几乎不会对业务造成影响；</li><li>可靠：提供降级策略，以应对外部存储引擎故障所造成的影响；提供应用鉴权，提供集群配置自定义，降低不同业务之间的干扰；</li><li>简单：接入简捷方便，学习成本低。只需简单的配置，在代码中进行两个方法的调用即可完成所有的接入工作；</li><li>灵活：提供多种接口参数、使用策略，以满足不同的业务需求。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实现原理</h3><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">基本原理</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">GTIS的实现思路是将每一个不同的业务操作赋予其唯一性。这个唯一性是通过对不同操作所对应的唯一的内容特性生成一个唯一的全局ID来实现的。基本原则为：相同的操作生成相同的全局ID；不同的操作生成不同的全局ID。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">生成的全局ID需要存储在外部存储引擎中，数据库、Redis亦或是Tair等等均可实现。考虑到Tair天生分布式和持久化的优势，目前的GTIS存储在Tair中。其相应的key和value如下：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>key：将对于不同的业务，采用APP_KEY+业务操作内容特性生成一个唯一标识trans_contents。然后对唯一标识进行加密生成全局ID作为Key。</li><li>value：current_timestamp + trans_contents，current_timestamp用于标识当前的操作线程。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">判断是否重复，主要利用Tair的SETNX方法，如果原来没有值则set且返回成功，如果已经有值则返回失败。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">内部流程</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">GTIS的内部实现流程为：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>业务方在业务操作之前，生成一个能够唯一标识该操作的transContents，传入GTIS；</li><li>GTIS根据传入的transContents，用MD5生成全局ID；</li><li>GTIS将全局ID作为key，current_timestamp+transContents作为value放入Tair进行setNx，将结果返回给业务方；</li><li>业务方根据返回结果确定能否开始进行业务操作；</li><li>若能，开始进行操作；若不能，则结束当前操作；</li><li>业务方将操作结果和请求结果传入GTIS，系统进行一次请求结果的检验；</li><li>若该次操作成功，GTIS根据key取出value值，跟传入的返回结果进行比对，如果两者相等，则将该全局ID的过期时间改为较长时间；</li><li>GTIS返回最终结果。</li></ol><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实现难点</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">GTIS的实现难点在于如何保证其判断重复的可靠性。由于分布式环境的复杂度和业务操作的不确定性，在上一章节分布式锁的实现中考虑的网络断开或主机宕机等等问题，同样需要在GTIS中设法解决。这里列出几个典型的场景：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>如果操作执行失败，理想的情况应该是另一个相同的操作可以立即进行。因此，需要对业务方的操作结果进行判断，如果操作失败，那么就需要立即删除该全局ID；</li><li>如果操作超时或主机宕机，当前的操作无法告知GTIS操作是否成功。那么我们必须引入超时机制，一旦长时间获取不到业务方的操作反馈，那么也需要该全局ID失效；</li><li>结合上两个场景，既然全局ID会失效并且可能会被删除，那就需要保证删除的不是另一个相同操作的全局ID。这就需要将特殊的标识记录下来，并由此来判断。这里所用的标识为当前时间戳。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">可以看到，解决这些问题的思路，也和上一章节中的实现有很多类似的地方。除此以外，还有更多的场景需要考虑和解决，所有分支流程如下:<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/distributed-system-mutually-exclusive-idempotence-cerberus-gtis/gtis_principle.jpg\" alt=\"GTIS原理\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">使用说明</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">使用时，业务方只需要在操作的前后调用GTIS的前置方法和后置方法，如下图所示。如果前置方法返回可进行操作，则说明此时无重复操作，可以进行。否则则直接结束操作。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/distributed-system-mutually-exclusive-idempotence-cerberus-gtis/gtis_use.png\" alt=\"redis分布式锁实现\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">使用方需要考虑的主要是下面两个参数：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>空间全局性：业务方输入的能够标志操作唯一性的内容特性，可以是唯一性的String类型的ID，也可以是map、POJO等形式。如订单ID等</li><li>时间全局性：确定在多长时间内不允许重复，1小时内还是一个月内亦或是永久。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">此外，GTIS还提供了不同的故障处理策略和重试机制，以此来降低外部存储引擎异常对系统造成的影响。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">目前，GTIS已经持续迭代了7个版本，距离第一个版本有近1年之久，先后在美团点评多个项目中稳定运行。</p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('89', '大促活动前团购系统流量预算和容量评估', '本文整理自美团点评技术沙龙第11期：移动端测试分享。美团点评技术沙龙由美团点评技术团队主办，每月一期。每期沙龙邀请美团点评及其它互联网公司的技术专家分享来自一线的实践经验，覆盖各主要技术领域。目前沙龙会分别在北京、上海和厦门等地举行，要参加下一次最新沙龙活动？赶快关注微信公众号“美团点评技术团队”。本期沙龙首', '2016-10-27 19:20:05', '0', '0', '<p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">本文整理自美团点评技术沙龙第11期：移动端测试分享。</strong></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E6%B2%99%E9%BE%99%E7%8E%B0%E5%9C%BA.jpeg\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">美团点评技术沙龙由美团点评技术团队主办，每月一期。每期沙龙邀请美团点评及其它互联网公司的技术专家分享来自一线的实践经验，覆盖各主要技术领域。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">目前沙龙会分别在北京、上海和厦门等地举行，要参加下一次最新沙龙活动？赶快关注微信公众号“美团点评技术团队”。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">本期沙龙首次在上海举行，包括四场讲座：一直被呼吁开源的测试工具Spider；移动端用户体验数据如何量化；大促活动前团购系统如何评估流量和容量；腾讯P图App的测试。其他几场讲座的图文实录会陆续发表，请继续关注。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">引言</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">O2O行业高速发展，团购业务的流量和用户数也有了不止一个数量级的飞跃，单日交易额数以亿计，日均订单量也到了百万量级。目前团购产品形态稳定，产品运营会策划各种大促活动，为业务带来更多的流量和用户，以提升交易额。给力的大促活动能为业务带来千万级的PV和百万级的购买用户数，大促活动的瞬时流量可能是平时流量的几十倍，这对我们的系统来说是一个不小的挑战。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_6.png\" alt=\"引言\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">概述</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这次分享的主要内容包括以下4个部分：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>介绍相关背景，包括大促活动的特点和团购系统架构的演进过程。</li><li>建立大促活动期间团购系统核心路径的流量模型，推算活动峰值流量。</li><li>分层评估系统容量时，如何制定压力测试策略、选择合适的测试环境。</li><li>分层评估系统容量时，执行压力测试过程中的工具选型、场景设计和数据准备。</li></ol><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.26.13.png\" alt=\"概述\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">背景介绍</h1><h3 id=\"1-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">1. 大促活动的特点</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大促活动的三个关键词：瞬时流量、热点团单和核心路径。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">瞬时流量</strong>：大促活动的一般形态是在活动日的某个时间节点（比如上午10点），开放一批0元抢购团单；这时大量用户会从H5活动页点击“免费吃”按钮（静态页面，用户会提前打开），跳转到Native团购详情页，给团购系统带来一个瞬间流量高峰。某次活动统计数据显示，瞬时高峰流量达到了平时流量的33倍。</li><li><strong style=\"padding: 0px; margin: 0px;\">热点团单</strong>：活动日上午10点开放的这批0元抢购团单，可以称之为是热点团单。</li><li><strong style=\"padding: 0px; margin: 0px;\">核心路径</strong>：活动高峰期大部分用户行为会集中在这些热点团单的购买流程上，而不是去搜索一个团单或者给团单写评价；这个热点团单的抢购流程就是大促活动的核心路径。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.27.32.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"2-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">2. 大促活动前的准备——扩容</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">面对这个瞬时流量高峰，首先要回答的问题是系统能不能扛住；如果抗不住的话，最有效提升系统容量的方式是进行扩容。假设在系统没有瓶颈、可水平扩展的前提下，单个应用的扩容可以使用以下公式：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_9.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了制定扩容计划，我们需要知道分子“活动峰值流量”和分母“单机容量”。大促活动准备期间，运营会根据活动预算、Push发送量和Push转化率等数据，推算出活动页的PV和UV；根据往期活动的经验数据，推算出抢购或秒杀活动的用户点击量，以此数据作为系统的入口峰值访问量。有了入口峰值访问量，结合系统的流量模型，就可以推算出每个应用节点的活动峰值流量。通过对系统的压力测试，可以得出每个应用节点的单机容量极限值。</p><h3 id=\"3-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">3. 团购系统架构的演进</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在开始正式讲流量预算和容量评估之前，先介绍下团购系统架构的演进。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">早期的团单系统架构</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">早期的团购系统如下图所示，Web层和Service层都是单应用架构。Web层的团购MAPI应用，提供了包括团购首页、团购列表、购买流程、团购订单/券、退款流程等200多个接口（包括读接口和写接口），所有业务耦合在一起。Service层的团单服务也是类似的。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_1.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对这样的系统架构做流量预算很简单，可以直接用运营同学给的入口峰值访问量做分子（活动峰值流量）即可。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">但是要获取分母（单机容量）是比较困难的事情。针对这样的架构，在线上或者线下做一次有效的压力测试成本比较高——如果通过线上引流的方式做压力测试，读流量和写流量必须区分开；如果在线下模拟搭建一套压力测试环境，依赖的服务较多，搭建环境成本高；另外业务耦合在一起，线下也比较难模拟线上的接口分布等情况。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">根据木桶短板理论，不需要压力测试也可以知道当时的团单系统性能不会很好。这样系统架构下，评估系统的容量的办法基本上只有拍脑袋。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8B%E5%8D%889.10.26.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8B%E5%8D%889.10.37.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">现在的团单系统架构</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">现在的团单系统架构有了比较大的改进。如下图所示，团单服务做了“拆弹项目”，复杂的团单服务按照业务领域拆分成了基础服务、价格服务、库存服务、属性导航服务等。从服务名称可以看出来，一个应用拆分成了多个应用，每个应用单独负责某个领域；缓存集群和团购数据库也按照业务领域做了拆分。随后，大而全的Web层MAPI应用也按照业务领域拆分成了团购详情应用、团购交易应用和个人中心应用。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_2.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">总结下的话，就是整体上逻辑耦合在一起的业务按微服务化拆分出来，每个服务独立专注的做一件事情。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面两张图可以比喻团购系统架构的演进。左图是早期的团购系统，业务混杂在一起，难以量化；右图是拆分之后的团购系统，分层架构清晰合理，这个时候对系统建立模型、量化分析变成了一件可行的事。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.29.41.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">活动流量预算</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">流量模型分析是流量预算的关键，只有清楚了系统的流量模型，才可能对系统每个节点的峰值流量做准确的评估。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">团购系统在不同的场景有不同的流量模型。如下图所示，左图是系统平时的流量模型，右图是大促时的流量模型，其中中间人最多的路径是大促活动核心路径的流量模型。下面会介绍如何针对这条核心路径建立流量模型。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_10.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大促活动时的业务核心路径是：用户首先访问H5活动页，点击“免费抢”按钮到达热点团购详情页，然后通过点击团购详情页的“立即抢购”按钮进入提交订单页，并最终完成支付流程。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.30.39.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这个是大促活动的业务核心路径对应的系统架构图，用户跳转到团购详情页时，客户端会向Web层的团购详情API应用请求数据，团购详情API应用再向聚合服务层发起请求，聚合服务层分别异步调用团单价格服务、团单库存服务、团单属性服务等基础服务，并将这些基础数据组装好返回给上层应用，最终返回数据到客户端，展示在用户的移动设备上。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_3.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">根据系统架构图，可以从上至下梳理调用关系链，建立核心路径的流量模型。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第一步：梳理活动页跳转到App Native页面的接口调用链。用户从活动页点击“免费吃”按钮进入团购详情页，会发起6个API接口请求。其中3个接口——团购基本信息接口，团购购买须知接口和团购适用商户接口——会对用户的购买决策起决定性作用，是团购详情页的核心路径。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">团购详情页下方还有三个非核心模块会发起3个接口请求，分别为本店其他团购接口、网友评价接口和团购推荐的接口，这几个模块可以给用户购买决策提供参考，但是不是必须的，在大促活动场景下是非核心路径。这些接口可以通过开关关闭（关闭非核心场景是一种有效的降级方案），下面的分析假设非核心路径接口开关关闭。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_5.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二步：梳理Web层接口之间的调用次数和调用顺序<br style=\"padding: 0px; margin: 0px;\"/>用户打开团购详情页时，客户端会先发起团购基础信息接口，再获取团购基本信息（如：标题、价格、销量等）之后，会异步发出其他5个模块的接口请求。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_4.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三步：通过代码分析和CAT调用堆栈分析，梳理Web层接口对下游服务的调用顺序和调用次数，汇总成对服务层各应用的调用倍数。（注：CAT是美团点评技术团队开源的实时监控平台，已在许多业界公司生产环境得到应用，详情参见<a href=\"https://github.com/dianping/cat\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">GitHub</a>）</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.31.19.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">假设团购详情页的PV是1，会发出3个API请求；除了团购商户API之外，团购基础信息API和团购详情API会分别调用团购基础服务1次，另外在大促的场景下会在创建订单和支付等场景对团购基础服务有5次调用，即总共会有7次的团购基础服务的调用。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过分析代码和调用堆栈，可以得知团购详情页的PV对团单价格服务和团单库存服务的调用次数也是1：7的关系。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_8.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这样我们可以得到大促活动核心路径的流量模型：假设详情页的流量单位为1，团购系统各个应用节点的流量构成如下表所示。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.31.47.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">同理，大促活动核心路径对缓存和DB的最大访问次数也可以分析出来。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8810.31.55.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这时可以根据运营给到的入口峰值流量数据，推算出大促活动时团购系统从上到下（Web层、服务层、缓存和数据持久层）每一个应用节点可能会达到的最高流量。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最终给到运维的会是这样一份扩容计划表。综上所述根据流量模型可以推算出系统每个应用节点的活动峰值流量以及需要提供的集群容量（活动峰值流量*余量系数）。另外系统当前机器数是已知的，那么要完成扩容计划表，下一步要做的事情是进行容量评估，即通过压力测试，评估系统每个应用节点的单机容量。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.17.09.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">系统容量评估</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">系统容量主要通过线上环境或者线下环境的压力测试来评估。首先会介绍压力测试策略的制定，大促活动期间压力测试的目的，以及压力测试环境的选择（重点介绍性能测试环境PTP）。然后通过实例介绍压力测试执行中的压测工具的选择、压测场景的设计和压测数据的准备。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8B%E5%8D%8811.31.00.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压力测试的目的</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大促活动准备期间的压力测试，与平时应用上线前的性能测试或负载测试的目的有所不同，平时性能测试的目的主要是查看系统各指标是否达到预期，以及在高并发下验证功能测正确性。大促活动准备期间的压力测试目的是找到系统针对混合场景的最大处理能力，具体有以下四个方面：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.17.34.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">压力测试这件事情没有最好只有更好，为了评估线上的系统容量，理想的压力测试方案是在线上环境做系统全链路的压测。但是线上全链路压测的时间、人力成本比较高（做一次线上全链路压测要参与或周知的人数要30+）。线上压测有一定风险，为了评估系统容量把线上服务压挂了是一件得不偿失的事情。另外，全链路线上压测可以发现系统的瓶颈，但是不能得到每个应用节点的单机容量。我们最终采用的压测方案基本原则是在保证压测数据有效性的基础上，做性价比最高的压力测试。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.17.45.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压力测试的环境</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在PTP环境出现之前，我们做压力测试主要在BETA环境、PPE环境或线上环境（BETA和PPE环境是我们用来做功能测试的两套线下测试环境），这三种环境都有些局限或风险，导致压力测试有效性不如人意。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">BETA环境</strong>：主要用作QA功能集成测试，服务和中间件部署完备（一般每个应用部署一台虚拟机），有专人维护，专门的BETA环境数据库</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>可靠性：硬件环境与线上差异较大，数据与线上差异较大</li><li>稳定性：被测服务和依赖服务容易被压挂，影响日常功能测试</li><li>易用性：一般用JMeter脚本，在本地执行压测</li><li>局限：只能评估单机容量，无法对集群进行压测</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">PPE环境</strong>：主要用作应用线上发布之前的功能验证</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>可靠性：硬件环境与线上差异较大，部分数据库定期同步线上数据库</li><li>稳定性：被测服务和依赖服务容易被压挂，影响应用上线前功能验证</li><li>易用性：一般用JMeter脚本，在本地执行压测</li><li>局限：只能评估单机容量，无法对集群进行压测</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">线上环境</strong></p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>可靠性：数据可靠，无环境差异，可以压测集群。</li><li>稳定性：线上被测服务或依赖服务可能被压挂。</li><li>易用性：需运维辅助操作，在线上缩减集群规模或者复制流量。</li><li>局限：风险高；时间人力成本高；不是所有类型的应用都适合。</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.17.55.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面重点介绍下我们做压力测试主要用到的PTP性能测试环境。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">PTP性能测试环境，实际上是一个平台+环境，包括了性能测试的环境搭建、测试执行和测试结果展示的整体功能。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.18.08.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">PTP性能测试环境与传统的性能测试环境有很大的区别。它是一个基于Docker的虚拟机器池，需要对某个应用做压力测试时，可以一键部署该被测应用；测试完成后可以释放清理环境，不需要专人维护一套完整的测试环境，从而解决了传统性能测试环境机器数量有限、维护成本高、资源利用率低等问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.18.19.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">PTP性能测试环境可以通过智能依赖和依赖回流的功能，把被测服务直接依赖和间接依赖的服务也部署起来。<br style=\"padding: 0px; margin: 0px;\"/>具体步骤如下图所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.18.48.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.19.02.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.19.13.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">另外PTP提供了配置虚拟机CPU核数和内存大小的功能，还提供了同步线上数据库表的功能，可以做到性能环境数据库和线上数据内容和量级保持一致。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">综上所述，PTP性能测试环境在数据可靠性、稳定性和易用性方面，解决了BETA环境、PPE环境或线上环境压测时存在的大部分问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_11.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面介绍下压力测试执行过程中的压测工具的选择、压测场景的设计和压测数据的准备。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8B%E5%8D%8811.32.06.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压测方法的选择</h3><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">线上压测方法——逐步减小集群规模</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过逐台摘机器，使得单台机器的访问量不断提升，来达到压力测试的目的。</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">优点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>应用无需读写接口分离。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">缺点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>逐个摘机器有风险。</li><li>对流量规模有要求，不能太小，否则压不到瓶颈。</li><li>需要运维人员的密切配合。</li></ul></blockquote><h4 id=\"-tcpcopy\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">线上压测方法——线上TCPCopy</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在集群中挑选A、B两台机器，A为被压机，B为施压机。<br style=\"padding: 0px; margin: 0px;\"/>将A配置一个泳道（机器不对外提供服务），通过TCPCopy将B的流量逐渐放大至A。</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">优点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>流量比例真实、风险小。</li><li>可以随时调整比例，模拟梯度加压。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">缺点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>要求被压的服务只能是纯读服务，不能有写接口，否则会带来脏数据</li><li>TCPCopy工具限制，放大40倍会挂掉，若线上流量太小，则需要首先摘掉部分机器以提高单机的QPS</li></ul></blockquote><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">线下压测方法</h4><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>PTP搭建性能测试环境</li><li>设计测试场景</li><li>准备测试脚本（JMeter）</li><li>准备测试数据</li><li>执行压力测试</li><li>测试结果分析</li></ul></blockquote><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压测场景的设计</h3><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例一</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对服务提供的接口的比例分布设计场景</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">例如：团购基础查询服务提供了两种查询方式：单个查询和批量查询</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>设计测试场景时需要考虑两种接口的比例分布</li><li>可以使用JMeter比例控制器来控制请求比例</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/percentage.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例二</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对批量接口参数的个数设计场景</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">例如：团购库存查询服务的批量接口参数个数</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>需要设计调用批量查询接口时传入的团单id个数。</li><li>可以通过线上日志统计“批量接口参数列表长度”分布。</li></ul></blockquote><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例三</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对对应用性能有影响的参数类型、逻辑分支设计场景</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\">例如：团购销量查询服务区分品类</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>A品类团单要展示聚合销量、B品类团单要展示分城市销量。</li><li>不同的逻辑分支，查询不同的缓存和数据库。</li></ul></blockquote><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压测数据的构造</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/Modify_Fig_7.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例一 流量回放</h4><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\"><strong style=\"padding: 0px; margin: 0px;\">被测应用：</strong>团购详情Web应用（纯读服务）<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测环境：</strong>性能测试环境<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测数据：</strong>TCPDump复制线上流量在性能环境做回放<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测方法：</strong></p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>选择合适的时间段（流量不要太低）。</li><li>dump流量时间足够长，流量翻倍时数据离散度需满足要求。</li></ul></blockquote><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例二 日志回放</h4><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\"><strong style=\"padding: 0px; margin: 0px;\">被测应用：</strong>个人中心Web应用（读+写）<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测环境：</strong>性能测试环境<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测数据：</strong>Nginx Access Log<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测方法：</strong></p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>将最近通过App的访问Nginx Access Log进行分类（读、写）</li><li>线上到线下token的解析问题</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/nginx%E6%97%A5%E5%BF%97.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实例三 人工构造数据</h4><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; font-size: 1.16em; word-wrap: break-word;\"><strong style=\"padding: 0px; margin: 0px;\">被测应用：</strong>团购基础信息服务<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测环境：</strong>性能测试环境<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测数据：</strong>人工构造数据（csv文件）<br style=\"padding: 0px; margin: 0px;\"/><strong style=\"padding: 0px; margin: 0px;\">压测方法：</strong></p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>人工构造的数据应模拟线上的缓存命中率</li><li>缓存命中率比线上环境偏低，需要进行缓存预热</li><li>缓存命中率比线上环境偏高，需要尽量模拟线上团单的离散程度</li></ul></blockquote><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">压测结果的采集</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.21.00.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.21.08.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">总结</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在团购的一次大促活动前，我们会主要做这两件事情：首先会进行一个基于流量模型的流量预算，以获取扩容公式的分子——即从上到下评估流量；然后制定压力测试策略、执行压力测试、输出压力测试报告，对每个应用进行单机容量极限评估，以获取扩容公式的分母——即从下到上提供能力。最终的目的是为了保证大促期间核心用户的用户体验。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/stress-test-before-promotion/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-09-19%20%E4%B8%8A%E5%8D%8811.21.43.png\" alt=\"Alt text\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('90', '美团数据库运维自动化系统构建之路', '本文整理自美团点评技术沙龙第10期：数据库技术架构与实践。美团点评技术沙龙由美团点评技术团队主办，每月一期。每期沙龙邀请美团点评及其它互联网公司的技术专家分享来自一线的实践经验，覆盖各主要技术领域。目前沙龙会分别在北京、上海和厦门等地举行，要参加下一次最新沙龙活动？赶快关注微信公众号“美团点评技术团队”。本次', '2016-10-27 19:20:31', '0', '0', '<p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><strong style=\"padding: 0px; margin: 0px;\">本文整理自美团点评技术沙龙第10期：数据库技术架构与实践。</strong></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">美团点评技术沙龙由美团点评技术团队主办，每月一期。每期沙龙邀请美团点评及其它互联网公司的技术专家分享来自一线的实践经验，覆盖各主要技术领域。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">目前沙龙会分别在北京、上海和厦门等地举行，要参加下一次最新沙龙活动？赶快关注微信公众号<strong style=\"padding: 0px; margin: 0px;\">“美团点评技术团队”。</strong></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">本次沙龙主要围绕数据库相关的主题，内容包括美团数据库自动化运维系统构建、点评侧MySQL自动化服务平台<a href=\"http://tech.meituan.com/tag/RDS\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">RDS</a>、美团数据库中间件、和小米高级DBA带来的Redis Cluster的大规模运维实践。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">讲师简介</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">宁龙，美团网高级DBA，现负责美团数据库自动化运维系统的架构和开发工作。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">目录</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">今天我主要分这几个部分讲：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>第一部分是美团在数据库自动化运维系统构建前的烦恼，DBA手动运维DB的时候遇到的各种问题；</li><li>第二个是我们在构数据库运维自动化系统过程中的一些坎坷和思考，这里我会说我们的1.0版系统，还有1.0版的系统为什么要到2.0版的，以及现在2.0版系统在线上的使用情况，在2.0版系统的基础上，我会给大家介绍三个典型的案例，可能大家平时会用到的；</li><li>最后说一下我们2.0版系统构建之后线上跑的效果，以及我们做的后期改进的计划，也可以说是3.0；</li><li>Q&amp;A环节。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_1.png\" alt=\"目录\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-dba\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建前的苦恼——一线运维DBA</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">首先说一下数据库运维自动化系统构建前，运维DBA都有哪些烦恼？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这是我们的一线运维DBA的小团，它每天需要对接很多的RD（Research&amp;Development 研发）的需求。从我们现在的系统统计来看，使用我们平台系统的RD大概是一千五六百人，我们的人数是RD人数的十分之一不到。我们每个DBA对接的RD需求还是非常多的。新业务的上线，RD需要申请新的数据库集群。随着业务的发展，比如：数据库的流量大了，需要拆分了，都需要DBA手动去做。第三个是SQL的审核和上线，SQL会不会有什么问题，可能他测试环境OK，但是到了线上会有各种各样的问题。第四个是变更、升级。第五个是备份，不然的话，RD把数据写坏了，你就没地方找了，再就是帐号和安全，虚IP的维护，DNS、MySQL本身的维护，还有数据一致性，包括RD提的一些问题的排查，自身报警的处理。这就是我们一线运维的DBA，小团每天需要干很多的事情，这些事情都很重复，相信大家在座的有DBA的话，肯定是每天都会遇到我列的这些事情中的一个或多个。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_2.png\" alt=\"构建前的苦恼-一线运维DBA\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建前的苦恼——手动运维的烦恼</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">接下来，我们先看一下美团点评初期数据库系统的架构：一开始是两层的架构，在主从库的基础上配置读写DNS，后来引入LVS。这个两层或者三层的数据库架有什么问题呢？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">比如底层的数据库做切换了，上层的DNS配置也要变更，生效到各个机房，几分钟过去了……</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">RD说：“这个不行，你不能这么搞，忍不了”。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">所以说，这样的数据库架构在切换或者从库上下线流量的时候，都会导致业务的报错，业务接受不了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个是多：重复没有成长，你让一个DBA一开始做搭建、扩容、拆分、切换，他们可能觉得很有新鲜感和成就感，但是你让他做了上百次甚至上千次之后他们觉得这个没有成长。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三个是杂：经常被打断，有报警处理的时候需要立马处理，RD找到你说这个问题必须马上、立刻处理，所以经常在做一些事情的时候被打断，总感觉自己在做杂事。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最后一个烦：RD经常不按照规范做事，包括上线一些大SQL、慢查询。程序不加重试，在网络抖动的时候，发现数据库怎么连接断了？他就会找到你。还有一些误操作，前几天有一个RD半夜打电话跟我说，线上数据误删除了需要恢复，通过我们平台去Delete数据的话，是很好恢复的，但是他说不好意思，我通过帐号直连线上删了数据。有些明白的RD会不好意思，知道数据不好恢复；但是，有些RD会说：“你DBA就是干这个事儿的，你就是得帮我恢复数据。”</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大家很郁闷，在没有<strong style=\"padding: 0px; margin: 0px;\">自动化运维系统</strong>之前的DBA还是非常苦恼的。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_3.png\" alt=\"构建前的苦恼-手动运维的烦恼\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-1-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——1.0版系统设计之初的考虑</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上讲完了数据库运维自动化系统构建前DBA的苦恼，接下来说一说我们如果想去构建一套数据库自动化运维系统应该从哪里开始着手，我这里列的都是非常重要的。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第一个就是CMDB，如果你做的自动化系统中没有CMDB，那么，我觉得你做的自动化系统就不叫自动化系统。做自动化其实就是做标准化，这样的话，你在做自动化运维的时候，CMDB可以很方便的让你查询到信息，对业务进行合理的描述，这样的话有一个基本的地方，其实就是数据标准，我后面会说。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个就是你想一想在你做自动化运维系统之前，你整个公司或者RD的需求、DBA的需求，你需要做哪些自动化。美团初期只做了三个，在线DDL，数据库帐号申请和慢查询。有些RD或者DBA经常出去听一些会，比如腾讯讲蓝鲸，阿里讲鲁班，我们回去搞一套这么大的，其实没有必要，你们公司需要什么，你迫切需要的应该最先做，先把系统搭起来，再迭代。这里我给大家说个经验就是，可以先从DBA内部入手，再推广到RD。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三个就是开发人员和成本，当时2015年初期的时候，美团App的DBA只有4个人，那时候既没有FE，也没有后台做开发的，这个时候就需要考虑到开发会有一些人员和成本的问题。会想，我是不是招一个人或者招两个人？其实没有必要，你可以放眼整个公司看一看，有没有共用的平台或者资源给你使用，这样更快，更便利的让你搭建平台。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最后就是开发形式，我们整个大的运维部是有开发人员相关资源的，我们找到他们去帮我们做一些页面，这样的话，你就会迅速的搭建你的1.0版本。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以上就是我要说的四点。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_4.png\" alt=\"构建中的坎坷和思考——1.0版系统设计之初的考虑\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-1-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——1.0版系统架构设计&amp;使用情况</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大家可以看一下我们1.0版系统的整体框图，用户就不说了，前端模块主要是Django+MVC的方式，前端开发是不懂DBA业务的，他们需要做什么事情呢？他们把用户提交的任务写到数据库的task表中，我们后台的DBA去写一些脚本，去把前端提交的任务拉出来，拉出来之后如果有日志，会反写到task表里，这就是我们1.0版的架构，非常的简单，但是也是非常的实用，右边这个图是我们1.0版的效果，其实我后来加了DML，一开始只有DDL，业务他只需要选择他所需要变更的SQL类型之后，提交到后端DB的task表。后台会有一个常驻内存的进程，扫描这个DB，去发现当前有没有需要我去执行的任务，如果有就拉出去执行，执行的过程中会有一些日志，会回填到这个DB中，前端从DB拉去日志信息，就可以展示了。当时的效果，日均的订单是1840，2015年初，公司正是快速增长期的时候，现在应该比这个稍微少一点，当时使用人数大概600人，虽然是很简单的一套架构，但是使用的人数还是非常多。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_5.png\" alt=\"构建中的坎坷和思考——1.0版系统架构设计&amp;使用情况\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-1-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——1.0版的反思</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">1.0版的系统做完了之后为什么做2.0版的系统呢？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">不是说1.0版的系统不好，或者使用的人少，随着美团的发展你的标准化程度就慢慢得满足不了要求，所以我们会反思1.0版的一些问题，开始去做2.0版的系统。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">1.0版有什么问题呢？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">首先是前瞻模块重，开发人员很多，因为我们当时都是公用开发人员，开发人员很多，依赖也非常多，其实我开发习惯不太喜欢依赖什么太多的框架、组建，这样的话感觉很重，可能导致你代码的迁移、扩展性差。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个是没有接口化，RD不方便接入，很深刻的一个例子就是，有一个业务，他可能到某天的凌晨需要建跟时间相关的表，需要删表、建表，他每次都等到凌晨的时候去平台提交去做，他觉得很辛苦，于是就问我：“你们有没有接口让我去调，我写个脚本到那个时间就把我的表建上，因为每个时间表结构都是一样的”。如果你的平台没有接口化很不方便，特别有一些需要定期跑的业务。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三个就是开发周期长、成本高，得跟他们沟通，需求调整复杂。当然它主要在高并发、高性能上很差，原因是什么？因为后台是一个常驻内存的进程，我当时只起了大概可能是6个线程就跑了，并发的话只能跑6个，我们2.0版的系统你想跑多少个就跑多少个，我一会儿给大家介绍一下怎么做的，不易扩展，这个也不方便扩展，后台的任务就一个，挂了就挂了，图象化做的也不好，毕竟是找人家帮我们做的，效果也不是太好。这个是我们为什么做2.0下定决心的一个原因吧！</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最后就是任务的不可干预性，有一个改表操作，改到一半不想改了，这时候需要DBA上去手动操作，且不能暂停、回滚，2.0版的支持。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_6.png\" alt=\"构建中的坎坷和思考——1.0版的反思\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">随着业务的发展，1.0版系统已经不能满足我们现在的需求，我们就做了2.0版。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">2.0版需要遵循三个方面：标准化、自助化、自动化。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第一个标准化，指的是：接口标准、数据标准、流程标准。接口标准。你不能说，我的平台（WEB前端）提交的是一种方式，API接口提交是另一种方式，这是不行的。数据标准，就是CMDB，一定要准，一定要实时得更新，不然整个上层，它是基石，整个上面的框架搭起来都是白费的。流程标准，你需要制定ABCD各种各样的流程，很多DBA，他有自己的方式、方法。比如说对于拆分来说，A有它的方法，B有它的方法，可能都能达到目的，但是标准化，只能用一种方式。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个自助化，操作自助，只要能放给RD自主操作的就自主操作。问题定位的自助，RD碰到了数据库相关的问题，不是第一时间找DBA，而是第一时间在你平台上可以看到现在数据库的状况，定位到现在数据库的问题，去操作相关业务逻辑解决问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三个自动化，高可用和报警自动处理。高可用，从库宕机你可以把它剔掉；报警自动处理，对于收到报警看一眼，后台有报警自动处理的程序就给它处掉了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这是我们需要遵循的三个化，标准化、自助化和自动化。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_7.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">介绍2.0版系统整体的架构之前，我先给大家介绍一下两个开源的组件，第一个是RabbitMQ，这是一种应用程序对应用程序的通讯方法，这个端对于另一个端的通讯，它是通过这个端来发消息，另一个端接消息，从而连接了两个端，很简单，其实他的作用就是连接消息的桥梁，美团点评现在做的O2O，就是连接人和服务，你不需要自己找，你只需要在APP上操作就行了。对于消息队列，你只需要提交到对应的队列中去就行了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_8.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个就是Celery，这个Rabbit的中文翻译是兔子，Celery翻译成中文就是芹菜，兔子和芹菜构建了我们2.0版系统。大家可以这么理解，Celery其实就是封装在消息队列上面一个非常好用的任务调度者，是基于Python开发的，他可以帮你干什么呢？可以帮你发任务，可以帮接任务，可以帮你定时的起任务，我今天凌晨2点拆分，可以白天提交，凌晨Celery帮你调度。它是对于消息中间件上面很好用的封装。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_9.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">说完了以上两个开源的组建，我们接下来说整个2.0版系统的架构，一点点的放出来，首先是用户，通过前端的Web，他的所有的操作全部打到我们的API层，业务模块：脚本也好，系统也好，也是打到我们的API层，这样做到了接口的统一，后端的处理都是一样的，不管是任何人，对于我来说都是我的一个端。<br style=\"padding: 0px; margin: 0px;\"/>API层它可以做两个事情，比如我想查询当前数据库的主从架构情况，当前服务里的数据库列表，那么API层直接跟CMDB交互获取数据并返回。第二种是需要后台做任务的，比如搭建，扩容，拆分这些都是任务，它们需要到后台的任务管理模块去做。任务管理模块会把任务分发下去。这中间会有CMDB。任务管理模块可以详细讲一下，这个就是刚才我所说的MQ的消息管道，这里是Celery，这里有两个Celery，你可以理解为它是MQ的封装，你只需要给Celery通信就可以了。TaskControl是挂载到整个消息中间件上面的一个任务处理者。它会生成父子进程去处理任务。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_10.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">我刚才说的为什么任务是可以无限地增加，前提是在机器可以承载的情况下无限增加。第一步，TaskControl先fork出一个子进程，第二步，子进程1再fork出一个子进程，这个子进程2，是真正得做任务的进程，这个进程再调用任务执行脚本或者模块去进行任务操作。子进程1，它会把子进程2的一些信息，比如进程PID，回填到数据库里，子进程一1就退出了，子进程1退出之后，它跟子进程2的关系就断开了，这里要说一点，子进程1得忽略回收子进程，这时候子进程2就托管给了init进程，这样的话就生成了这么一个任务执行单元。任务执行单元只是需要自己去做任务，比如说它去做DDL，这个子进程2是父进程，会去做子进程的回收操作，任务日志的回填工作等。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_11.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版架构设计</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最后的效果大家可以看到，就是右下角这样的，这个TaskControl，每次生成父子进程完成之后，它就回去从消息队列去拿新的任务，一台机器上，好多个父子进程，并发高的时候，这些任务会有一百多个，这样的话，大大提升了整个系统的并发性，正常的话，这里起6个子进程就够了，用来监听任务，生成任务执行单元。我看有些公司会起很多很多模块去处理，用这种技巧的话，就可以让任务的执行脱离整个任务系统。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这么做还有什么好处呢？在做升级或者整个系统挂了的时候：我们直接升级好了，系统挂了也没事，任务还是不受影响。机器挂了怎么办？这个就没办法了，机器挂了确实就挂掉了，上面的任务需要重新发起，可能需要人工的干预。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_12.png\" alt=\"构建中的坎坷和思考——2.0版架构设计\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">说完了上面的整体架构之后我会给大家讲三个案例：<br style=\"padding: 0px; margin: 0px;\"/>第一个案例是我们现有的集群的搭建过程，我先说一下我们线上跑的整体数据库的四层架构：第一层是业务层，业务层，访问我们都是通过DNS，DNS下面挂的是虚IP层，虚IP层下面会挂我们的中间件，atlas，每个机房会有并行得部署多个，最下面挂的是数据库主从架构，这个是现在美团用的线上数据库主流架构。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_13.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">现在开始说搭建流程，我说了这么多，大家没看到我们系统的庐山真面目，这个是我们2.0版本系统的页面。对于搭建，DBA需要先点击一下服务组初始化，首先需要去创建一个服务，我们每一个DB集群在数据库里面都是有一个标识的，被称做服务组。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_14.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">接着，需要选择你要搭建的类型，我刚才说的四层的架构是这里的A套餐，但是如果说是一些统计、运营类的库，我们可能会用到BCD套餐，后面三个套餐用的比较少。当然因为这里有四个，可能涉及到的情况非常多：有没有atlas、有没有MGW、有无DNS……可能至少得有八种情况。有时候大家做自动化的时候，就会遇到矛盾，这种情况怎么办？现在给DBA的四个套餐其实就是制定标准，就是你搭建的数据库集群，都是按照我的标准来的，只有这四种，DBA就说了：你有时候不满足我的情况，DBA就要手动去做，怎么办？</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_15.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">你的系统不能够兼容DBA的需求的时候怎么办呢？这个时候确实很麻烦，它手动运维在后面搞一搞，很有可能造成你的CMDB信息缺失等问题，这个就很麻烦。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">遇到这种情况，我就告诉他们：“OK，我整个平台兼容你所有的操作”。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">很简单，他说了：“我想mysql上面不挂中间件，我想直接挂MGW。”</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">可以。但是你得分两步做：第一步你是在平台，你先把D套餐给它搭起来，你到我们MGW和DNS里面去申请。你在这个管理功能就可以做。也就是说，做流程化或者是标准化的时候，你把流程制定出来的时候，也要考虑到灵活性，你要兼容它可能存在的所有情况，我们把线上相关的所有组件都做了管理，MGW有管理，DNS有管理，包括其他的日志都有管理，细分的管理都有，你正常情况下按我的标准、按我的流程去走，你万一涉及到特殊情况的话，你也可以在各个分组件的管理里把你想做的事情做完。这样的话，就把整个DBA或者整个ID用户都圈到你的整个平台里面来了，而不是我的平台今天只兼容一部分。这样的话，大家做自动化起来会很费劲。 因为原来也是，原来我线上会有报警校验线上CMDB的准确性，如果线上CMDB的错的话，可能非常麻烦。所以说，DBA在应对RD的时候很苦恼，我们做自动化运维开发在应对DBA的时候，也很苦恼，用这种方式就可以满足他们了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_16.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在大家选完套餐之后就可以到这个界面了，做数据库运维自动化系统有很多流程性的东西，你接下来需要走哪一步，选完套餐之后让他选机器，你的监控是什么，buffer pool多大，下面会给他展示一个实时的拓扑；你要把你的用户当小白鼠，你得告诉他现在长什么样子了，不然的话他提交出错了，又回来找你。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_17.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个我们去选择atlas，根据分组选择atlas，就是数据库中间件，选择完之后就可以形成这样的图。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_18.png\" alt=\"构建中的坎坷和思考-—2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三步就是你去申请这个虚IP和域名了，这个虚IP层正常一个机房会有一个。一个虚IP上会挂多个atlas。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_19.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">到最后一步可能就是你需要新搭建集群的时候，需要给RD申请一个DB，申请一个帐号，让他可以访问。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_20.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例一：集群搭建</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这样形成最后一个大的JSON，让DBA去做确认，你申请的服务名称、你当前数据库的机器、中间件的机器、你的虚IP层和域名，包括你的DB，会有一个整体的拓扑图，这样的话。然后把整个的参数，所有的需要你完成这个数据库集群搭建的参数合成一个大的JSON。发到API层，API层会做参数校验，你当前搭建的参数是否满足系统的要求，如果满足要求，就会发到后台的流程引擎中，就是后台系统去做任务。做任务的时候，大家可能说，我需不需要有什么高深的语言，这个无所谓了，你可以是脚本，也可以是程序。我们现在线上，搭建的话用的还是DBA他们一开始写的搭建脚本，只需要把脚本改造一下，输入，输出标准化一下，你能够识别脚本的输出输入就行了。</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\">大家说自动化很艰辛，很艰难。其实身边有很多的资源就是DBA手中平时做的一些脚本，有一些脚本可能DBA自己用，写的不太好。但是他本身，他是有非常大的价值的，因为他是长年累月改过的，可能第一版不行改第二版、第二版不行改第三版，他可能改了一年，他的整个脚本跑起来还是非常流利的，我们脚本搭建很稳定得跑了10个月的时间，主要的原因是因为我们DBA很靠谱，积累的很多实用的脚本。有些纯开发的人去做DBA的自动化系统，他很难理解DBA的需求，有时候DBA也讲不清楚，所以通过你做系统，他做脚本的方式去合作，真的很靠谱。因为做出来的系统是非常稳定的。</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_21.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例一：集群搭建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例二：在线表变更</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">说完了数据库集群搭建这个案例，我们说第二个案例：在线表变更是怎么做的。首先批量的DDL或者DML打造我们的API层，我们API层会做两个事情，第一个是语法检测，语法检测有两种方式，一种是测试库，一种是sqlparser；比如，对于autoddl的create操作，你可以在测试库上建一下这个表，你就知道语法对不。或者是说alter操作，你可能先从线上把表结构拉到测试环境，在测试库上先建上，再把alter语句用到这个表上，你看alter能不能通过，这样很方便就绕过了sqlparser。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">但是，在这个时候，因为在做在线的DML的时候，你是需要给用户备份的，方便用户，万一我误操作了，可以去恢复，就必须进行sqlparser。第一步：你必须把update或者delete语句改写成select，然后会去线上做查询计划，看一下explain的结果是否满足我的要求，如果不满足的话，就提示选择，不是直接拒绝掉，没有那么暴力，这个后面会说。所以说这个sqlparser，应该也是一个比较基础的难题，大家可以尝试一下在源码把这个sqlparser抽离出来，或者大家可以考虑去找一些已经开源的sqlparser。第二个就是语义的检测，是什么呢？也是标准化，就是RD提交的SQL是否满足你的要求，比如命名的要求、必须要有主键索引，而且不能有重复的索引，对于DML来说，因为对于互联网应用来说会有很多的比如说客服给我们运营人员说，我的什么什么错了，这个时候运营的人都会改这个数据库，改动一般都是一两行这种，所以我们设定一千行基本上能够满足大部分人的需求。然后在语法、语义提交通过之会到后台的提交任务，刚才所说的2.0的系统，由后台的任务执行者去执行，然后做在线的DDL。我们选择的是开源的pt-online-schema-change，这个是一个开源工具，它做操作的时候，可以做到在线改表的时候不锁表，当然还会有一些其他的问题，这里不是我们今天所说的重点，大家如果以后有遇到这个工具有什么相关的问题都可以找我们，美团还是踩了非常多的坑，有比较多的经验。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_22.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例二：在线表变更\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例二：在线表变更</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">大家可以看看这是我们现在的在线表变更的提交页面。这里也是先选业务，选完相关的业务，你选库，选操作类型，我们这里会有一个业务高峰的描述，比如对于pt-online-schema-change在做表变更的时候，他会有一个数据拷贝的过程，所以说我们会有一个业务高峰，在业务高峰的时候RD发起的任务是不能被执行的。还有任务操作时间区间，RD也可以选，比如我选今天晚上凌晨变更或者什么时候变更都是OK的，RD把他的SQL批量粘到这里。对于在线的分表，粘一个母表就行了，下面我们自动生成带数字的语句会给他操作。这样也方便我们后台的处理，对于512的分表，我们只校验第一个语法语义就行了，不然的话，会产生很多性能问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_23.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例二：在线表变更\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例二：在线表变更</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">讲到这里大家肯定会有疑问，如果你在语法检测或者语义检测出问题的时候应该怎么办？我们不是非常暴力的把RD的请求直接拒绝掉。而是在这里，给了RD一个选择：也就是说我们现在，大部分在线的表变更都是自动的，当然有一些不满足语法语义的单子，语法当然不用说了，直接报错给RD让修改，对于语义来说，有些RD说，你帮我删或者帮我改，我们可以接受延迟，这个时候我们让RD选择，你可以点继续，把这个单子发给DBA，如果DBA说能执行就可以执行了，我们的在线表变更是手自一体的。我们要把RD所有的操作，都得圈到我们的平台里去做，而不是说我语义不支持了，就找DBA手动去做。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_24.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例二：在线表变更\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例二：在线表变更</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这里可以看到，遇到了语法或者语义检测失败之后，我们的平台会给他报错，并会给他一个详细原因的解释，你不能说错了，而且你要直白得告诉RD为什么错了；这样的话可以提升RD的DBA能力。比如说这里长度，SQL语法问题，都会告诉他；这样的话，他可能用问一次两次，后面如果用多了，他就不会问了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_25.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例二：在线表变更\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例二：在线表变更</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这个就是我们整个任务执行的一个详情的单子，就是RD在提交完任务之后在这个页面看到他任务执行的详细的信息，这上面是一些元信息，包括他提交的时间，他服务的信息，下面会有一个详细的执行日志发给他，你在做任务操作的时候，你把你的任务相关的数据实时回填到任务表里，前端只需要读这个任务表就行了。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_26.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例二：在线表变更\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-2-0-mha-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建中的坎坷和思考——2.0版功能实现案例三：高可用解决方案（MHA）</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第三个案例是什么呢？就是我们的高可用的解决方案，上面已经列了，美团现在用的是开源的MHA，一个很牛的日本人写的。我这里大概介绍一下切换的过程，原理大家可以回去自己看，左边是我们四层的架构，我们现在整个MHA只运用于这四层的架构，如果你不是这四层的架构切换过程是不满足的。对于主从的结构这里会有监控的哨兵，比如这个哨兵他发现现在主库连不上了，这个时候，他不是说我就切换了，他是先联系其他哨兵，不能相信谣言嘛，也要先打听打听我自己的判断是不是对的，他会去联系其他几个哨兵，你们帮我看看当前主库是不是挂了，其他几个哨兵跑回来跟他说主库确实挂了，他便开始切换。<br style=\"padding: 0px; margin: 0px;\"/>到了第2步，调MHA去做主从切换。切换完之后呢，他会通过API去改CMDB的信息，CMDB里面会描述数据库的主从的架构，描述完之后，他会去调接口，通知中间件变更主从信息，那么到3.2为止服务就恢复了。我们现在自动和手动做切换，时间都在10秒左右，如果RD程序有数据库重试的话应该是没有影响的。切换完之后会到第4步，其实这里很简单，就是告诉哨兵主从结构变了，告诉他重新监听新的主从结构就OK，这是我们现在平台去做切换的过程，大家可以借鉴一下。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_27.png\" alt=\"构建中的坎坷和思考——2.0版功能实现案例三：高可用解决方案（MHA）\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建之后的效果和后期计划——构建之后的效果</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">说完我们整体的1.0版的数据库自动化运维系统、2.0版的系统，以及三个案例之后我们来看一下现在整个线上构建之后的效果，以及我们后期的计划。这个统计图是一个开源组件统计的，他可以分析每天我们的一个用户量，我们每天在这个平台上跑的RD的用户量大概是在三百多。每天会有三百多RD在我们的平台上做操作，累计的RD数目大概是1461个，这些是需要跟DB打交道的RD数量。这个是我们整体平台跑的效果，你的自动化运维系统做出来之后做的怎么样？不是嘴说的，还是要有质量运营的数据。我们做质量运营，包括用户数，任务的成功率，平台的接入率，功能的覆盖率去衡量整个平台的指标。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_28.png\" alt=\"构建之后的效果和后期计划——构建之后的效果\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建之后的效果和后期计划——后期计划</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这个图，也是我们，我刚才前面已经讲过了，这个架构。我们在使用这个架构的过程中，很好用，非常好。但是也会存在一些问题，存在什么问题呢？首先这个API层，随着前端的功能越来越多，我们API会有200多个，很多很多，维护起来比较麻烦。第二个是CMDB，谁都可以去写。<br style=\"padding: 0px; margin: 0px;\"/>第三个这个任务执行者现在用不着重，因为他现在需要处理后端的各种各样的任务，他会越来越重，DBA可能想要加一个功能，也只能找我加或者我们组内的人去加这个功能，这里能不能让DBA也参与进来</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_29.png\" alt=\"构建之后的效果和后期计划——后期计划\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h1 id=\"-wew-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构建之后的效果和后期计划——wew后期计划</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在这个做完之后我们会有一个后期的计划，我们需要把整个的架构改造成这样的，加入两个东西，一个是核心功能库和核心组件库，这两个东西包含了API基础的核心功能，包括日志，包括统计，包括权限校验都放在核心功能里，核心组件包括一些DNS组件，Atlas组件、监控都放在这里操作，API层只需要负责他的逻辑就行了。<br style=\"padding: 0px; margin: 0px;\"/>任务执行者也是只做通用，我只帮你分发任务，帮你做任务的子进程生成，具体谁去做，去调任务执行平台去做，这样的话，我只要任务平台做的足够好，DBA或者RD只需要把你的脚本放在这个平台的下面的目录里，就能调用整个系统，这样的话非常方便，让更多的人参与你整个平台的建设、开发和改造的过程中来。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/database-automation/database_automation_30.png\" alt=\"构建之后的效果和后期计划——后期计划\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('91', '美团外卖订单中心的演进', '前言美团外卖从2013年9月成交第一单以来，已走过了三个年头。期间，业务飞速发展，美团外卖由日均几单发展为日均500万单（9月11日已突破600万）的大型O2O互联网外卖服务平台。平台支持的品类也由最初外卖单品拓展为全品类。随着订单量的增长、业务复杂度的提升，外卖订单系统也在不断演变进化，从早期一个订单业务模', '2016-10-27 19:20:59', '0', '0', '<h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">前言</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">美团外卖从2013年9月成交第一单以来，已走过了三个年头。期间，业务飞速发展，美团外卖由日均几单发展为日均500万单（9月11日已突破600万）的大型O2O互联网外卖服务平台。平台支持的品类也由最初外卖单品拓展为全品类。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">随着订单量的增长、业务复杂度的提升，外卖订单系统也在不断演变进化，从早期一个订单业务模块到现在分布式可扩展的高性能、高可用、高稳定订单系统。整个发展过程中，订单系统经历了几个明显的阶段，下面本篇文章将为大家介绍一下订单系统的演进过程，重点关注各阶段的业务特征、挑战及应对之道。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为方便大家更好地了解整个演进过程，我们首先看一下外卖业务。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">外卖订单业务</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">外卖订单业务是一个需要即时送的业务，对实时性要求很高。从用户订餐到最终送达用户，一般在1小时内。如果最终送达用户时间变长，会带来槽糕的用户体验。在1小时内，订单会快速经过多个阶段，直到最终送达用户。各个阶段需要紧密配合，确保订单顺利完成。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下图是一个用户视角的订单流程图。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E8%AE%A2%E5%8D%95%E6%B5%81%E7%A8%8B%E5%9B%BE.png\" alt=\"订单流程图\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">从普通用户的角度来看，一个外卖订单从下单后，会经历支付、商家接单、配送、用户收货、售后及订单完成多个阶段。以技术的视角来分解的话，每个阶段依赖于多个子服务来共同完成，比如下单会依赖于购物车、订单预览、确认订单服务，这些子服务又会依赖于底层基础系统来完成其功能。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">外卖业务另一个重要特征是一天内订单量会规律变化，订单会集中在中午、晚上两个“饭点”附近，而其它时间的订单量较少。这样，饭点附近系统压力会相对较大。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下图是一天内的外卖订单量分布图</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E8%AE%A2%E5%8D%95%E9%87%8F%E5%88%86%E5%B8%83%E5%9B%BE.png\" alt=\"订单量分布图\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">总结而言，外卖业务具有如下特征：</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>流程较长且实时性要求高；</li><li>订单量高且集中。</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">下面将按时间脉络为大家讲解订单系统经历的各个阶段、各阶段业务特征、挑战以及应对之道。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">订单系统雏型</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">外卖业务发展早期，第一目标是要能够快速验证业务的可行性。技术上，我们需要保证架构足够灵活、快速迭代从而满足业务快速试错的需求。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在这个阶段，我们将订单相关功能组织成模块，与其它模块（门店模块等）一起形成公用jar包，然后各个系统通过引入jar包来使用订单功能。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">早期系统的整体架构图如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F%E9%9B%8F%E5%9E%8B.png\" alt=\"订单系统雏型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">早期，外卖整体架构简单、灵活，公共业务逻辑通过jar包实现后集成到各端应用，应用开发部署相对简单。比较适合业务早期逻辑简单、业务量较小、需要快速迭代的情况。但是，随着业务逻辑的复杂、业务量的增长，单应用架构的弊端逐步暴露出来。系统复杂后，大家共用一个大项目进行开发部署，协调的成本变高；业务之间相互影响的问题也逐渐增多。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">早期业务处于不断试错、快速变化、快速迭代阶段，通过上述架构，我们能紧跟业务，快速满足业务需求。随着业务的发展以及业务的逐步成熟，我们对系统进行逐步升级，从而更好地支持业务。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">独立的订单系统</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">2014年4月，外卖订单量达到了10万单/日，而且订单量还在持续增长。这时候，业务大框架基本成型，业务在大框架基础上快速迭代。大家共用一个大项目进行开发部署，相互影响，协调成本变高；多个业务部署于同一VM，相互影响的情况也在增多。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为解决开发、部署、运行时相互影响的问题。我们将订单系统进行独立拆分，从而独立开发、部署、运行，避免受其它业务影响。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">系统拆分主要有如下几个原则：</p><blockquote style=\"padding: 0px 0px 0px 1em; margin: 0px; color: rgb(102, 102, 102); border-left-width: 0.5em; border-left-color: rgb(238, 238, 238); border-left-style: solid; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 1em; word-break: break-all;\"><li>相关业务拆分独立系统；</li><li>优先级一致的业务拆分独立系统；</li><li>拆分系统包括业务服务和数据。</li></ul></blockquote><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">基于以上原则，我们将订单系统进行独立拆分，所有订单服务通过RPC接口提供给外部使用。订单系统内部，我们将功能按优先级拆分为不同子系统，避免相互影响。订单系统通过MQ（队列）消息，通知外部订单状态变更。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">独立拆分后的订单系统架构如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E6%8B%86%E5%88%86%E5%90%8E%E7%9A%84%E8%AE%A2%E5%8D%95%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84.png\" alt=\"独立拆分后的订单系统\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">其中，最底层是数据存储层，订单相关数据独立存储。订单服务层，我们按照优先级将订单服务划分为三个系统，分别为交易系统、查询系统、异步处理系统。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">独立拆分后，可以避免业务间的相互影响。快速支持业务迭代需求的同时，保障系统稳定性。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">高性能、高可用、高稳定的订单系统</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单系统经过上述独立拆分后，有效地避免了业务间的相互干扰，保障迭代速度的同时，保证了系统稳定性。这时，我们的订单量突破百万，而且还在持续增长。之前的一些小问题，在订单量增加后，被放大，进而影响用户体验。比如，用户支付成功后，极端情况下（比如网络、数据库问题）会导致支付成功消息处理失败，用户支付成功后依然显示未支付。订单量变大后，问题订单相应增多。我们需要提高系统的可靠性，保证订单功能稳定可用。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">另外，随着订单量的增长、订单业务的复杂，对订单系统的性能、稳定性、可用性等提出了更高的要求。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了提供更加稳定、可靠的订单服务，我们对拆分后的订单系统进行进一步升级。下面将分别介绍升级涉及的主要内容。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">性能优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">系统独立拆分后，可以方便地对订单系统进行优化升级。我们对独立拆分后的订单系统进行了很多的性能优化工作，提升服务整体性能，优化工作主要涉及如下几个方面。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">异步化</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">服务所需要处理的工作越少，其性能自然越高。可以通过将部分操作异步化来减少需要同步进行的操作，进而提升服务的性能。异步化有两种方案。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>线程或线程池：将异步操作放在单独线程中处理，避免阻塞服务线程；</li><li>消息异步：异步操作通过接收消息完成。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">异步化带来一个隐患，如何保障异步操作的执行。这个场景主要发生在应用重启时，对于通过线程或线程池进行的异步化，JVM重启时，后台执行的异步操作可能尚未完成。这时，需要通过JVM优雅关闭来保证异步操作进行完成后，JVM再关闭。通过消息来进行的，消息本身已提供持久化，不受应用重启影响。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">具体到订单系统，我们通过将部分不必同步进行的操作异步化，来提升对外服务接口的性能。不需要立即生效的操作即可以异步进行，比如发放红包、PUSH推送、统计等。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以订单配送PUSH推送为例，将PUSH推送异步化后的处理流程变更如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E5%BC%82%E6%AD%A5%E5%8C%96.png\" alt=\"异步化\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">PUSH异步化后，线程#1在更新订单状态、发送消息后立即返回，而不用同步等待PUSH推送完成。而PUSH推送异步在线程#2中完成。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">并行化</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">操作并行化也是提升性能的一大利器，并行化将原本串行的工作并行执行，降低整体处理时间。我们对所有订单服务进行分析，将其中非相互依赖的操作并行化，从而提升整体的响应时间。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以用户下单为例，第一步是从各个依赖服务获取信息，包括门店、菜品、用户信息等。获取这些信息并不需要相互依赖，故可以将其并行化，并行后的处理流程变更如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E5%B9%B6%E8%A1%8C%E5%8C%96.png\" alt=\"并行化\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过将获取信息并行化，可有效缩短下单时间，提升下单接口性能。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">缓存</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过将统计信息进行提前计算后缓存，避免获取数据时进行实时计算，从而提升获取统计数据的服务性能。比如对于首单、用户已减免配送费等，通过提前计算后缓存，可以简化实时获取数据逻辑，节约时间。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以用户已减免配送费为例，如果需要实时计算，则需要取到用户所有订单后，再进行计算，这样实时计算成本较高。我们通过提前计算，缓存用户已减免配送费。需要取用户已减免配送费时，从缓存中取即可，不必实时计算。具体来说，包括如下几点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>通过缓存保存用户已减免配送费；</li><li>用户下单时，如果订单有减免配送费，增加缓存中用户减免配送费金额（异步进行）；</li><li>订单取消时，如果订单有减免配送费，减少缓存中用户减免配送费金额（异步进行）；</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">一致性优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单系统涉及交易，需要保证数据的一致性。否则，一旦出现问题，可能会导致订单不能及时配送、交易金额不对等。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">交易一个很重要的特征是其操作具有事务性，订单系统是一个复杂的分布式系统，比如支付涉及订单系统、支付平台、支付宝/网银等第三方。仅通过传统的数据库事务来保障不太可行。对于订单交易系统的事务性，并不要求严格满足传统数据库事务的ACID性质，只需要最终结果一致即可。针对订单系统的特征，我们通过如下种方式来保障最终结果的一致性。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">重试/幂等</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过延时重试，保证操作最终会最执行。比如退款操作，如退款时遇到网络或支付平台故障等问题，会延时进行重试，保证退款最终会被完成。重试又会带来另一个问题，即部分操作重复进行，需要对操作进行幂等处理，保证重试的正确性。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">以退款操作为例，加入重试/幂等后的处理流程如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E9%80%80%E6%AC%BE%E6%B5%81%E7%A8%8B.png\" alt=\"引入重试的退款流程\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">退款操作首先会检查是否已经退款，如果已经退款，直接返回。否则，向支付平台发起退款，从而保证操作幂等，避免重复操作带来问题。如果发起退款失败（比如网络或支付平台故障），会将任务放入延时队列，稍后重试。否则，直接返回。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过重试+幂等，可以保证退款操作最终一定会完成。</p><h4 id=\"2pc\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">2PC</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">2PC是指分布式事务的两阶段提交，通过2PC来保证多个系统的数据一致性。比如下单过程中，涉及库存、优惠资格等多个资源，下单时会首先预占资源（对应2PC的第一阶段），下单失败后会释放资源（对应2PC的回滚阶段），成功后会使用资源（对应2PC的提交阶段）。对于2PC，网上有大量的说明，这里不再继续展开。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">高可用</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式系统的可用性由其各个组件的可用性共同决定，要提升分布式系统的可用性，需要综合提升组成分布式系统的各个组件的可用性。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对订单系统而言，其主要组成组件包括三类：存储层、中间件层、服务层。下面将分层说明订单系统的可用性。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">存储层</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">存储层的组件如MySQL、ES等本身已经实现了高可用，比如MySQL通过主从集群、ES通过分片复制来实现高可用。存储层的高可用依赖各个存储组件即可。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">中间件层</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式系统会大量用到各类中间件，比如服务调用框架等，这类中间件一般使用开源产品或由公司基础平台提供，本身已具备高可用。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">服务层</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在分布式系统中，服务间通过相互调用来完成业务功能，一旦某个服务出现问题，会级联影响调用方服务，进而导致系统崩溃。分布式系统中的依赖容灾是影响服务高可用的一个重要方面。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">依赖容灾主要有如下几个思路：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>依赖超时设置；</li><li>依赖灾备；</li><li>依赖降级；</li><li>限制依赖使用资源；</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单系统会依赖多个其它服务，也存在这个问题。当前订单系统通过同时采用上述四种方法，来避免底层服务出现问题时，影响整体服务。具体实现上，我们采用Hystrix框架来完成依赖容灾功能。Hystrix框架采用上述四种方法，有效实现依赖容灾。订单系统依赖容灾示意图如下所示</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E8%BD%AF%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB.png\" alt=\"资源软隔离\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过为每个依赖服务设置独立的线程池、合理的超时时间及出错时回退方法，有效避免服务出现问题时，级联影响，导致整体服务不可用，从而实现服务高可用。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">另外，订单系统服务层都是无状态服务，通过集群+多机房部署，可以避免单点问题及机房故障，实现高可用。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">小结</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">上面都是通过架构、技术实现层面来保障订单系统的性能、稳定性、可用性。实际中，有很多的事故是人为原因导致的，除了好的架构、技术实现外，通过规范、制度来规避人为事故也是保障性能、稳定性、可用性的重要方面。订单系统通过完善需求review、方案评审、代码review、测试上线、后续跟进流程来避免人为因素影响订单系统稳定性。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过以上措施，我们将订单系统建设成了一个高性能、高稳定、高可用的分布式系统。其中，交易系统tp99为150ms、查询系统tp99时间为40ms。整体系统可用性为6个9。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">可扩展的订单系统</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单系统经过上面介绍的整体升级后，已经是一个高性能、高稳定、高可用的分布式系统。但是系统的的可扩展性还存在一定问题，部分服务只能通过垂直扩展（增加服务器配置）而不能通过水平扩展（加机器）来进行扩容。但是，服务器配置有上限，导致服务整体容量受到限制。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">到2015年5月的时候，这个问题就比较突出了。当时，数据库服务器写接近单机上限。业务预期还会继续快速增长。为保障业务的快速增长，我们对订单系统开始进行第二次升级。目标是保证系统有足够的扩展性，从而支撑业务的快速发展。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式系统的扩展性依赖于分布式系统中各个组件的可扩展性，针对订单系统而言，其主要组成组件包括三类：存储层、中间件层、服务层。下面将分层说明如何提高各层的可扩展性。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">存储层</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单系统存储层主要依赖于MySQL持久化、tair/redis cluster缓存。tair/redis cluster缓存本身即提供了很好的扩展性。MySQL可以通过增加从库来解决读扩展问题。但是，对于写MySQL存在单机容量的限制。另外，数据库的整体容量受限于单机硬盘的限制。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">存储层的可扩展性改造主要是对MySQL扩展性改造。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">分库分表</strong></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">写容量限制是受限于MySQL数据库单机处理能力限制。如果能将数据拆为多份，不同数据放在不同机器上，就可以方便对容量进行扩展。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对数据进行拆分一般分为两步，第一步是分库，即将不同表放不同库不同机器上。经过第一步分库后，容量得到一定提升。但是，分库并不能解决单表容量超过单机限制的问题，随着业务的发展，订单系统中的订单表即遇到了这个问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">针对订单表超过单库容量的问题，需要进行分表操作，即将订单表数据进行拆分。单表数据拆分后，解决了写的问题，但是如果查询数据不在同一个分片，会带来查询效率的问题（需要聚合多张表）。由于外卖在线业务对实时性、性能要求较高。我们针对每个主要的查询维度均保存一份数据（每份数据按查询维度进行分片），方便查询。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">具体来说，外卖主要涉及三个查询维度：订单ID、用户ID、门店ID。对订单表分表时，对于一个订单，我们存三份，分别按照订单ID、用户ID、 门店ID以一定规则存储在每个维度不同分片中。这样，可以分散写压力，同时，按照订单ID、用户ID、门店ID三个维度查询时，数据均在一个分片，保证较高的查询效率。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单表分表后，订单表的存储架构如下所示：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/mt_waimai_order_evolution/%E5%88%86%E8%A1%A8.png\" alt=\"分库分表\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">可以看到，分表后，每个维度共有100张表，分别放在4个库上面。对于同一个订单，冗余存储了三份。未来，随着业务发展，还可以继续通过将表分到不同机器上来持续获得容量的提升。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分库分表后，订单数据存储到多个库多个表中，为应用层查询带来一定麻烦，解决分库分表后的查询主要有三种方案：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>MySQL服务器端支持：目前不支持。</li><li>中间件。</li><li>应用层。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">由于MySQL服务器端不能支持，我们只剩下中间件和应用层两个方案。中间件方案对应用透明，但是开发难度相对较大，当时这块没有资源去支持。于是，我们采用应用层方案来快速支持。结合应用开发框架（SPRING+MYBATIS），我们实现了一个轻量级的分库分表访问插件，避免将分库分表逻辑嵌入到业务代码。分库分表插件的实现包括如下几个要点。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>配置文件管理分库分表配置信息；</li><li>JAVA注解说明SQL语句分库分表信息；</li><li>JAVA AOP解析注解+查询配置文件，获取数据源及表名；</li><li>MYBATIS动态替换表名；</li><li>SPRING动态替换数据源。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过分库分表，解决了写容量扩展问题。但是分表后，会给查询带来一定的限制，只能支持主要维度的查询，其它维度的查询效率存在问题。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">ES搜索</strong></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">订单表分表之后，对于ID、用户ID、门店ID外的查询（比如按照手机号前缀查询）存在效率问题。这部分通常是复杂查询，可以通过全文搜索来支持。在订单系统中，我们通过ES来解决分表后非分表维度的复杂查询效率问题。具体来说，使用ES，主要涉及如下几点。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>通过databus将订单数据同步到ES。</li><li>同步数据时，通过批量写入来降低ES写入压力。</li><li>通过ES的分片机制来支持扩展性。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">小结</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过对存储层的可扩展性改造，使得订单系统存储层具有较好的可扩展性。对于中间层的可扩展性与上面提到的中间层可用性一样，中间层本身已提供解决方案，直接复用即可。对于服务层，订单系统服务层提供的都是无状态服务，对于无状态服务，通过增加机器，即可获得更高的容量，完成扩容。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过对订单系统各层可扩展性改造，使得订单系统具备了较好的可扩展性，能够支持业务的持续发展，当前，订单系统已具体千万单/日的容量。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">上面几部分都是在介绍如何通过架构、技术实现等手段来搭建一个可靠、完善的订单系统。但是，要保障系统的持续健康运行，光搭建系统还不够，运维也是很重要的一环。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">智能运维的订单系统</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">早期，对系统及业务的运维主要是采用人肉的方式，即外部反馈问题，RD通过排查日志等来定位问题。随着系统的复杂、业务的增长，问题排查难度不断加大，同时反馈问题的数量也在逐步增多。通过人肉方式效率偏低，并不能很好的满足业务的需求。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为提升运维效率、降低人力成本，我们对系统及业务运维进行自动化、智能化改进，改进包括事前、事中、事后措施。</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">事前措施</strong></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">事前措施的目的是为提前发现隐患，提前解决，避免问题恶化。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在事前措施这块，我们主要采取如下几个手段：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>定期线上压测：通过线上压测，准确评估系统容量，提前发现系统隐患；</li><li>周期性系统健康体检：通过周期检测CPU利用率、内存利用率、接口QPS、接口TP95、异常数，取消订单数等指标是否异常，可以提前发现提前发现潜在问题、提前解决；</li><li>全链路关键日志：通过记录全链路关键日志，根据日志，自动分析反馈订单问题原因，给出处理结果，有效提高反馈处理效率。</li></ol><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">事中措施</strong></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">事中措施的目的是为及时发现问题、快速解决问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">事中这块，我们采取的手段包括：</p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>订单监控大盘：实时监控订单业务指标，异常时报警；</li><li>系统监控大盘：实时监控订单系统指标，异常时报警；</li><li>完善的SOP：报警后，通过标准流程，快速定位问题、解决问题。</li></ol><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li><strong style=\"padding: 0px; margin: 0px;\">事后措施</strong></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">事后措施是指问题发生后，分析问题原因，彻底解决。并将相关经验教训反哺给事前、事中措施，不断加强事先、事中措施，争取尽量提前发现问题，将问题扼杀在萌芽阶段。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过将之前人肉进行的运维操作自动化、智能化，提升了处理效率、减少了运维的人力投入</p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('92', '分布式队列编程优化篇', '前言“分布式队列编程”是一个系列文，之前我们已经发布了《分布式队列编程模型、实战》，主要剖析了分布式队列编程模型的需求来源、定义、结构以及其变化多样性；根据作者在新美大实际工作经验，给出了队列式编程在分布式环境下的一些具体应用。本文将重点阐述工程师运用分布式队列编程构架的时候，在生产者、分布式队列以及消费者这', '2016-10-27 19:21:57', '0', '0', '<h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">前言</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">“分布式队列编程”是一个系列文，之前我们已经发布了《分布式队列编程模型、实战》，主要剖析了分布式队列编程模型的需求来源、定义、结构以及其变化多样性；根据作者在新美大实际工作经验，给出了队列式编程在分布式环境下的一些具体应用。本文将重点阐述工程师运用分布式队列编程构架的时候，在生产者、分布式队列以及消费者这三个环节的注意点以及优化建议。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">确定采用分布式队列编程模型之后，主体架构就算完成了，但工程师的工作还远远未结束。天下事必做于细，细节是一个不错的架构向一个优秀的系统进阶的关键因素。优化篇选取了作者以及其同事在运用分布式队列编程模型架构时所碰到的典型问题和解决方案。这里些问题出现的频率较高，如果你经验不够，很可能会“踩坑”。希望通过这些讲解，帮助读者降低分布式队列编程模型的使用门槛。本文将对分布式队列编程模型的三种角色：生产者（Producer），分布式队列（Queue），消费者（Consumer）分别进行优化讨论。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">生产者优化</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在分布式队列编程中，生产者往往并非真正的生产源头，只是整个数据流中的一个节点，这种生产者的操作是处理－转发（Process-Forward）模式。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这种模式给工程师们带来的第一个问题是吞吐量问题。这种模式下运行的生产者，一边接收上游的数据，一边将处理完的数据发送给下游。本质上，它是一个非常经典的数学问题，其抽象模型是一些没有盖子的水箱，每个水箱接收来自上一个水箱的水，进行处理之后，再将水发送到下一个水箱。工程师需要预测水源的流量、每个环节水箱的处理能力、水龙头的排水速度，最终目的是避免水溢出水箱，或者尽可能地减小溢出事件的概率。实际上流式编程框架以及其开发者花了大量的精力去处理和优化这个问题。下文的缓存优化和批量写入优化都是针对该问题的解决方案。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">第二个需要考虑的问题是持久化。由于各种原因，系统总是会宕机。如果信息比较敏感，例如计费信息、火车票订单信息等，工程师们需要考虑系统宕机所带来的损失，找到让损失最小化的解决方案。持久化优化重点解决这一类问题。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">缓存优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">处于“处理－转发”模式下运行的生产者往往被设计成请求驱动型的服务，即每个请求都会触发一个处理线程，线程处理完后将结果写入分布式队列。如果由于某种原因队列服务不可用，或者性能恶化，随着新请求的到来，生产者的处理线程就会产生堆积。这可能会导致如下两个问题：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>系统可用性降低。由于每个线程都需要一定的内存开销，线程过多会使系统内存耗尽，甚至可能产生雪崩效应导致最终完全不可用。</li><li>信息丢失。为了避免系统崩溃，工程师可能会给请求驱动型服务设置一个处理线程池，设置最大处理线程数量。这是一种典型的降级策略，目的是为了系统崩溃。但是，后续的请求会因为没有处理线程而被迫阻塞，最终可能产生信息丢失。例如：对于广告计费采集，如果采集系统因为线程耗尽而不接收客户端的计费行为，这些计费行为就会丢失。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">缓解这类问题的思路来自于CAP理论，即通过降低一致性来提高可用性。生产者接收线程在收到请求之后第一时间不去处理，直接将请求缓存在内存中（牺牲一致性），而在后台启动多个处理线程从缓存中读取请求、进行处理并写入分布式队列。与线程所占用的内存开销相比，大部分的请求所占内存几乎可以忽略。通过在接收请求和处理请求之间增加一层内存缓存，可以大大提高系统的处理吞吐量和可扩展性。这个方案本质上是一个内存生产者消费者模型。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">批量写入优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果生产者的请求过大，写分布式队列可能成为性能瓶颈，有如下几个因素：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>队列自身性能不高。</li><li>分布式队列编程模型往往被应用在跨机房的系统里面，跨机房的网络开销往往容易成为系统瓶颈。</li><li>消息确认机制往往会大大降低队列的吞吐量以及响应时间。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果在处理请求和写队列之间添加一层缓存，消息写入程序批量将消息写入队列，可以大大提高系统的吞吐量。原因如下：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>批量写队列可以大大减少生产者和分布式队列的交互次数和消息传输量。特别是对于高吞吐小载荷的消息实体，批量写可以显著降低网络传输量。</li><li>对于需要确认机制的消息，确认机制往往会大大降低队列的吞吐量以及响应时间，某些高敏感的消息需要多个消息中间件代理同时确认，这近一步恶化性能。在生产者的应用层将多条消息批量组合成一个消息体，消息中间件就只需要对批量消息进行一次确认，这可能会数量级的提高消息传输性能。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">持久化优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通过添加缓存，消费者服务的吞吐量和可用性都得到了提升。但缓存引入了一个新问题——内存数据丢失。对于敏感数据，工程师需要考虑如下两个潜在问题：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>如果内存中存在未处理完的请求，而某些原因导致生产者服务宕机，内存数据就会丢失而可能无法恢复。</li><li>如果分布式队列长时间不可用，随着请求数量的不断增加，最终系统内存可能会耗尽而崩溃，内存的消息也可能丢失。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">所以缓存中的数据需要定期被持久化到磁盘等持久层设备中，典型的持久化触发策略主要有两种：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>定期触发，即每隔一段时间进行一次持久化。</li><li>定量触发，即每当缓存中的请求数量达到一定阈值后进行持久化。<br style=\"padding: 0px; margin: 0px;\"/>是否需要持久化优化，以及持久化策略应该由请求数据的敏感度、请求量、持久化性能等因素共同决定。</li></ul><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">中间件选型</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式队列不等同于各种开源的或者收费的消息中间件，甚至在一些场景下完全不需要使用消息中间件。但是，消息中间件产生的目的就是解决消息传递问题，这为分布式队列编程架构提供了很多的便利。在实际工作中，工程师们应该将成熟的消息中间件作为队列的首要备选方案。<br style=\"padding: 0px; margin: 0px;\"/>本小节对消息中间件的功能、模型进行阐述，并给出一些消息中间件选型、部署的具体建议。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">中间件的功能</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">明白一个系统的每个具体功能是设计和架构一个系统的基础。典型的消息中间件主要包含如下几个功能：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>消息接收</li><li>消息分发</li><li>消息存储</li><li>消息读取</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">概念模型</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">抽象的消息中间件模型包含如下几个角色：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>发送者和接收者客户端（Sender/Receiver Client），在具体实施过程中，它们一般以库的形式嵌入到应用程序代码中。</li><li>代理服务器（Broker Server），它们是与客户端代码直接交互的服务端代码。</li><li>消息交换机（Exchanger），接收到的消息一般需要通过消息交换机（Exchanger）分发到具体的消息队列中。</li><li>消息队列，一般是一块内存数据结构或持久化数据。<br style=\"padding: 0px; margin: 0px;\"/>概念模型如下图：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/messagequeue.png\" alt=\"消息队列中间件\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/>为了提高分发性能，很多消息中间件把消息代理服务器的拓扑图发送到发送者和接收者客户端（Sender/Receiver Client），如此一来，发送源可以直接进行消息分发。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">选型标准</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">要完整的描述消息中间件各个方面非常困难，大部分良好的消息中间件都有完善的文档，这些文档的长度远远超过本文的总长度。但如下几个标准是工程师们在进行消息中间件选型时经常需要考虑和权衡的。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">性能</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">性能主要有两个方面需要考虑：吞吐量（Throughput）和响应时间（Latency）。<br style=\"padding: 0px; margin: 0px;\"/>不同的消息队列中间件的吞吐量和响应时间相差甚远，在选型时可以去网上查看一些性能对比报告。<br style=\"padding: 0px; margin: 0px;\"/>对于同一种中间件，不同的配置方式也会影响性能。主要有如下几方面的配置：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>是否需要确认机制，即写入队列后，或从队列读取后，是否需要进行确认。确认机制对响应时间的影响往往很大。</li><li>能否批处理，即消息能否批量读取或者写入。批量操作可以大大减少应用程序与消息中间件的交互次数和消息传递量，大大提高吞吐量。</li><li>能否进行分区（Partition）。将某一主题消息队列进行分区，同一主题消息可以有多台机器并行处理。这不仅仅能影响消息中间件的吞吐量，还决定着消息中间件是否具备良好的可伸缩性（Scalability）。</li><li>是否需要进行持久化。将消息进行持久化往往会同时影响吞吐量和响应时间。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">可靠性</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">可靠性主要包含：可用性、持久化、确认机制等。<br style=\"padding: 0px; margin: 0px;\"/>高可用性的消息中间件应该具备如下特征：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>消息中间件代理服务器（Broker）具有主从备份。即当一台代理服务宕机之后，备用服务器能接管相关的服务。</li><li>消息中间件中缓存的消息是否有备份、并持久化。<br style=\"padding: 0px; margin: 0px;\"/>根据CAP理论，高可用、高一致性以及网络分裂不可兼得。根据作者的观察，大部分的消息中间件在面临网络分裂的情况下下，都很难保证数据的一致性以及可用性。 很多消息中间件都会提供一些可配置策略，让使用者在可用性和一致性之间做权衡。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">高可靠的消息中间件应该确保从发送者接收到的消息不会丢失。中间件代理服务器的宕机并不是小概率事件，所以保存在内存中的消息很容易发生丢失。大部分的消息中间件都依赖于消息的持久化去降低消息丢失损失，即将接收到的消息写入磁盘。即使提供持久化，仍有两个问题需要考虑：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>磁盘损坏问题。长时间来看，磁盘出问题的概率仍然存在。</li><li>性能问题。与操作内存相比，磁盘I/O的操作性能要慢几个数量级。频繁持久化不仅会增加响应时间，也会降低吞吐量。<br style=\"padding: 0px; margin: 0px;\"/>解决这两个问题的一个解决方案就是：多机确认，定期持久化。即消息被缓存在多台机器的内存中，只有每台机器都确认收到消息，才跟发送者确认（很多消息中间件都会提供相应的配置选项，让用户设置最少需要多少台机器接收到消息）。由于多台独立机器同时出故障的概率遵循乘法法则，指数级降低，这会大大提高消息中间件的可靠性。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">确认机制本质上是通讯的握手机制（Handshaking）。如果没有该机制，消息在传输过程中丢失将不会被发现。高敏感的消息要求选取具备确认机制的消息中间件。当然如果没有接收到消息中间件确认完成的指令，应用程序需要决定如何处理。典型的做法有两个：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>多次重试。</li><li>暂存到本地磁盘或其它持久化媒介。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">客户端接口所支持语言</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">采用现存消息中间件就意味着避免重复造轮子。如果某个消息中间件未能提供对应语言的客户端接口，则意味着极大的成本和兼容性问题。</p><h3 id=\"-delivery-policies-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">投递策略（Delivery policies）</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">投递策略指的是一个消息会被发送几次。主要包含三种策略：最多一次（At most Once ）、最少一次（At least Once）、仅有一次（Exactly Once）。<br style=\"padding: 0px; margin: 0px;\"/>在实际应用中，只考虑消息中间件的投递策略并不能保证业务的投递策略，因为接收者在确认收到消息和处理完消息并持久化之间存在一个时间窗口。例如，即使消息中间件保证仅有一次（Exactly Once），如果接收者先确认消息，在持久化之前宕机，则该消息并未被处理。从应用的角度，这就是最多一次（At most Once）。反之，接收者先处理消息并完成持久化，但在确认之前宕机，消息就要被再次发送，这就是最少一次（At least Once）。 如果消息投递策略非常重要，应用程序自身也需要仔细设计。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">消费者优化</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">消费者是分布式队列编程中真正的数据处理方，数据处理方最常见的挑战包括：有序性、串行化（Serializability）、频次控制、完整性和一致性等。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">挑战</h2><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">有序性</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在很多场景下，如何保证队列信息的有序处理是一个棘手的问题。如下图，假定分布式队列保证请求严格有序，请求ri2和ri1都是针对同一数据记录的不同状态，ri2的状态比ri1的状态新。T1、T2、T3和T4代表各个操作发生的时间，并且 T1 &lt; T2 &lt; T3 &lt; T4（&quot;&lt;&quot;代表早于）。<br style=\"padding: 0px; margin: 0px;\"/>采用多消费者架构，这两条记录被两个消费者（Consumer1和Consumer2）处理后更新到数据库里面。Consumer1虽然先读取ri1但是却后写入数据库，这就导致，新的状态被老的状态覆盖，所以多消费者不保证数据的有序性。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/sequence.png\" alt=\"有序性\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">串行化</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">很多场景下，串行化是数据处理的一个基本需求，这是保证数据完整性、可恢复性、事务原子性等的基础。为了在并行计算系统里实现串行化，一系列的相关理论和实践算法被提出。对于分布式队列编程架构，要在在多台消费者实现串行化非常复杂，无异于重复造轮子。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">频次控制</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">有时候，消费者的消费频次需要被控制，可能的原因包括：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>费用问题。如果每次消费所引起的操作都需要收费，而同一个请求消息在队列中保存多份，不进行频次控制，就会导致无谓的浪费。</li><li>性能问题。每次消费可能会引起对其他服务的调用，被调用服务希望对调用量有所控制，对同一个请求消息的多次访问就需要有所控制。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">完整性和一致性</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">完整性和一致性是所有多线程和多进程的代码都面临的问题。在多线程或者多进程的系统中考虑完整性和一致性往往会大大地增加代码的复杂度和系统出错的概率。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">单例服务优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">几乎所有串行化理论真正解决的问题只有一个：性能。 所以，在性能允许的前提下，对于消费者角色，建议采用单实例部署。通过单实例部署，有序性、串行化、完整性和一致性问题自动获得了解决。另外，单实例部署的消费者拥有全部所需信息，它可以在频次控制上采取很多优化策略。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">天下没有免费的午餐。同样，单实例部署并非没有代价，它意味着系统可用性的降低，很多时候，这是无法接受的。解决可用性问题的最直接的思路就是冗余（Redundancy）。最常用的冗余方案是Master-slave架构，不过大部分的Master-slave架构都是Active/active模式，即主从服务器都提供服务。例如，数据库的Master-slave架构就是主从服务器都提供读服务，只有主服务器提供写服务。大部分基于负载均衡设计的Master-slave集群中，主服务器和从服务器同时提供相同的服务。这显然不满足单例服务优化需求。有序性和串行化需要Active/passive架构，即在某一时刻只有主实例提供服务，其他的从服务等待主实例失效。这是典型的领导人选举架构，即只有获得领导权的实例才能充当实际消费者，其他实例都在等待下一次选举。采用领导人选举的Active/passive架构可以大大缓解纯粹的单实例部署所带来的可用性问题。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">令人遗憾的是，除非工程师们自己在消费者实例里面实现Paxos等算法，并在每次消息处理之前都执行领导人选举。否则，理论上讲，没有方法可以保障在同一个时刻只有一个领导者。而对每个消息都执行一次领导人选举，显然性能不可行。实际工作中，最容易出现的问题时机发生在领导人交接过程中，即前任领导人实例变成辅助实例，新部署实例开始承担领导人角色。为了平稳过渡，这两者之间需要有一定的通讯机制，但是，无论是网络分区（Network partition）还是原领导人服务崩溃都会使这种通讯机制变的不可能。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对于完整性和一致性要求很高的系统，我们需要在选举制度和交接制度这两块进行优化。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">领导人选举架构</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">典型的领导人选举算法有Paxos、ZAB（ ZooKeeper Atomic Broadcast protocol）。为了避免重复造轮子，建议采用ZooKeeper的分布式锁来实现领导人选举。典型的ZooKeeper实现算法如下（摘自参考资料[4]）：</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><em style=\"padding: 0px; margin: 0px;\">Let ELECTION be a path of choice of the application. To volunteer to be a leader:</em></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><em style=\"padding: 0px; margin: 0px;\">1.Create znode z with path &quot;ELECTION/guid-n_&quot; with both SEQUENCE and EPHEMERAL flags;</em><br style=\"padding: 0px; margin: 0px;\"/><em style=\"padding: 0px; margin: 0px;\">2.Let C be the children of &quot;ELECTION&quot;, and i be the sequence number of z;</em><br style=\"padding: 0px; margin: 0px;\"/><em style=\"padding: 0px; margin: 0px;\">3.Watch for changes on &quot;ELECTION/guid-n_j&quot;, where j is the largest sequence number such that j &lt; i and n_j is a znode in C;</em></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><em style=\"padding: 0px; margin: 0px;\">Upon receiving a notification of znode deletion:</em></p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><em style=\"padding: 0px; margin: 0px;\">1.Let C be the new set of children of ELECTION;</em><br style=\"padding: 0px; margin: 0px;\"/><em style=\"padding: 0px; margin: 0px;\">2.If z is the smallest node in C, then execute leader procedure;</em><br style=\"padding: 0px; margin: 0px;\"/><em style=\"padding: 0px; margin: 0px;\">3.Otherwise, watch for changes on &quot;ELECTION/guid-n_j&quot;, where j is the largest sequence number such that j &lt; i and n_j is a znode in C;</em></p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">领导人交接架构</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">领导人选举的整个过程发生在ZooKeeper集群中，各个消费者实例在这场选举中只充当被告知者角色（Learner）。领导人选举算法，只能保证最终只有一个Leader被选举出来，并不保障被告知者对Leader的理解是完全一致的。本质上，上文的架构里，选举的结果是作为令牌（Token）传递给消费者实例，消费者将自身的ID与令牌进行对比，如果相等，则开始执行消费操作。所以当发生领导人换届的情况，不同的Learner获知新Leader的时间并不同。例如，前任Leader如果因为网络问题与ZooKeeper集群断开，前任Leader只能在超时后才能判断自己是否不再承担Leader角色了，而新的Leader可能在这之前已经产生。另一方面，即使前任Leader和新Leader同时接收到新Leader选举结果，某些业务的完整性要求迫使前任Leader仍然完成当前未完成的工作。以上的讲解非常抽象，生活中却给了一些更加具体的例子。众所周知，美国总统候选人在选举结束后并不直接担任美国总统，从选举到最终承担总统角色需要一个过渡期。对于新当选Leader的候选人而言，过渡期间称之为加冕阶段（Inauguration）。对于即将卸任的Leader，过渡期称为交接阶段（HandOver）。所以一个基于领导人选举的消费者从加冕到卸任经历三个阶段：Inauguration、Execution、HandOver。在加冕阶段，新领导需要进行一些初始化操作。Execution阶段是真正的队列消息处理阶段。在交接阶段，前任领导需要进行一些清理操作。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">类似的，为了解决领导人交接问题，所有的消费者从代码实现的角度都需要实现类似ILeaderCareer接口。这个接口包含三个方发inaugurate()，handOver()和execute（）。某个部署实例（Learner）在得知自己承担领导人角色后，需要调用inaugurate()方法，进行加冕。主要的消费逻辑通过不停的执行execute（）实现，当确认自己不再承担领导人之后，执行handOver()进行交接。</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"class\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">interface</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">ILeaderCareer</span> </span>{ &nbsp; &nbsp;<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">void</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">inaugurate</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">()</span></span>; &nbsp; &nbsp;<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">void</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">handOver</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">()</span></span>; &nbsp; &nbsp;<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">execute</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">()</span></span>;\r\n}</code></pre><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果承担领导人角色的消费者，在执行execute（）阶段得知自己将要下台，根据消息处理的原子性，该领导人可以决定是否提前终止操作。如果整个消息处理是一个原子性事务，直接终止该操作可以快速实现领导人换届。否则，前任领导必须完成当前消息处理后，才进入交接阶段。这意味着新的领导人，在inaugurate()阶段需要进行一定时间的等待。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">排重优化</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">频次控制是一个经典问题。对于分布式队列编程架构，相同请求重复出现在队列的情况并不少见。如果相同请求在队列中重复太多，排重优化就显得很必要。分布式缓存更新是一个典型例子，所有请求都被发送到队列中用于缓存更新。如果请求符合典型的高斯分布，在一段时间内会出现大量重复的请求，而同时多线程更新同一请求缓存显然没有太大的意义。<br style=\"padding: 0px; margin: 0px;\"/>排重优化是一个算法，其本质是基于状态机的编程，整个讲解通过模型、构思和实施三个步骤完成。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">模型</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">进行排重优化的前提是大量重复的请求。在模型这一小节，我们首先阐述重复度模型、以及不同重复度所导致的消费模型，最后基于这两个模型去讲解排重状态机。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">重复度模型</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">首先我们给出最小重复长度的概念。同一请求最小重复长度：同一请求在队列中的重复出现的最小间距。例如，请求ri第一次出现在位置3，第二次出现在10，最小重复长度等于7。<br style=\"padding: 0px; margin: 0px;\"/>是否需要进行排重优化取决于队列中请求的重复度。由于不同请求之间并不存在重复的问题，不失一般性，这里的模型只考了单个请求的重复度，重复度分为三个类：无重复、稀疏重复、高重复。<br style=\"padding: 0px; margin: 0px;\"/>无重复：在整个请求过程，没有任何一个请求出现一次以上。<br style=\"padding: 0px; margin: 0px;\"/>稀疏重复：主要的请求最小重复长度大于消费队列长度。<br style=\"padding: 0px; margin: 0px;\"/>高重复：大量请求最小重复长度小于消费队列长度。<br style=\"padding: 0px; margin: 0px;\"/>对于不同的重复度，会有不同的消费模型。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">无重复消费模型</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在整个队列处理过程中，所有的请求都不相同，如下图：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/nondup.png\" alt=\"无重复消费模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">稀疏重复消费模型</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">当同一请求最小重复长度大于消费者队列长度，如下图。假定有3个消费者，Consumer1将会处理r1，Consumer2将会处理r2，Consumer3将会处理r3，如果每个请求处理的时间严格相等，Consumer1在处理完r1之后，接着处理r4，Consumer2将会处理r2之后会处理r1。虽然r1被再次处理，但是任何时刻，只有这一个消费者在处理r1，不会出现多个消费者同时处理同一请求的场景。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/sparsedup.png\" alt=\"稀疏重复消费模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">高重复消费模型</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如下图，仍然假定有3个消费者，队列中前面4个请求都是r1，它会同时被3个消费者线程处理：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/highdup.png\" alt=\"高重复消费模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/>显然，对于无重复和稀疏重复的分布式队列，排重优化并不会带来额外的好处。排重优化所针对的对象是高重复消费模型，特别是对于并行处理消费者比较多的情况，重复处理同一请求，资源消耗极大。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">排重状态机</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">排重优化的主要对象是高重复的队列，多个消费者线程或进程同时处理同一个幂等请求只会浪费计算资源并延迟其他待请求处理。所以，排重状态机的一个目标是处理唯一性，即：同一时刻，同一个请求只有一个消费者处理。如果消费者获取一条请求消息，但发现其他消费者正在处理该消息，则当前消费者应该处于等待状态。如果对同一请求，有一个消费者在处理，一个消费者在等待，而同一请求再次被消费者读取，再次等待则没有意义。所以，状态机的第二个目标是等待唯一性，即：同一时刻，同一个请求最多只有一个消费者处于等待状态。总上述，状态机的目标是：处理唯一性和等待唯一性。我们把正在处理的请求称为头部请求，正在等待的请求称为尾部请求。<br style=\"padding: 0px; margin: 0px;\"/>由于状态机的处理单元是请求，所以需要针对每一个请求建立一个排重状态机。基于以上要求，我们设计的排重状态机包含4个状态Init，Process，Block，Decline。各个状态之间转化过程如下图：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/dedup-automate.png\" alt=\"排重状态机\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><ol style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>状态机创建时处于Init状态。</li><li>对Init状态进行Enqueue操作，即接收一个请求，开始处理（称为头部请求），状态机进入Process状态。</li><li>状态机处于Process状态，表明当前有消费者正在处理头部请求。此时，如果进行Dequeue操作，即头部请求处理完成，返回Init状态。如果进行Enqueue操作，即另一个消费者准备处理同一个请求，状态机进入Block状态（该请求称为尾部请求）。</li><li>状态机处于Block状态，表明头部请求正在处理，尾部请求处于阻塞状态。此时，进行Dequeue操作，即头部请求处理完成，返回Process状态，并且尾部请求变成头部请求，原尾部请求消费者结束阻塞状态，开始处理。进行Enqueue操作，表明一个新的消费者准备处理同一个请求，状态机进入Decline状态。</li><li>状态机进入Decline状态，根据等待唯一性目标，处理最新请求的消费者将被抛弃该消息，状态机自动转换回Block状态。</li></ol><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构思</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">状态机描述的是针对单个请求操作所引起状态变化，排重优化需要解决队列中所有请求的排重问题，需要对所有请求的状态机进行管理。这里只考虑单虚拟机内部对所有请求状态机的管理，对于跨虚拟机的管理可以采用类似的方法。对于多状态机管理主要包含三个方面：一致性问题、完整性问题和请求缓存驱逐问题。</p><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">一致性问题</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">一致性在这里要求同一请求的不同消费者只会操作一个状态机。由于每个请求都产生一个状态机，系统将会包含大量的状态机。为了兼顾性能和一致性，我们采用ConcurrentHashMap保存所有的状态机。用ConcurrentHashMap而不是对整个状态机队列进行加锁，可以提高并行处理能力，使得系统可以同时操作不同状态机。为了避免处理同一请求的多消费者线程同时对ConcurrentHashMap进行插入所导致状态机不一致问题，我们利用了ConcurrentHashMap的putIfAbsent（）方法。代码方案如下，key2Status用于存储所有的状态机。消费者在处理请求之前，从状态机队列中读取排重状态机TrafficAutomate。如果没有找到，则创建一个新的状态机，并通过putIfAbsent（）方法插入到状态机队列中。</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">private</span> ConcurrentHashMap&lt;T, TrafficAutomate&gt; key2Status = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">new</span> ConcurrentHashMap();\r\nTrafficAutomate trafficAutomate = key2Status.get(key);<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(trafficAutomate == <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>)\r\n{\r\n &nbsp; &nbsp;trafficAutomate = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">new</span> TrafficAutomate();\r\n &nbsp; &nbsp;TrafficAutomate oldAutomate = key2Status.putIfAbsent(key, trafficAutomate); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(oldAutomate != <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>)\r\n &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp;trafficAutomate = oldAutomate;\r\n &nbsp; &nbsp;}\r\n}</code></pre><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">完整性问题</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">完整性要求保障状态机Init，Process，Block，Decline四种状态正确、状态之间的转换也正确。由于状态机的操作非常轻量级，兼顾完整性和降低代码复杂度，我们对状态机的所有方法进行加锁。</p><h4 id=\"-cache-eviction-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">请求缓存驱逐问题（Cache Eviction）</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果不同请求的数量太多，内存永久保存所有请求的状态机的内存开销太大。所以，某些状态机需要在恰当的时候被驱逐出内存。这里有两个思路：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>当状态机返回Init状态时，清除出队列。</li><li>启动一个后台线程，定时扫描状态机队列，采用LRU等标准缓存清除机制。</li></ul><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">标识问题</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">每个请求对应于一个状态机，不同的状态机采用不同的请求进行识别。<br style=\"padding: 0px; margin: 0px;\"/>对于同一状态机的不同消费者，在单虚拟机方案中，我们采用线程id进行标识。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">实施</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">排重优化的主要功能都是通过排重状态机（TrafficAutomate）和状态机队列（QueueCoordinator）来实施的。排重状态机描述的是针对单个请求的排重问题，状态机队列解决所有请求状态机的排重问题。</p><h4 id=\"-trafficautomate-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">状态机实施（TrafficAutomate）</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">根据状态机模型，其主要操作为enQueue和deQueue，其状态由头部请求和尾部请求的状态共同决定，所以需要定义两个变量为head和tail，用于表示头部请求和尾部请求。为了确保多线程操作下状态机的完整性（Integraty），所有的操作都将加上锁。</p><h5 id=\"enqueue-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">enQueue操作</h5><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">当一个消费者执行enQueue操作时：如果此时尾部请求不为空，根据等待唯一性要求，返回DECLINE，当前消费者应该抛弃该请求；如果头部请求为空，返回ACCPET，当前消费者应该立刻处理该消息；否则，返回BLOCK，该消费者应该等待，并不停的查看状态机的状态，一直到头部请求处理完成。enQueue代码如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">synchronized</span> ActionEnum <span class=\"title\" style=\"padding: 0px; margin: 0px;\">enQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> id)</span></span>{ \r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(tail != INIT_QUEUE_ID)\r\n &nbsp; &nbsp;{ &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> DECLINE;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(head == INIT_QUEUE_ID)\r\n &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp;head = id; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> ACCEPT;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">else</span>\r\n &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp;tail = id; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> BLOCK;\r\n &nbsp; &nbsp;}\r\n｝</code></pre><h5 id=\"dequeue-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">deQueue操作</h5><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对于deQueue操作，首先将尾部请求赋值给头部请求，并将尾部请求置为无效。deQueue代码如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">synchronized</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">deQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> id)</span></span>{\r\n &nbsp; &nbsp; &nbsp; &nbsp;head = tail;\r\n &nbsp; &nbsp; &nbsp; &nbsp;tail = INIT_QUEUE_ID; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n}</code></pre><h4 id=\"-queuecoordinator-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">状态机队列实施(QueueCoordinator)</h4><h5 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">接口定义</h5><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">状态机队列集中管理所有请求的排重状态机，所以其操作和单个状态机一样，即enQueue和deQueuqe接口。这两个接口的实现需要识别特定请求的状态机，所以它们的入参应该是请求。为了兼容不同类型的请求消息，我们采用了Java泛型编程。接口定义如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"class\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">interface</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">QueueCoordinator</span>&lt;<span class=\"title\" style=\"padding: 0px; margin: 0px;\">T</span>&gt; </span>{ &nbsp; &nbsp;<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">enQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(T key)</span></span>; &nbsp; &nbsp;<span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">void</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">deQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(T key)</span></span>;\r\n\r\n}</code></pre><h5 id=\"enqueue-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">enQueue操作</h5><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">enQueue操作过程如下：<br style=\"padding: 0px; margin: 0px;\"/>首先，根据传入的请求key值，获取状态机， 如果不存在则创建一个新的状态机，并保存在ConcurrentHashMap中。<br style=\"padding: 0px; margin: 0px;\"/>接下来，获取线程id作为该消费者的唯一标识，并对对应状态机进行enQueue操作。<br style=\"padding: 0px; margin: 0px;\"/>如果状态机返回值为ACCEPT或者DECLINE，返回业务层处理代码，ACCEPT意味着业务层需要处理该消息，DECLINE表示业务层可以抛弃当前消息。如果状态机返回值为Block，则该线程保持等待状态。<br style=\"padding: 0px; margin: 0px;\"/>异常处理。在某些情况下，头部请求线程可能由于异常，未能对状态机进行deQueue操作（作为组件提供方，不能假定所有的规范被使用方实施）。为了避免处于阻塞状态的消费者无期限地等待，建议对状态机设置安全超时时限。超过了一定时间后，状态机强制清空头部请求，返回到业务层，业务层开始处理该请求。<br style=\"padding: 0px; margin: 0px;\"/>代码如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">boolean</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">enQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(T key)</span> </span>{\r\n &nbsp; &nbsp;_loggingStastic();\r\n\r\n &nbsp; &nbsp;TrafficAutomate trafficAutomate = key2Status.get(key); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(trafficAutomate == <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>)\r\n &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp;trafficAutomate = <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">new</span> TrafficAutomate();\r\n &nbsp; &nbsp; &nbsp; &nbsp;TrafficAutomate oldAutomate = key2Status.putIfAbsent(key, trafficAutomate); &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(oldAutomate != <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>)\r\n &nbsp; &nbsp; &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;trafficAutomate = oldAutomate;\r\n &nbsp; &nbsp; &nbsp; &nbsp;}\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> threadId = Thread.currentThread().getId();\r\n\r\n &nbsp; &nbsp;ActionEnum action = trafficAutomate.enQueue(threadId); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(action == DECLINE)\r\n &nbsp; &nbsp;{ &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">false</span>;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">else</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span> (action == ACCEPT)\r\n &nbsp; &nbsp;{ &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"comment\" style=\"padding: 0px; margin: 0px;\">//Blocking status means some other thread are working on this key, so just wait till timeout</span>\r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> start = System.currentTimeMillis(); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> span = <span class=\"number\" style=\"padding: 0px; margin: 0px;\">0</span>;\r\n &nbsp; &nbsp;do {\r\n &nbsp; &nbsp; &nbsp; &nbsp;_nonExceptionSleep(NAP_TIME_IN_MILL); &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(trafficAutomate.isHead(threadId))\r\n &nbsp; &nbsp; &nbsp; &nbsp;{ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n &nbsp; &nbsp; &nbsp; &nbsp;}\r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;span = System.currentTimeMillis() - start;\r\n &nbsp; &nbsp;}<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">while</span>(span &lt;= timeout); &nbsp; &nbsp;<span class=\"comment\" style=\"padding: 0px; margin: 0px;\">//remove head so that it won&#39;t block the queue for too long</span>\r\n &nbsp; &nbsp;trafficAutomate.evictHeadByForce(threadId); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">true</span>;\r\n}</code></pre><h5 id=\"dequeue-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">deQueue操作</h5><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">deQueue操作首先从ConcurrentHashMap获取改请求所对应的状态机，接着获取该线程的线程id，对状态机进行deQueue操作。<br style=\"padding: 0px; margin: 0px;\"/>enQueue代码如下：</p><pre style=\"padding: 0px 0.1rem; margin-top: 0px; margin-bottom: 0px; font-family: &#39;Helvetica Regular&#39;; font-size: 12px; overflow: auto; border-left-width: 1px; border-left-style: solid; border-left-color: rgb(50, 211, 195); line-height: 1.5em; widows: 1; background-color: rgb(245, 252, 251);\"><code class=\"java\" style=\"padding: 0px; margin: 0px; font-family: monospace, monospace; font-size: 1em; border-top-left-radius: 0.3em; border-top-right-radius: 0.3em; border-bottom-right-radius: 0.3em; border-bottom-left-radius: 0.3em; border: none; background-image: none; background-position: initial initial; background-repeat: initial initial;\"><span class=\"function\" style=\"padding: 0px; margin: 0px;\"><span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">public</span> <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">void</span> <span class=\"title\" style=\"padding: 0px; margin: 0px;\">deQueue</span><span class=\"params\" style=\"padding: 0px; margin: 0px;\">(T key)</span> </span>{\r\n &nbsp; &nbsp;TrafficAutomate trafficAutomate = key2Status.get(key); &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">if</span>(trafficAutomate == <span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">null</span>)\r\n &nbsp; &nbsp;{\r\n &nbsp; &nbsp; &nbsp; &nbsp;logger.error(<span class=\"string\" style=\"padding: 0px; margin: 0px;\">&quot;key {} doesn&#39;t exist &quot;</span>, key); &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">return</span>;\r\n &nbsp; &nbsp;} &nbsp; &nbsp;<span class=\"keyword\" style=\"padding: 0px; margin: 0px;\">long</span> threadId = Thread.currentThread().getId();\r\n\r\n &nbsp; &nbsp;trafficAutomate.deQueue(threadId)；\r\n}</code></pre><h4 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.16em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">源代码</h4><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">完整源代码可以在<a href=\"https://github.com/dinglau2008/QueueCoordinator/tree/master/src\" title=\"QueueCoordinator\" style=\"padding: 0px; margin: 0px; text-decoration: none; color: rgb(50, 211, 195);\">QueueCoordinator</a>获取。</p><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('93', '分布式队列编程：模型、实战', '介绍作为一种基础的抽象数据结构，队列被广泛应用在各类编程中。大数据时代对跨进程、跨机器的通讯提出了更高的要求，和以往相比，分布式队列编程的运用几乎已无处不在。但是，这种常见的基础性的事物往往容易被忽视，使用者往往会忽视两点：使用分布式队列的时候，没有意识到它是队列。有具体需求的时候，忘记了分布式队列的存在。文', '2016-10-27 19:22:21', '0', '0', '<h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">介绍</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">作为一种基础的抽象数据结构，队列被广泛应用在各类编程中。大数据时代对跨进程、跨机器的通讯提出了更高的要求，和以往相比，分布式队列编程的运用几乎已无处不在。但是，这种常见的基础性的事物往往容易被忽视，使用者往往会忽视两点：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>使用分布式队列的时候，没有意识到它是队列。</li><li>有具体需求的时候，忘记了分布式队列的存在。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">文章首先从最基础的需求出发，详细剖析分布式队列编程模型的需求来源、定义、结构以及其变化多样性。通过这一部分的讲解，作者期望能在两方面帮助读者：一方面，提供一个系统性的思考方法，使读者能够将具体需求关联到分布式队列编程模型，具备进行分布式队列架构的能力；另一方面，通过全方位的讲解，让读者能够快速识别工作中碰到的各种分布式队列编程模型。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">文章的第二部分实战篇。根据作者在新美大实际工作经验，给出了队列式编程在分布式环境下的一些具体应用。这些例子的基础模型并非首次出现在互联网的文档中，但是所有的例子都是按照挑战、构思、架构三个步骤进行讲解的。这种讲解方式能给读者一个“从需求出发去构架分布式队列编程”的旅程。</p><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式队列编程模型</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">模型篇从基础的需求出发，去思考何时以及如何使用分布式队列编程模型。建模环节非常重要，因为大部分中高级工程师面临的都是具体的需求，接到需求后的第一个步骤就是建模。通过本篇的讲解，希望读者能够建立起从需求到分布式队列编程模型之间的桥梁。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">何时选择分布式队列</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通讯是人们最基本的需求，同样也是计算机最基本的需求。对于工程师而言，在编程和技术选型的时候，更容易进入大脑的概念是RPC、RESTful、Ajax、Kafka。在这些具体的概念后面，最本质的东西是“通讯”。所以，大部分建模和架构都需要从“通讯”这个基本概念开始。当确定系统之间有通讯需求的时候，工程师们需要做很多的决策和平衡，这直接影响工程师们是否会选择分布式队列编程模型作为架构。从这个角度出发，影响建模的因素有四个：When、Who、Where、How。</p><h3 id=\"when-vs-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">When：同步VS异步</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">通讯的一个基本问题是：发出去的消息什么时候需要被接收到？这个问题引出了两个基础概念：“同步通讯”和“异步通讯”。根据理论抽象模型，同步通讯和异步通讯最本质的差别来自于时钟机制的有无。同步通讯的双方需要一个校准的时钟，异步通讯的双方不需要时钟。现实的情况是，没有完全校准的时钟，所以没有绝对的同步通讯。同样，绝对异步通讯意味着无法控制一个发出去的消息被接收到的时间点，无期限的等待一个消息显然毫无实际意义。所以，实际编程中所有的通讯既不是“同步通讯”也不是“异步通讯”；或者说，既是“同步通讯”也是“异步通讯”。特别是对于应用层的通讯，其底层架构可能既包含“同步机制”也包含“异步机制”。判断“同步”和“异步”消息的标准问题太深，而不适合继续展开。作者这里给一些启发式的建议：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>发出去的消息是否需要确认，如果不需要确认，更像是异步通讯，这种通讯有时候也称为单向通讯（One-Way Communication）。</li><li>如果需要确认，可以根据需要确认的时间长短进行判断。时间长的更像是异步通讯，时间短的更像是同步通讯。当然时间长短的概念是纯粹的主观概念，不是客观标准。</li><li>发出去的消息是否阻塞下一个指令的执行，如果阻塞，更像是同步，否则，更像是异步。</li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">无论如何，工程师们不能生活在混沌之中，不做决定往往是最坏的决定。当分析一个通讯需求或者进行通讯构架的时候，工程师们被迫作出“同步”还是“异步”的决定。当决策的结论是“异步通讯”的时候，分布式队列编程模型就是一个备选项。</p><h3 id=\"who-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Who：发送者接收者解耦</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在进行通讯需求分析的时候，需要回答的另外一个基本问题是：消息的发送方是否关心谁来接收消息，或者反过来，消息接收方是否关心谁来发送消息。如果工程师的结论是：消息的发送方和接收方不关心对方是谁、以及在哪里，分布式队列编程模型就是一个备选项。因为在这种场景下，分布式队列架构所带来的解耦能给系统架构带来这些好处：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>无论是发送方还是接收方，只需要跟消息中间件通讯，接口统一。统一意味着降低开发成本。</li><li>在不影响性能的前提下，同一套消息中间件部署，可以被不同业务共享。共享意味着降低运维成本。</li><li>发送方或者接收方单方面的部署拓扑的变化不影响对应的另一方。解藕意味着灵活和可扩展。</li></ul><h3 id=\"where-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">Where：消息暂存机制</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">在进行通讯发送方设计的时候，令工程师们苦恼的问题是：如果消息无法被迅速处理掉而产生堆积怎么办、能否被直接抛弃？如果根据需求分析，确认存在消息积存，并且消息不应该被抛弃，就应该考虑分布式队列编程模型构架，因为队列可以暂存消息。</p><h3 id=\"how-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">How：如何传递</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">对通讯需求进行架构，一系列的基础挑战会迎面而来，这包括：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>可用性，如何保障通讯的高可用。</li><li>可靠性，如何保证消息被可靠地传递。</li><li>持久化，如何保证消息不会丢失。</li><li>吞吐量和响应时间。</li><li>跨平台兼容性。<br style=\"padding: 0px; margin: 0px;\"/>除非工程师对造轮子有足够的兴趣，并且有充足的时间，采用一个满足各项指标的分布式队列编程模型就是一个简单的选择。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式队列编程定义</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">很难给出分布式队列编程模型的精确定义，由于本文偏重于应用，作者并不打算完全参照某个标准的模型。总体而言：分布式队列编程模型包含三类角色：发送者（Sender）、分布式队列（Queue）、接收者（Receiver）。发送者和接收者分别指的是生产消息和接收消息的应用程序或服务。<br style=\"padding: 0px; margin: 0px;\"/>需要重点明确的概念是分布式队列，它是提供以下功能的应用程序或服务：1. 接收“发送者”产生的消息实体；2. 传输、暂存该实体；3. 为“接收者”提供读取该消息实体的功能。特定的场景下，它当然可以是Kafka、RabbitMQ等消息中间件。但它的展现形式并不限于此，例如：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>队列可以是一张数据库的表，发送者将消息写入表，接收者从数据表里读消息。</li><li>如果一个程序把数据写入Redis等内存Cache里面，另一个程序从Cache里面读取，缓存在这里就是一种分布式队列。</li><li>流式编程里面的的数据流传输也是一种队列。</li><li>典型的MVC（Model–view–controller）设计模式里面，如果Model的变化需要导致View的变化，也可以通过队列进行传输。这里的分布式队列可以是数据库，也可以是某台服务器上的一块内存。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">抽象模型</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">最基础的分布式队列编程抽象模型是点对点模型，其他抽象构架模型居于改基本模型上各角色的数量和交互变化所导致的不同拓扑图。具体而言，不同数量的发送者、分布式队列以及接收者组合形成了不同的分布式队列编程模型。记住并理解典型的抽象模型结构对需求分析和建模而言至关重要，同时也会有助于学习和深入理解开源框架以及别人的代码。</p><h3 id=\"-point-to-point-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">点对点模型（Point-to-point）</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">基础模型中，只有一个发送者、一个接收者和一个分布式队列。如下图所示：<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/point2point.png\" alt=\"点对点模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-producer-consumer-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">生产者消费者模型（Producer–consumer）</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果发送者和接收者都可以有多个部署实例，甚至不同的类型；但是共用同一个队列，这就变成了标准的生产者消费者模型。在该模型，三个角色一般称之为生产者（Producer）、分布式队列（Queue）、消费者（Consumer）。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/producer-consumer.png\" alt=\"生产者消费者模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"-pubsub-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">发布订阅模型（PubSub）</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果只有一类发送者，发送者将产生的消息实体按照不同的主题（Topic）分发到不同的逻辑队列。每种主题队列对应于一类接收者。这就变成了典型的发布订阅模型。在该模型，三个角色一般称之为发布者（Publisher），分布式队列（Queue），订阅者（Subscriber）。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/pubsub.png\" alt=\"发布订阅模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h3 id=\"mvc-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">MVC模型</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果发送者和接收者存在于同一个实体中，但是共享一个分布式队列。这就很像经典的MVC模型。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><img src=\"http://tech.meituan.com/img/dist_queue_program/mvc.png\" alt=\"MVC模型\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">编程模型</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">为了让读者更好地理解分布式队列编程模式概念，这里将其与一些容易混淆的概念做一些对比 。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式队列模型编程和异步编程</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式队列编程模型的通讯机制一般是采用异步机制，但是它并不等同于异步编程。<br style=\"padding: 0px; margin: 0px;\"/>首先，并非所有的异步编程都需要引入队列的概念，例如：大部分的操作系统异步I/O操作都是通过硬件中断（ Hardware Interrupts）来实现的。<br style=\"padding: 0px; margin: 0px;\"/>其次，异步编程并不一定需要跨进程，所以其应用场景并不一定是分布式环境。<br style=\"padding: 0px; margin: 0px;\"/>最后，分布式队列编程模型强调发送者、接收者和分布式队列这三个角色共同组成的架构。这三种角色与异步编程没有太多关联。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式队列模式编程和流式编程</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">随着Spark Streaming，Apache Storm等流式框架的广泛应用，流式编程成了当前非常流行的编程模式。但是本文所阐述的分布式队列编程模型和流式编程并非同一概念。<br style=\"padding: 0px; margin: 0px;\"/>首先，本文的队列编程模式不依赖于任何框架，而流式编程是在具体的流式框架内的编程。<br style=\"padding: 0px; margin: 0px;\"/>其次，分布式队列编程模型是一个需求解决方案，关注如何根据实际需求进行分布式队列编程建模。流式框架里的数据流一般都通过队列传递，不过，流式编程的关注点比较聚焦，它关注如何从流式框架里获取消息流，进行map、reduce、 join等转型（Transformation）操作、生成新的数据流，最终进行汇总、统计。</p><hr style=\"padding: 0px; margin: 1em 0px; height: 2px; border-right-width: 0px; border-left-width: 0px; border-top-style: solid; border-top-color: rgb(170, 170, 170); border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; font-size: 12px; line-height: 24px; white-space: normal; widows: 1;\"/><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式队列编程实战篇</h1><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">这里所有的项目都是作者在新美大工作的真实案例。实战篇的关注点是训练建模思路，所以这些例子都按照挑战、构思、架构三个步骤进行讲解。受限于保密性要求，有些细节并未给出，但这些细节并不影响讲解的完整性。另一方面，特别具体的需求容易让人费解，为了使讲解更加顺畅，作者也会采用一些更通俗易懂的例子。通过本篇的讲解，希望和读者一起去实践“如何从需求出发去构架分布式队列编程模型”。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">需要声明的是，这里的解决方案并不是所处场景的最优方案。但是，任何一个稍微复杂的问题，都没有最优解决方案，更谈不上唯一的解决方案。实际上，工程师每天所追寻的只是在满足一定约束条件下的可行方案。当然不同的约束会导致不同的方案，约束的松弛度决定了工程师的可选方案的宽广度。</p><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">信息采集处理</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">信息采集处理应用广泛，例如：广告计费、用户行为收集等。作者碰到的具体项目是为广告系统设计一套高可用的采集计费系统。<br style=\"padding: 0px; margin: 0px;\"/>典型的广告CPC、CPM计费原理是：收集用户在客户端或者网页上的点击和浏览行为，按照点击和浏览进行计费。计费业务有如下典型特征：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>采集者和处理者解耦，采集发生在客户端，而计费发生在服务端。</li><li>计费与钱息息相关。</li><li>重复计费意味着灾难。</li><li>计费是动态实时行为，需要接受预算约束，如果消耗超过预算，则广告投放需要停止。</li><li>用户的浏览和点击量非常大。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">挑战</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">计费业务的典型特征给我们带来了如下挑战：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>高吞吐量－－广告的浏览和点击量非常巨大，我们需要设计一个高吞吐量的采集架构。</li><li>高可用性－－计费信息的丢失意味着直接的金钱损失。任何处理服务器的崩溃不应该导致系统不可用。</li><li>高一致性要求－－计费是一个实时动态处理过程，但要受到预算的约束。收集到的浏览和点击行为如果不能快速处理，可能会导致预算花超，或者点击率预估不准确。所以采集到的信息应该在最短的时间内传输到计费中心进行计费。</li><li>完整性约束－－这包括反作弊规则，单个用户行为不能重复计费等。这要求计费是一个集中行为而非分布式行为。</li><li>持久化要求－－计费信息需要持久化，避免因为机器崩溃而导致收集到的数据产生丢失。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构思</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">采集的高可用性意味着我们需要多台服务器同时采集，为了避免单IDC故障，采集服务器需要部署在多IDC里面。<br style=\"padding: 0px; margin: 0px;\"/>实现一个高可用、高吞吐量、高一致性的信息传递系统显然是一个挑战，为了控制项目开发成本，采用开源的消息中间件进行消息传输就成了必然选择。<br style=\"padding: 0px; margin: 0px;\"/>完整性约束要求集中进行计费，所以计费系统发生在核心IDC。<br style=\"padding: 0px; margin: 0px;\"/>计费服务并不关心采集点在哪里，采集服务也并不关心谁进行计费。<br style=\"padding: 0px; margin: 0px;\"/>根据以上构思，我们认为采集计费符合典型的“生产者消费者模型”。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">架构</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">采集计费系统架构图如下：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>用户点击浏览收集服务（Click/View Collector）作为生产者部署在多个机房里，以提高收集服务可用性。</li><li>每个机房里采集到的数据通过消息队列中间件发送到核心机房IDC_Master。</li><li>Billing服务作为消费者部署在核心机房集中计费。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/infomation-collector.png\" alt=\"计费采集架构\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/></li></ul><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">采用此架构，我们可以在如下方面做进一步优化：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>提高可扩展性，如果一个Billing部署实例在性能上无法满足要求，可以对采集的数据进行主题分区（Topic Partition）计费，即采用发布订阅模式以提高可扩展性（Scalability）。</li><li>全局排重和反作弊。采用集中计费架构解决了点击浏览排重的问题，另一方面，这也给反作弊提供了全局信息。</li><li>提高计费系统的可用性。采用下文单例服务优化策略，在保障计费系统集中性的同时，提高计费系统可用性。</li></ul><h2 id=\"-distributed-cache-replacement-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">分布式缓存更新（Distributed Cache Replacement）</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">缓存是一个非常宽泛的概念，几乎存在于系统各个层级。典型的缓存访问流程如下：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>接收到请求后，先读取缓存，如果命中则返回结果。</li><li>如果缓存不命中，读取DB或其它持久层服务，更新缓存并返回结果。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/cache-replacement.png\" alt=\"缓存更新\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/>对于已经存入缓存的数据，其更新时机和更新频率是一个经典问题，即缓存更新机制（Cache Replacement Algorithms ）。典型的缓存更新机制包括：近期最少使用算法（LRU）、最不经常使用算法（LFU）。这两种缓存更新机制的典型实现是：启动一个后台进程，定期清理最近没有使用的，或者在一段时间内最少使用的数据。由于存在缓存驱逐机制，当一个请求在没有命中缓存时，业务层需要从持久层中获取信息并更新缓存，提高一致性。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">挑战</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">分布式缓存给缓存更新机制带来了新的问题：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>数据一致性低。分布式缓存中键值数量巨大，从而导致LRU或者LFU算法更新周期很长。在分布式缓存中，拿LRU算法举例，其典型做法是为每个Key值设置一个生存时间（TTL），生存时间到期后将该键值从缓存中驱逐除去。考虑到分布式缓存中庞大的键值数量，生存时间往往会设置的比较长，这就导致缓存和持久层数据不一致时间很长。如果生存时间设置过短，大量请求无法命中缓存被迫读取持久层，系统响应时间会急剧恶化。</li><li>新数据不可用。在很多场景下，由于分布式缓存和持久层的访问性能相差太大，在缓存不命中的情况下，一些应用层服务不会尝试读取持久层，而直接返回空结果。漫长的缓存更新周期意味着新数据的可用性就被牺牲了。从统计的角度来讲，新键值需要等待半个更新周期才会可用。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构思</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">根据上面的分析，分布式缓存需要解决的问题是：在保证读取性能的前提下，尽可能地提高老数据的一致性和新数据的可用性。如果仍然假定最近被访问的键值最有可能被再次访问（这是LRU或者LFU成立的前提），键值每次被访问后触发一次异步更新就是提高可用性和一致性最早的时机。无论是高性能要求还是业务解耦都要求缓存读取和缓存更新分开，所以我们应该构建一个单独的集中的缓存更新服务。集中进行缓存更新的另外一个好处来自于频率控制。由于在一段时间内，很多类型访问键值的数量满足高斯分布，短时间内重复对同一个键值进行更新Cache并不会带来明显的好处，甚至造成缓存性能的下降。通过控制同一键值的更新频率可以大大缓解该问题，同时有利于提高整体数据的一致性，参见“排重优化”。</p><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">综上所述，业务访问方需要把请求键值快速传输给缓存更新方，它们之间不关心对方的业务。要快速、高性能地实现大量请求键值消息的传输，高性能分布式消息中间件就是一个可选项。这三方一起组成了一个典型的分布式队列编程模型。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">架构</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如下图，所有的业务请求方作为生产者，在返回业务代码处理之前将请求键值写入高性能队列。Cache Updater作为消费者从队列中读取请求键值，将持久层中数据更新到缓存中。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/distributed-cache-replacement.png\" alt=\"分布式缓存更新\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/>采用此架构，我们可以在如下方面做进一步优化：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>提高可扩展性，如果一个Cache Updater在性能上无法满足要求，可以对键值进行主题分区（Topic Partition）进行并行缓存更新，即采用发布订阅模式以提高可扩展性（Scalability）。</li><li>更新频率控制。缓存更新都集中处理，对于发布订阅模式，同一类主题（Topic）的键值集中处理。Cache Updater可以控制对同一键值的在短期内的更新频率（参见下文排重优化）。</li></ul><h2 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.73em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">后台任务处理</h2><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">典型的后台任务处理应用包括工单处理、火车票预订系统、机票选座等。我们所面对的问题是为运营人员创建工单。一次可以为多个运营人员创建多个工单。这个应用场景和火车票购买非常类似。工单相对来说更加抽象，所以，下文会结合火车票购买和运营人员工单分配这两种场景同时讲解。典型的工单创建要经历两个阶段：数据筛选阶段、工单创建阶段。例如，在火车票预订场景，数据筛选阶段用户选择特定时间、特定类型的火车，而在工单创建阶段，用户下单购买火车票。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">挑战</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">工单创建往往会面临如下挑战：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>数据一致性问题。以火车票预订为例，用户筛选火车票和最终购买之间往往有一定的时延，意味着两个操作之间数据是不一致的。在筛选阶段，工程师们需决定是否进行车票锁定，如果不锁定，则无法保证出票成功。反之，如果在筛选地时候锁定车票，则会大大降低系统效率和出票吞吐量。</li><li>约束问题。工单创建需要满足很多约束，主要包含两种类型：动态约束，与操作者的操作行为有关，例如购买几张火车票的决定往往发生在筛选最后阶段。隐性约束，这种约束很难通过界面进行展示，例如一个用户购买了5张火车票，这些票应该是在同一个车厢的临近位置。</li><li>优化问题。工单创建往往是约束下的优化，这是典型的统筹优化问题，而统筹优化往往需要比较长的时间。</li><li>响应时间问题。对于多任务工单，一个请求意味着多个任务产生。这些任务的创建往往需要遵循事务性原则，即All or Nothing。在数据层面，这意味着工单之间需要满足串行化需求（Serializability）。大数据量的串行化往往意味着锁冲突延迟甚至失败。无论是延迟机制所导致的长时延，还是高创建失败率，都会大大伤害用户体验。</li></ul><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">构思</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">如果将用户筛选的最终规则做为消息存储下来，并发送给工单创建系统。此时，工单创建系统将具备创建工单所需的全局信息，具备在满足各种约束的条件下进行统筹优化的能力。如果工单创建阶段采用单实例部署，就可以避免数据锁定问题，同时也意味着没有锁冲突，所以也不会有死锁或任务延迟问题。<br style=\"padding: 0px; margin: 0px;\"/>居于以上思路，在多工单处理系统的模型中，筛选阶段的规则创建系统将充当生产者角色，工单创建系统将充当消费者角色，筛选规则将作为消息在两者之间进行传递。这就是典型的分布式队列编程架构。根据工单创建量的不同，可以采用数据库或开源的分布式消息中间件作为分布式队列。</p><h3 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.4em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">架构</h3><p style=\"padding: 0px; margin-top: 1em; margin-bottom: 1em; color: rgb(102, 102, 102); font-size: 1.16em; word-wrap: break-word; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\">该架构流程如下图：</p><ul style=\"padding: 0px 0px 0px 2em; margin: 1em 0px; font-size: 12px; word-break: break-all; color: rgb(68, 68, 68); font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; line-height: 24px; white-space: normal; widows: 1;\"><li>用户首选进行规则创建，这个过程主要是一些搜索筛选操作；</li><li>用户点击工单创建，TicketRule Generator将把所有的筛选性组装成规则消息并发送到队列里面去；</li><li>Ticket Generator作为一个消费者，实时从队列中读取工单创建请求，开始真正创建工单。<br style=\"padding: 0px; margin: 0px;\"/><img src=\"http://tech.meituan.com/img/dist_queue_program/ticket-generation.png\" alt=\"工单创建\" style=\"padding: 0px; margin: 0px; max-width: 100%; border: 0px; vertical-align: middle;\"/><br style=\"padding: 0px; margin: 0px;\"/>采用该架构，我们在数据锁定、运筹优化、原子性问题都能得到比较好成果：</li><li>数据锁定推迟到工单创建阶段，可以减少数据锁定范围，最大程度的降低工单创建对其他在线操作的影响范围。</li><li>如果需要进行统筹优化，可以将Ticket Generator以单例模式进行部署（参见单例服务优化）。这样，Ticket Generator可以读取一段时间内的工单请求，进行全局优化。例如，在我们的项目中，在某种条件下，运营人员需要满足分级公平原则，即相同级别的运营人员的工单数量应该接近，不同级别的运营人员工单数量应该有所区分。如果不集中进行统筹优化，实现这种优化规则将会很困难。</li><li>保障了约束完整性。例如，在我们的场景里面，每个运营人员每天能够处理的工单是有数量限制的，如果采用并行处理的方式，这种完整性约束将会很难实施。</li></ul><h1 id=\"-\" style=\"padding: 0.05rem 0px; margin: 0px; color: rgb(42, 41, 53); line-height: 1.5em; font-size: 1.93em; font-family: &#39;Hiragino Sans GB&#39;, &#39;Microsoft Yahei&#39;, 微软雅黑, sans-serif; white-space: normal; widows: 1;\">预告</h1><p><br/></p>,', '1', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('94', 'Spring Boot快速入门', '简介在您第1次接触和学习Spring框架的时候，是否因为其繁杂的配置而退却了？在你第n次使用Spring框架的时候，是否觉得一堆反复黏贴的配置有一些厌烦？那么您就不妨来试试使用Spring Boot来让你更易上手，更简单快捷地构建Spring应用！Spring Boot让我们的Spring应用变的更轻量化。比', '2016-10-27 19:25:43', '0', '0', '<h1 id=\"简介\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">简介</h1><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在您第1次接触和学习Spring框架的时候，是否因为其繁杂的配置而退却了？在你第n次使用Spring框架的时候，是否觉得一堆反复黏贴的配置有一些厌烦？那么您就不妨来试试使用Spring Boot来让你更易上手，更简单快捷地构建Spring应用！</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot让我们的Spring应用变的更轻量化。比如：你可以仅仅依靠一个Java类来运行一个Spring引用。你也可以打包你的应用为jar并通过使用java -jar来运行你的Spring Web应用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot的主要优点：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>为所有Spring开发者更快的入门</li><li>开箱即用，提供各种默认配置来简化项目配置</li><li>内嵌式容器简化Web项目</li><li>没有冗余代码生成和XML配置的要求</li></ul><hr style=\"border-style: dashed; border-color: rgb(236, 239, 242); color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><h1 id=\"快速入门\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#快速入门\" class=\"headerlink\" title=\"快速入门\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>快速入门</h1><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本章主要目标完成Spring Boot基础项目的构建，并且实现一个简单的Http请求处理，通过这个例子对Spring Boot有一个初步的了解，并体验其结构简单、开发快速的特性。</p><h2 id=\"系统要求：\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#系统要求：\" class=\"headerlink\" title=\"系统要求：\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>系统要求：</h2><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Java 7及以上</li><li>Spring Framework 4.1.5及以上</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">本文采用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">Java 1.8.0_73</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">Spring Boot 1.3.2</code>调试通过。</strong></p><h2 id=\"使用Maven构建项目\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#使用Maven构建项目\" class=\"headerlink\" title=\"使用Maven构建项目\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用Maven构建项目</h2><ol style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">SPRING INITIALIZR</code>工具产生基础项目</li><ol style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em;\"><li>访问：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://start.spring.io/</code></li><li>选择构建工具<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Maven Project</code>、Spring Boot版本<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">1.3.2</code>以及一些工程基本信息，可参考下图所示<a href=\"http://blog.didispace.com/content/images/2016/02/chapter1-1.png\" title=\"SPRING INITIALIZR\" class=\"gallery-item\" lg-event-uid=\"&amp;1\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/02/chapter1-1.png\" alt=\"SPRING INITIALIZR\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">SPRING INITIALIZR</span></li><li>点击<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Generate Project</code>下载项目压缩包</li></ol><li>解压项目包，并用IDE以<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Maven</code>项目导入，以<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">IntelliJ IDEA 14</code>为例：</li><ol style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em;\"><li>菜单中选择<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">File</code>–&gt;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">New</code>–&gt;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Project from Existing Sources...</code></li><li>选择解压后的项目文件夹，点击<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">OK</code></li><li>点击<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Import project from external model</code>并选择<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Maven</code>，点击<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Next</code>到底为止。</li><li>若你的环境有多个版本的JDK，注意到选择<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Java SDK</code>的时候请选择<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Java 7</code>以上的版本</li></ol></ol><h2 id=\"项目结构解析\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#项目结构解析\" class=\"headerlink\" title=\"项目结构解析\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>项目结构解析</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/content/images/2016/02/chapter1-2.png\" title=\"项目结构\" class=\"gallery-item\" lg-event-uid=\"&amp;2\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/02/chapter1-2.png\" alt=\"项目结构\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">项目结构</span></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面步骤完成了基础项目的创建，如上图所示，Spring Boot的基础结构共三个文件（具体路径根据用户生成项目时填写的Group所有差异）：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/java</code>下的程序入口：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Chapter1Application</code></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources</code>下的配置文件：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/test/</code>下的测试入口：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Chapter1ApplicationTests</code></li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">生成的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Chapter1Application</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Chapter1ApplicationTests</code>类都可以直接运行来启动当前创建的项目，由于目前该项目未配合任何数据访问或Web模块，程序会在加载完Spring之后结束运行。</p><h2 id=\"引入Web模块\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#引入Web模块\" class=\"headerlink\" title=\"引入Web模块\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入Web模块</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">当前的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>内容如下，仅引入了两个模块：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter</code>：核心模块，包括自动配置支持、日志和YAML</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-test</code>：测试模块，包括JUnit、Hamcrest、Mockito</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span>test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">引入Web模块，需添加<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-web</code>模块：</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h2 id=\"编写HelloWorld服务\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#编写HelloWorld服务\" class=\"headerlink\" title=\"编写HelloWorld服务\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>编写HelloWorld服务</h2><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">package</code>命名为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace.web</code>（根据实际情况修改）</li><li>创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">HelloController</code>类，内容如下</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RestController</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/hello&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">index</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Hello World&quot;</span>;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>启动主程序，打开浏览器访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/hello</code>，可以看到页面输出<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Hello World</code></li></ul><h2 id=\"编写单元测试用例\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/#编写单元测试用例\" class=\"headerlink\" title=\"编写单元测试用例\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>编写单元测试用例</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">打开的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/test/</code>下的测试入口<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Chapter1ApplicationTests</code>类。下面编写一个简单的单元测试来模拟http请求，具体如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(classes = MockServletContext.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@WebAppConfiguration</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Chapter1ApplicationTests</span> </span>{</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> MockMvc mvc;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">setUp</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		mvc = MockMvcBuilders.standaloneSetup(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> HelloController()).build();</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getHello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		mvc.perform(MockMvcRequestBuilders.get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/hello&quot;</span>).accept(MediaType.APPLICATION_JSON))</p><p>				.andExpect(status().isOk())</p><p>				.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Hello World&quot;</span>)));</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">MockServletContext</code>来构建一个空的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">WebApplicationContext</code>，这样我们创建的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">HelloController</code>就可以在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Before</code>函数中创建并传递到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">MockMvcBuilders.standaloneSetup（）</code>函数中。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>注意引入下面内容，让<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">status</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">content</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">equalTo</code>函数可用</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">import</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> org.hamcrest.Matchers.equalTo;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">import</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">import</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">至此已完成目标，通过Maven构建了一个空白Spring Boot项目，再通过引入web模块实现了一个简单的请求处理。</p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('95', 'Spring Boot开发Web应用', 'Spring Boot快速入门中我们完成了一个简单的RESTful Service，体验了快速开发的特性。在留言中也有朋友提到如何把处理结果渲染到页面上。那么本篇就在上篇基础上介绍一下如何进行Web应用的开发。静态资源访问在我们开发Web应用的时候，需要引用大量的js、css、图片等静态资源。默认配置Spri', '2016-10-27 19:26:11', '0', '0', '<blockquote style=\"margin: 0px -20px; padding: 10px 20px 10px 54px; border-width: 0px 0px 0px 4px; border-left-style: solid; border-left-color: rgb(238, 238, 238); outline: 0px; font-family: Georgia, &#39;Times New Roman&#39;, &#39;Microsoft Yahei&#39;, serif; font-size: 1.1em; vertical-align: baseline; position: relative; color: rgb(86, 90, 95); line-height: 32px; white-space: normal; widows: 1; background-color: rgb(252, 252, 252); background-position: initial initial; background-repeat: initial initial;\"><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 17.6px; vertical-align: baseline; line-height: 1.6em;\"><a href=\"http://blog.didispace.com/spring-boot-learning-1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 17.6px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot快速入门</a>中我们完成了一个简单的RESTful Service，体验了快速开发的特性。在留言中也有朋友提到如何把处理结果渲染到页面上。那么本篇就在上篇基础上介绍一下如何进行Web应用的开发。</p></blockquote><h2 id=\"静态资源访问\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#静态资源访问\" class=\"headerlink\" title=\"静态资源访问\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>静态资源访问</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在我们开发Web应用的时候，需要引用大量的js、css、图片等静态资源。</p><h3 id=\"默认配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#默认配置\" class=\"headerlink\" title=\"默认配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>默认配置</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot默认提供静态资源目录位置需置于classpath下，目录名需符合如下规则：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>/static</li><li>/public</li><li>/resources</li><li>/META-INF/resources</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">举例：我们可以在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/</code>目录下创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">static</code>，在该位置放置一个图片文件。启动程序后，尝试访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/D.jpg</code>。如能显示图片，配置成功。</p><h2 id=\"渲染Web页面\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#渲染Web页面\" class=\"headerlink\" title=\"渲染Web页面\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>渲染Web页面</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在之前的示例中，我们都是通过@RestController来处理请求，所以返回的内容为json对象。那么如果需要渲染html页面的时候，要如何实现呢？</p><h3 id=\"模板引擎\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#模板引擎\" class=\"headerlink\" title=\"模板引擎\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>模板引擎</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在动态HTML实现上Spring Boot依然可以完美胜任，并且提供了多种模板引擎的默认配置支持，所以在推荐的模板引擎下，我们可以很快的上手开发动态网站。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot提供了默认配置的模板引擎主要有以下几种：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Thymeleaf</li><li>FreeMarker</li><li>Velocity</li><li>Groovy</li><li>Mustache</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">Spring Boot建议使用这些模板引擎，避免使用JSP，若一定要使用JSP将无法实现Spring Boot的多种特性，具体可见后文：支持JSP的配置</strong></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">当你使用上述模板引擎中的任何一个，它们默认的模板配置路径为：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/templates</code>。当然也可以修改这个路径，具体如何修改，可在后续各模板引擎的配置属性中查询并修改。</p><h4 id=\"Thymeleaf\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#Thymeleaf\" class=\"headerlink\" title=\"Thymeleaf\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Thymeleaf</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Thymeleaf是一个XML/XHTML/HTML5模板引擎，可用于Web与非Web环境中的应用开发。它是一个开源的Java库，基于Apache License 2.0许可，由Daniel Fernández创建，该作者还是Java加密库Jasypt的作者。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Thymeleaf提供了一个用于整合Spring MVC的可选模块，在应用开发中，你可以使用Thymeleaf来完全代替JSP或其他模板引擎，如Velocity、FreeMarker等。Thymeleaf的主要目标在于提供一种可被浏览器正确显示的、格式良好的模板创建方式，因此也可以用作静态建模。你可以使用它创建经过验证的XML与HTML模板。相对于编写逻辑或代码，开发者只需将标签属性添加到模板中即可。接下来，这些标签属性就会在DOM（文档对象模型）上执行预先制定好的逻辑。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">示例模板：</p><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">table</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">thead</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tr</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;#{msgs.headers.name}&quot;</span>&gt;</span>Name<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;#{msgs.headers.price}&quot;</span>&gt;</span>Price<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tr</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">thead</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tbody</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tr</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:each</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;prod : ${allProducts}&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${prod.name}&quot;</span>&gt;</span>Oranges<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${#numbers.formatDecimal(prod.price,1,2)}&quot;</span>&gt;</span>0.99<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">td</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tr</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">tbody</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">table</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到Thymeleaf主要以属性的方式加入到html标签中，浏览器在解析html时，当检查到没有的属性时候会忽略，所以Thymeleaf的模板可以通过浏览器直接打开展现，这样非常有利于前后端的分离。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中使用Thymeleaf，只需要引入下面依赖，并在默认的模板路径<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/templates</code>下编写模板文件即可完成。</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成配置之后，举一个简单的例子，在快速入门工程的基础上，举一个简单的示例来通过Thymeleaf渲染一个页面。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Controller</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">index</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(ModelMap map)</span> </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 加入一个属性，用来在模板中读取</span></p><p>map.addAttribute(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;host&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://blog.didispace.com&quot;</span>);</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// return模板文件的名称，对应src/main/resources/templates/index.html</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;index&quot;</span>;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">lang</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;en&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">meta</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">charset</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;UTF-8&quot;</span> /&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${host}&quot;</span>&gt;</span>Hello World<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如上页面，直接打开html页面展现Hello World，但是启动程序后，访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/</code>，则是展示Controller中host的值：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://blog.didispace.com</code>，做到了不破坏HTML自身内容的数据逻辑分离。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">更多Thymeleaf的页面语法，还请访问Thymeleaf的官方文档查询使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">Thymeleaf的默认参数配置</strong></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如有需要修改默认配置的时候，只需复制下面要修改的属性到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中，并修改成需要的值，如修改模板文件的扩展名，修改默认的模板路径等。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Enable template caching.</span></p><p>spring.thymeleaf.cache=<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span> </p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Check that the templates location exists.</span></p><p>spring.thymeleaf.check-template-location=<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span> </p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Content-Type value.</span></p><p>spring.thymeleaf.content-type=text/html</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Enable MVC Thymeleaf view resolution.</span></p><p>spring.thymeleaf.enabled=<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span> </p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Template encoding.</span></p><p>spring.thymeleaf.encoding=UTF-8</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Comma-separated list of view names that should be excluded from resolution.</span></p><p>spring.thymeleaf.excluded-view-names=</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Template mode to be applied to templates. See also StandardTemplateModeHandlers.</span></p><p>spring.thymeleaf.mode=HTML5</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Prefix that gets prepended to view names when building a URL.</span></p><p>spring.thymeleaf.prefix=classpath:/templates/</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Suffix that gets appended to view names when building a URL.</span></p><p>spring.thymeleaf.suffix=.html &nbsp;spring.thymeleaf.template-resolver-order= <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Order of the template resolver in the chain. spring.thymeleaf.view-names= # Comma-separated list of view names that can be resolved.</span></p></pre></td></tr></tbody></table></figure></p><h3 id=\"支持JSP的配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootweb/#支持JSP的配置\" class=\"headerlink\" title=\"支持JSP的配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>支持JSP的配置</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot并不建议使用，但如果一定要使用，可以参考此工程作为脚手架：<a href=\"https://github.com/spring-projects/spring-boot/tree/v1.3.2.RELEASE/spring-boot-samples/spring-boot-sample-web-jsp\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">JSP支持</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot教程完整案例</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('96', 'Spring Boot工程结构推荐', '今天看了一位简书上朋友发来的工程，于是想到应该要写这么一篇。前人总结的最佳实践案例可以帮助我们免去很多不必要的麻烦。花点时间来看一下本文，绝对物超所值。工程结构（最佳实践）Spring Boot框架本身并没有对工程结构有特别的要求，但是按照最佳实践的工程结构可以帮助我们减少可能会遇见的坑，尤其是Spring包', '2016-10-27 19:26:30', '0', '0', '<blockquote style=\"margin: 0px -20px; padding: 10px 20px 10px 54px; border-width: 0px 0px 0px 4px; border-left-style: solid; border-left-color: rgb(238, 238, 238); outline: 0px; font-family: Georgia, &#39;Times New Roman&#39;, &#39;Microsoft Yahei&#39;, serif; font-size: 1.1em; vertical-align: baseline; position: relative; color: rgb(86, 90, 95); line-height: 32px; white-space: normal; widows: 1; background-color: rgb(252, 252, 252); background-position: initial initial; background-repeat: initial initial;\"><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 17.6px; vertical-align: baseline; line-height: 1.6em;\">今天看了一位简书上朋友发来的工程，于是想到应该要写这么一篇。前人总结的最佳实践案例可以帮助我们免去很多不必要的麻烦。花点时间来看一下本文，绝对物超所值。</p></blockquote><h2 id=\"工程结构（最佳实践）\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproject/#工程结构（最佳实践）\" class=\"headerlink\" title=\"工程结构（最佳实践）\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>工程结构（最佳实践）</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot框架本身并没有对工程结构有特别的要求，但是按照最佳实践的工程结构可以帮助我们减少可能会遇见的坑，尤其是Spring包扫描机制的存在，如果您使用最佳实践的工程结构，可以免去不少特殊的配置工作。</p><h3 id=\"典型示例\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproject/#典型示例\" class=\"headerlink\" title=\"典型示例\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>典型示例</h3><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>root package结构：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.example.myproject</code></li><li>应用主类<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Application.java</code>置于root package下，通常我们会在应用主类中做一些框架配置扫描等配置，我们放在root package下可以帮助程序减少手工配置来加载到我们希望被Spring加载的内容</li><li>实体（Entity）与数据访问层（Repository）置于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.example.myproject.domain</code>包下</li><li>逻辑层（Service）置于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.example.myproject.service</code>包下</li><li>Web层（web）置于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.example.myproject.web</code>包下</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>com</p><p>+- example</p><p>+- myproject</p><p>+- Application.java</p><p>|</p><p>+- domain</p><p>| &nbsp;+- Customer.java</p><p>| &nbsp;+- CustomerRepository.java</p><p>|</p><p>+- service</p><p>| &nbsp;+- CustomerService.java</p><p>|</p><p>+- web</p><p>| &nbsp;+- CustomerController.java</p><p>|</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">看看您现在的功能是否这样配置，如果不是，不妨尝试改变一下，看看是否可以去掉一些@Configuration配置？</strong></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('97', 'Spring Boot构建RESTful API与单元测试', '首先，回顾并详细说明一下在快速入门中使用的@Controller、@RestController、@RequestMapping注解。如果您对Spring MVC不熟悉并且还没有尝试过快速入门案例，建议先看一下快速入门的内容。@Controller：修饰class，用来创建处理http请求的对象@RestCo', '2016-10-27 19:26:55', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">首先，回顾并详细说明一下在<a href=\"http://blog.didispace.com/spring-boot-learning-1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">快速入门</a>中使用的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Controller</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RestController</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RequestMapping</code>注解。如果您对Spring MVC不熟悉并且还没有尝试过快速入门案例，建议先看一下<a href=\"http://blog.didispace.com/spring-boot-learning-1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">快速入门</a>的内容。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Controller</code>：修饰class，用来创建处理http请求的对象</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RestController</code>：Spring4之后加入的注解，原来在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Controller</code>中返回json需要<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ResponseBody</code>来配合，如果直接用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RestController</code>替代<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Controller</code>就不需要再配置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ResponseBody</code>，默认返回json格式。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RequestMapping</code>：配置url映射</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面我们尝试使用Spring MVC来实现一组对User对象操作的RESTful API，配合注释详细说明在Spring MVC中如何映射HTTP请求、如何传参、如何编写单元测试。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">RESTful API具体设计如下：</strong></p><p><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/><br style=\"color: rgb(86, 90, 95); font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; line-height: 32px; white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"/></p><table width=\"568\"><thead style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><th style=\"margin: 0px; padding: 0px 0px 0.5em; border-width: 0px 0px 3px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">请求类型</th><th style=\"margin: 0px; padding: 0px 0px 0.5em; border-width: 0px 0px 3px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">URL</th><th style=\"margin: 0px; padding: 0px 0px 0.5em; border-width: 0px 0px 3px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">功能说明</th></tr></thead><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">GET</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">/users</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">查询用户列表</td></tr><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">POST</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">/users</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">创建一个用户</td></tr><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">GET</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">/users/id</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">根据id查询一个用户</td></tr><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">PUT</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">/users/id</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">根据id更新一个用户</td></tr><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">DELETE</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">/users/id</td><td style=\"margin: 0px; padding: 10px 0px; border-top-width: 0px; border-right-width: 0px; border-left-width: 0px; border-bottom-color: rgb(236, 239, 242); outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\">根据id删除一个用户</td></tr></tbody></table><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">User实体定义：</p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline; color: rgb(86, 90, 95); line-height: 32px; widows: 1; background-color: rgb(255, 255, 255);\"><code class=\"java\" style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User</span> </span>{ \r\n\r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">private</span> Long id; \r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">private</span> String name; \r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">private</span> Integer age; \r\n\r\n &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 省略setter和getter </span>}</code></pre><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">实现对User对象的操作接口</p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline; color: rgb(86, 90, 95); line-height: 32px; widows: 1; background-color: rgb(255, 255, 255);\"><code class=\"java\" style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\"><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RestController</span> <span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users&quot;</span>) &nbsp; &nbsp; <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 通过这里配置使下面的映射都在/users下 </span><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">UserController</span> </span>{ \r\n\r\n &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 创建线程安全的Map </span>\r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">static</span> Map&lt;Long, User&gt; users = Collections.synchronizedMap(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">new</span> HashMap&lt;Long, User&gt;()); \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/&quot;</span>, method=RequestMethod.GET) \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> List&lt;User&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">getUserList</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 处理&quot;/users/&quot;的GET请求，用来获取用户列表 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 还可以通过@RequestParam从页面中传递参数来进行查询条件或者翻页信息的传递 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;List&lt;User&gt; r = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">new</span> ArrayList&lt;User&gt;(users.values()); \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">return</span> r; \r\n &nbsp; &nbsp;} \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/&quot;</span>, method=RequestMethod.POST) \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">postUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@ModelAttribute User user)</span> </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 处理&quot;/users/&quot;的POST请求，用来创建User </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 除了@ModelAttribute绑定参数之外，还可以通过@RequestParam从页面中传递参数 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;users.put(user.getId(), user); \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>; \r\n &nbsp; &nbsp;} \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/{id}&quot;</span>, method=RequestMethod.GET) \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">getUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id)</span> </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 处理&quot;/users/{id}&quot;的GET请求，用来获取url中id值的User信息 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// url中的id可通过@PathVariable绑定到函数的参数中 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">return</span> users.get(id); \r\n &nbsp; &nbsp;} \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/{id}&quot;</span>, method=RequestMethod.PUT) \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">putUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id, @ModelAttribute User user)</span> </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 处理&quot;/users/{id}&quot;的PUT请求，用来更新User信息 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;User u = users.get(id); \r\n &nbsp; &nbsp; &nbsp; &nbsp;u.setName(user.getName()); \r\n &nbsp; &nbsp; &nbsp; &nbsp;u.setAge(user.getAge()); \r\n &nbsp; &nbsp; &nbsp; &nbsp;users.put(id, u); \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>; \r\n &nbsp; &nbsp;} \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/{id}&quot;</span>, method=RequestMethod.DELETE) \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">deleteUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id)</span> </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 处理&quot;/users/{id}&quot;的DELETE请求，用来删除User </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;users.remove(id); \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>; \r\n &nbsp; &nbsp;} \r\n\r\n}</code></pre><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面针对该Controller编写测试用例验证正确性，具体如下。当然也可以通过浏览器插件等进行请求提交验证。</p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline; color: rgb(86, 90, 95); line-height: 32px; widows: 1; background-color: rgb(255, 255, 255);\"><code class=\"java\" style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\"><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@RunWith</span>(SpringJUnit4ClassRunner.class) \r\n<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@SpringApplicationConfiguration</span>(classes = MockServletContext.class) \r\n<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@WebAppConfiguration</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">ApplicationTests</span> </span>{ \r\n\r\n &nbsp; &nbsp;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">private</span> MockMvc mvc; \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@Before</span> \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">setUp</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">throws</span> Exception </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc = MockMvcBuilders.standaloneSetup(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">new</span> UserController()).build(); \r\n &nbsp; &nbsp;} \r\n\r\n &nbsp; &nbsp;<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@Test</span> \r\n &nbsp; &nbsp;<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">testUserController</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">throws</span> Exception </span>{ \r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 测试UserController </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;RequestBuilder request = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">null</span>; \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 1、get查一下user列表，应该为空 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(status().isOk()) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;[]&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 2、post提交一个user </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = post(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/&quot;</span>) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;id&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;1&quot;</span>) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;name&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;测试大师&quot;</span>) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;age&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;20&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 3、get获取user列表，应该有刚才插入的数据 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(status().isOk()) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;[{\\&quot;id\\&quot;:1,\\&quot;name\\&quot;:\\&quot;测试大师\\&quot;,\\&quot;age\\&quot;:20}]&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 4、put修改id为1的user </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = put(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/1&quot;</span>) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;name&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;测试终极大师&quot;</span>) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;age&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;30&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 5、get一个id为1的user </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/1&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;{\\&quot;id\\&quot;:1,\\&quot;name\\&quot;:\\&quot;测试终极大师\\&quot;,\\&quot;age\\&quot;:30}&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 6、del删除id为1的user </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = delete(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/1&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;success&quot;</span>))); \r\n\r\n &nbsp; &nbsp; &nbsp; &nbsp;<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">// 7、get查一下user列表，应该为空 </span>\r\n &nbsp; &nbsp; &nbsp; &nbsp;request = get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;/users/&quot;</span>); \r\n &nbsp; &nbsp; &nbsp; &nbsp;mvc.perform(request) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(status().isOk()) \r\n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.andExpect(content().string(equalTo(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">&quot;[]&quot;</span>))); \r\n\r\n &nbsp; &nbsp;} \r\n\r\n}</code></pre><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">至此，我们通过引入web模块（没有做其他的任何配置），就可以轻松利用Spring MVC的功能，以非常简洁的代码完成了对User对象的RESTful API的创建以及单元测试的编写。其中同时介绍了Spring MVC中最为常用的几个核心注解：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Controller</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RestController</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RequestMapping</code>以及一些参数绑定的注解：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@PathVariable</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ModelAttribute</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RequestParam</code>等。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot教程完整案例</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('98', 'Spring Boot中使用Swagger2构建强大的RESTful API文档', '由于Spring Boot能够快速开发、便捷部署等特性，相信有很大一部分Spring Boot的用户会用来构建RESTful API。而我们构建RESTful API的目的通常都是由于多终端的原因，这些终端会共用很多底层业务逻辑，因此我们会抽象出这样一层来同时服务于多个移动端或者Web前端。这样一来，我们的R', '2016-10-27 19:27:20', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">由于Spring Boot能够快速开发、便捷部署等特性，相信有很大一部分Spring Boot的用户会用来构建RESTful API。而我们构建RESTful API的目的通常都是由于多终端的原因，这些终端会共用很多底层业务逻辑，因此我们会抽象出这样一层来同时服务于多个移动端或者Web前端。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">这样一来，我们的RESTful API就有可能要面对多个开发人员或多个开发团队：IOS开发、Android开发或是Web开发等。为了减少与其他团队平时开发期间的频繁沟通成本，传统做法我们会创建一份RESTful API文档来记录所有接口细节，然而这样的做法有以下几个问题：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>由于接口众多，并且细节复杂（需要考虑不同的HTTP请求类型、HTTP头部信息、HTTP请求内容等），高质量地创建这份文档本身就是件非常吃力的事，下游的抱怨声不绝于耳。</li><li>随着时间推移，不断修改接口实现的时候都必须同步修改接口文档，而文档与代码又处于两个不同的媒介，除非有严格的管理机制，不然很容易导致不一致现象。</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了解决上面这样的问题，本文将介绍RESTful API的重磅好伙伴Swagger2，它可以轻松的整合到Spring Boot中，并与Spring MVC程序配合组织出强大RESTful API文档。它既可以减少我们创建文档的工作量，同时说明内容又整合入实现代码中，让维护文档和修改代码整合为一体，可以让我们在修改代码逻辑的同时方便的修改文档说明。另外Swagger2也提供了强大的页面测试功能来调试每个RESTful API。具体效果如下图所示：</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/content/images/2016/04/swagger2_1.png\" title=\"alt=\" class=\"gallery-item\" lg-event-uid=\"&amp;1\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/04/swagger2_1.png\" alt=\"alt=\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">alt=</span></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面来具体介绍，如果在Spring Boot中使用Swagger2。首先，我们需要一个Spring Boot实现的RESTful API工程，若您没有做过这类内容，建议先阅读<br/><a href=\"http://blog.didispace.com/springbootrestfulapi/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot构建一个较为复杂的RESTful APIs和单元测试</a>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面的内容我们会以<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">教程样例</a>中的Chapter3-1-1进行下面的实验（Chpater3-1-5是我们的结果工程，亦可参考）。</p><h4 id=\"添加Swagger2依赖\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootswagger2/#添加Swagger2依赖\" class=\"headerlink\" title=\"添加Swagger2依赖\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>添加Swagger2依赖</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入Swagger2的依赖</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>io.springfox<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>springfox-swagger2<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>2.2.2<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>io.springfox<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>springfox-swagger-ui<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>2.2.2<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"创建Swagger2配置类\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootswagger2/#创建Swagger2配置类\" class=\"headerlink\" title=\"创建Swagger2配置类\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>创建Swagger2配置类</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Application.java</code>同级创建Swagger2的配置类<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Swagger2</code>。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableSwagger</span>2</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Swagger2</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> Docket <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">createRestApi</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Docket(DocumentationType.SWAGGER_2)</p><p>.apiInfo(apiInfo())</p><p>.select()</p><p>.apis(RequestHandlerSelectors.basePackage(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;com.didispace.web&quot;</span>))</p><p>.paths(PathSelectors.any())</p><p>.build();</p><p>}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> ApiInfo <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">apiInfo</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> ApiInfoBuilder()</p><p>.title(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Spring Boot中使用Swagger2构建RESTful APIs&quot;</span>)</p><p>.description(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;更多Spring Boot相关文章请关注：http://blog.didispace.com/&quot;</span>)</p><p>.termsOfServiceUrl(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://blog.didispace.com/&quot;</span>)</p><p>.contact(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;程序猿DD&quot;</span>)</p><p>.version(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;1.0&quot;</span>)</p><p>.build();</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如上代码所示，通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Configuration</code>注解，让Spring来加载该类配置。再通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableSwagger2</code>注解来启用Swagger2。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">再通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">createRestApi</code>函数创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Docket</code>的Bean之后，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">apiInfo()</code>用来创建该Api的基本信息（这些基本信息会展现在文档页面中）。<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">select()</code>函数返回一个<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ApiSelectorBuilder</code>实例用来控制哪些接口暴露给Swagger来展现，本例采用指定扫描的包路径来定义，Swagger会扫描该包下所有Controller定义的API，并产生文档内容（除了被<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ApiIgnore</code>指定的请求）。</p><h4 id=\"添加文档内容\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootswagger2/#添加文档内容\" class=\"headerlink\" title=\"添加文档内容\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>添加文档内容</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成了上述配置后，其实已经可以生产文档内容，但是这样的文档主要针对请求本身，而描述主要来源于函数等命名产生，对用户并不友好，我们通常需要自己增加一些说明来丰富文档内容。如下所示，我们通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ApiOperation</code>注解来给API增加说明、通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ApiImplicitParams</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ApiImplicitParam</code>注解来给参数增加说明。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p><p>40</p><p>41</p><p>42</p><p>43</p><p>44</p><p>45</p><p>46</p><p>47</p><p>48</p><p>49</p><p>50</p><p>51</p><p>52</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RestController</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/users&quot;</span>) &nbsp; &nbsp; <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 通过这里配置使下面的映射都在/users下，可去除</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserController</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> Map&lt;Long, User&gt; users = Collections.synchronizedMap(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> HashMap&lt;Long, User&gt;());</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiOperation</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;获取用户列表&quot;</span>, notes=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value={<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;&quot;</span>}, method=RequestMethod.GET)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> List&lt;User&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getUserList</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>List&lt;User&gt; r = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> ArrayList&lt;User&gt;(users.values());</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> r;</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiOperation</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;创建用户&quot;</span>, notes=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;根据User对象创建用户&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParam</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;user&quot;</span>, value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;用户详细实体user&quot;</span>, required = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>, dataType = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;User&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;&quot;</span>, method=RequestMethod.POST)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">postUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@RequestBody User user)</span> </span>{</p><p>users.put(user.getId(), user);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;success&quot;</span>;</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiOperation</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;获取用户详细信息&quot;</span>, notes=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;根据url的id来获取用户详细信息&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParam</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;id&quot;</span>, value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;用户ID&quot;</span>, required = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>, dataType = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Long&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/{id}&quot;</span>, method=RequestMethod.GET)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> users.get(id);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiOperation</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;更新用户详细信息&quot;</span>, notes=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;根据url的id来指定更新对象，并根据传过来的user信息来更新用户详细信息&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParams</span>({</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParam</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;id&quot;</span>, value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;用户ID&quot;</span>, required = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>, dataType = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Long&quot;</span>),</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParam</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;user&quot;</span>, value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;用户详细实体user&quot;</span>, required = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>, dataType = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;User&quot;</span>)</p><p>})</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/{id}&quot;</span>, method=RequestMethod.PUT)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">putUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id, @RequestBody User user)</span> </span>{</p><p>User u = users.get(id);</p><p>u.setName(user.getName());</p><p>u.setAge(user.getAge());</p><p>users.put(id, u);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;success&quot;</span>;</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiOperation</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;删除用户&quot;</span>, notes=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;根据url的id来指定删除对象&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ApiImplicitParam</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;id&quot;</span>, value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;用户ID&quot;</span>, required = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>, dataType = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Long&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/{id}&quot;</span>, method=RequestMethod.DELETE)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deleteUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@PathVariable Long id)</span> </span>{</p><p>users.remove(id);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;success&quot;</span>;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成上述代码添加上，启动Spring Boot程序，访问：<a href=\"http://localhost:8080/swagger-ui.html\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://localhost:8080/swagger-ui.html</a><br/>。就能看到前文所展示的RESTful API的页面。我们可以再点开具体的API请求，以POST类型的/users请求为例，可找到上述代码中我们配置的Notes信息以及参数user的描述信息，如下图所示。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/content/images/2016/04/swagger2_2.png\" title=\"alt\" class=\"gallery-item\" lg-event-uid=\"&amp;2\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/04/swagger2_2.png\" alt=\"alt\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">alt</span></p><h4 id=\"API文档访问与调试\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootswagger2/#API文档访问与调试\" class=\"headerlink\" title=\"API文档访问与调试\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>API文档访问与调试</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在上图请求的页面中，我们看到user的Value是个输入框？是的，Swagger除了查看接口功能外，还提供了调试测试功能，我们可以点击上图中右侧的Model Schema（黄色区域：它指明了User的数据结构），此时Value中就有了user对象的模板，我们只需要稍适修改，点击下方<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">“Try it out！”</code>按钮，即可完成了一次请求调用！</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">此时，你也可以通过几个GET请求来验证之前的POST请求是否正确。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">相比为这些接口编写文档的工作，我们增加的配置内容是非常少而且精简的，对于原有代码的侵入也在忍受范围之内。因此，在构建RESTful API的同时，加入swagger来对API文档进行管理，是个不错的选择。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整结果示例可查看<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-1-5</a>。</p><h4 id=\"参考信息\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootswagger2/#参考信息\" class=\"headerlink\" title=\"参考信息\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>参考信息</h4><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><a href=\"http://swagger.io/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Swagger官方网站</a></li></ul><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('99', 'Spring Boot中使用JdbcTemplate访问数据库', '之前介绍了很多Web层的例子，包括构建RESTful API、使用Thymeleaf模板引擎渲染Web视图，但是这些内容还不足以构建一个动态的应用。通常我们做App也好，做Web应用也好，都需要内容，而内容通常存储于各种类型的数据库，服务端在接收到访问请求之后需要访问数据库获取并处理成展现给用户使用的数据形式', '2016-10-27 19:27:42', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">之前介绍了很多Web层的例子，包括<a href=\"http://blog.didispace.com/springbootrestfulapi/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">构建RESTful API</a>、<a href=\"http://blog.didispace.com/springbootweb/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">使用Thymeleaf模板引擎渲染Web视图</a>，但是这些内容还不足以构建一个动态的应用。通常我们做App也好，做Web应用也好，都需要内容，而内容通常存储于各种类型的数据库，服务端在接收到访问请求之后需要访问数据库获取并处理成展现给用户使用的数据形式。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文介绍在Spring Boot基础下配置数据源和通过JdbcTemplate编写数据访问的示例。</p><h2 id=\"数据源配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata1/#数据源配置\" class=\"headerlink\" title=\"数据源配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>数据源配置</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在我们访问数据库的时候，需要先配置一个数据源，下面分别介绍一下几种不同的数据库配置方式。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">首先，为了连接数据库需要引入jdbc支持，在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入如下配置：</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"嵌入式数据库支持\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata1/#嵌入式数据库支持\" class=\"headerlink\" title=\"嵌入式数据库支持\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>嵌入式数据库支持</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">嵌入式数据库通常用于开发和测试环境，不推荐用于生产环境。Spring Boot提供自动配置的嵌入式数据库有H2、HSQL、Derby，你不需要提供任何连接配置就能使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">比如，我们可以在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入如下配置使用HSQL</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.hsqldb<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>hsqldb<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span>runtime<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"连接生产数据源\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata1/#连接生产数据源\" class=\"headerlink\" title=\"连接生产数据源\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>连接生产数据源</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">以MySQL数据库为例，先引入MySQL连接的依赖包，在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入：</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>mysql<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>5.1.21<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/application.properties</code>中配置数据源信息</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.datasource.url=jdbc:mysql://localhost:3306/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span></p><p>spring.datasource.username=dbuser</p><p>spring.datasource.password=dbpass</p><p>spring.datasource.driver-class-name=com.mysql.jdbc.Driver</p></pre></td></tr></tbody></table></figure></p><h4 id=\"连接JNDI数据源\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata1/#连接JNDI数据源\" class=\"headerlink\" title=\"连接JNDI数据源\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>连接JNDI数据源</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">当你将应用部署于应用服务器上的时候想让数据源由应用服务器管理，那么可以使用如下配置方式引入JNDI数据源。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.datasource.jndi-name=java:jboss/datasources/customers</p></pre></td></tr></tbody></table></figure></p><h2 id=\"使用JdbcTemplate操作数据库\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata1/#使用JdbcTemplate操作数据库\" class=\"headerlink\" title=\"使用JdbcTemplate操作数据库\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用JdbcTemplate操作数据库</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring的JdbcTemplate是自动配置的，你可以直接使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Autowired</code>来注入到你自己的bean中来使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">举例：我们在创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">User</code>表，包含属性<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">name</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">age</code>，下面来编写数据访问对象和单元测试用例。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>定义包含有插入、删除、查询的抽象接口UserService</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserService</span> </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">/**</span></p><p>* 新增一个用户</p><p>* <span class=\"doctag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@param</span> name</p><p>* <span class=\"doctag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@param</span> age</p><p>*/</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">create</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, Integer age)</span></span>;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">/**</span></p><p>* 根据name删除一个用户高</p><p>* <span class=\"doctag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline;\">@param</span> name</p><p>*/</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deleteByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">/**</span></p><p>* 获取用户总量</p><p>*/</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">Integer <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getAllUsers</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">/**</span></p><p>* 删除所有用户</p><p>*/</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deleteAllUsers</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>通过JdbcTemplate实现UserService中定义的数据访问操作</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Service</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserServiceImpl</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">implements</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserService</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> JdbcTemplate jdbcTemplate;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Override</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">create</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, Integer age)</span> </span>{</p><p>jdbcTemplate.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;insert into USER(NAME, AGE) values(?, ?)&quot;</span>, name, age);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Override</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deleteByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span> </span>{</p><p>jdbcTemplate.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;delete from USER where NAME = ?&quot;</span>, name);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Override</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> Integer <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getAllUsers</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> jdbcTemplate.queryForObject(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;select count(1) from USER&quot;</span>, Integer.class);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Override</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deleteAllUsers</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>jdbcTemplate.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;delete from USER&quot;</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建对UserService的单元测试用例，通过创建、删除和查询来验证数据库操作的正确性。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserService userSerivce;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">setUp</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 准备，清空user表</span></p><p>		userSerivce.deleteAllUsers();</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 插入5个用户</span></p><p>		userSerivce.create(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;a&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>);</p><p>		userSerivce.create(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;b&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2</span>);</p><p>		userSerivce.create(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;c&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3</span>);</p><p>		userSerivce.create(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;d&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">4</span>);</p><p>		userSerivce.create(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;e&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">5</span>);</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 查数据库，应该有5个用户</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">5</span>, userSerivce.getAllUsers().intValue());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 删除两个用户</span></p><p>		userSerivce.deleteByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;a&quot;</span>);</p><p>		userSerivce.deleteByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;e&quot;</span>);</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 查数据库，应该有5个用户</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3</span>, userSerivce.getAllUsers().intValue());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><em style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline;\">上面介绍的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">JdbcTemplate</code>只是最基本的几个操作，更多其他数据访问操作的使用请参考：<a href=\"https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/jdbc/core/JdbcTemplate.html\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">JdbcTemplate API</a></em></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面这个简单的例子，我们可以看到在Spring Boot下访问数据库的配置依然秉承了框架的初衷：简单。我们只需要在pom.xml中加入数据库依赖，再到application.properties中配置连接信息，不需要像Spring应用中创建JdbcTemplate的Bean，就可以直接在自己的对象中注入使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">本文完整示例</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('100', 'Spring Boot中使用Spring-data-jpa让数据访问更简单、更优雅', '在上一篇Spring中使用JdbcTemplate访问数据库 中介绍了一种基本的数据访问方式，结合构建RESTful API和使用Thymeleaf模板引擎渲染Web视图的内容就已经可以完成App服务端和Web站点的开发任务了。然而，在实际开发过程中，对数据库的操作无非就“增删改查”。就最为普遍的单表操作而言', '2016-10-27 19:28:08', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在上一篇<a href=\"http://blog.didispace.com/springbootdata1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring中使用JdbcTemplate访问数据库&nbsp;</a>中介绍了一种基本的数据访问方式，结合<a href=\"http://blog.didispace.com/springbootrestfulapi/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">构建RESTful API</a>和<a href=\"http://blog.didispace.com/springbootweb/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">使用Thymeleaf模板引擎渲染Web视图</a>的内容就已经可以完成App服务端和Web站点的开发任务了。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">然而，在实际开发过程中，对数据库的操作无非就“增删改查”。就最为普遍的单表操作而言，除了表和字段不同外，语句都是类似的，开发人员需要写大量类似而枯燥的语句来完成业务逻辑。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了解决这些大量枯燥的数据操作语句，我们第一个想到的是使用ORM框架，比如：Hibernate。通过整合Hibernate之后，我们以操作Java实体的方式最终将数据改变映射到数据库表中。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了解决抽象各个Java实体基本的“增删改查”操作，我们通常会以泛型的方式封装一个模板Dao来进行抽象简化，但是这样依然不是很方便，我们需要针对每个实体编写一个继承自泛型模板Dao的接口，再编写该接口的实现。虽然一些基础的数据访问已经可以得到很好的复用，但是在代码结构上针对每个实体都会有一堆Dao的接口和实现。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">由于模板Dao的实现，使得这些具体实体的Dao层已经变的非常“薄”，有一些具体实体的Dao实现可能完全就是对模板Dao的简单代理，并且往往这样的实现类可能会出现在很多实体上。Spring-data-jpa的出现正可以让这样一个已经很“薄”的数据访问层变成只是一层接口的编写方式。比如，下面的例子：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Query</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;from User u where u.name=:name&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name)</span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们只需要通过编写一个继承自<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">JpaRepository</code>的接口就能完成数据访问，下面以一个具体实例来体验Spring-data-jpa给我们带来的强大功能。</p><h2 id=\"使用示例\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata2/#使用示例\" class=\"headerlink\" title=\"使用示例\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用示例</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">由于Spring-data-jpa依赖于Hibernate。如果您对Hibernate有一定了解，下面内容可以毫不费力的看懂并上手使用Spring-data-jpa。如果您还是Hibernate新手，您可以先按如下方式入门，再建议回头学习一下Hibernate以帮助这部分的理解和进一步使用。</p><h4 id=\"工程配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata2/#工程配置\" class=\"headerlink\" title=\"工程配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>工程配置</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中添加相关依赖，加入以下内容：</p><p><figure class=\"highlight\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>&lt;dependency</p><p>&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</p><p>&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</p><p>&lt;/dependency&gt;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.xml</code>中配置：数据库连接信息（如使用嵌入式数据库则不需要）、自动创建表结构的设置，例如使用mysql的情况如下：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.datasource.url=jdbc:mysql://localhost:3306/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span></p><p>spring.datasource.username=root</p><p>spring.datasource.password=root</p><p>spring.datasource.driver-class-name=com.mysql.jdbc.Driver</p><p>spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.jpa.properties.hibernate.hbm2ddl.auto</code>是hibernate的配置属性，其主要作用是：自动创建、更新、验证数据库表结构。该参数的几种配置如下：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">create</code>：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">create-drop</code>：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">update</code>：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">validate</code>：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">至此已经完成基础配置，如果您有在Spring下整合使用过它的话，相信你已经感受到Spring Boot的便利之处：JPA的传统配置在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">persistence.xml</code>文件中，但是这里我们不需要。当然，最好在构建项目时候按照之前提过的<a href=\"http://blog.didispace.com/springbootproject/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">最佳实践的工程结构</a>来组织，这样以确保各种配置都能被框架扫描到。</p><h4 id=\"创建实体\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata2/#创建实体\" class=\"headerlink\" title=\"创建实体\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>创建实体</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">创建一个User实体，包含id（主键）、name（姓名）、age（年龄）属性，通过ORM框架其会被映射到数据库表中，由于配置了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hibernate.hbm2ddl.auto</code>，在应用启动的时候框架会自动去数据库中创建对应的表。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Entity</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Id</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@GeneratedValue</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略构造函数</span></p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><h4 id=\"创建数据访问接口\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata2/#创建数据访问接口\" class=\"headerlink\" title=\"创建数据访问接口\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>创建数据访问接口</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面针对User实体创建对应的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Repository</code>接口实现对该实体的数据访问，如下代码：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByNameAndAge</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, Integer age)</span></span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Query</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;from User u where u.name=:name&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name)</span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring-data-jpa中，只需要编写类似上面这样的接口就可实现数据访问。不再像我们以往编写了接口时候还需要自己编写接口实现类，直接减少了我们的文件清单。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面对上面的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">UserRepository</code>做一些解释，该接口继承自<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">JpaRepository</code>，通过查看<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">JpaRepository</code>接口的<a href=\"http://docs.spring.io/spring-data/data-jpa/docs/current/api/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">API文档</a>，可以看到该接口本身已经实现了创建（save）、更新（save）、删除（delete）、查询（findAll、findOne）等基本操作的函数，因此对于这些基础操作的数据访问就不需要开发者再自己定义。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在我们实际开发中，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">JpaRepository</code>接口定义的接口往往还不够或者性能不够优化，我们需要进一步实现更复杂一些的查询或操作。由于本文重点在spring boot中整合spring-data-jpa，在这里先抛砖引玉简单介绍一下spring-data-jpa中让我们兴奋的功能，后续再单独开篇讲一下spring-data-jpa中的常见使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在上例中，我们可以看到下面两个函数：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">User findByName(String name)</code></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">User findByNameAndAge(String name, Integer age)</code></li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">它们分别实现了按name查询User实体和按name和age查询User实体，可以看到我们这里没有任何类SQL语句就完成了两个条件查询方法。这就是Spring-data-jpa的一大特性：<strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">通过解析方法名创建查询</strong>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了通过解析方法名来创建查询外，它也提供通过使用@Query 注解来创建查询，您只需要编写JPQL语句，并通过类似“:name”来映射@Param指定的参数，就像例子中的第三个findUser函数一样。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">Spring-data-jpa的能力远不止本文提到的这些，由于本文主要以整合介绍为主，对于Spring-data-jpa的使用只是介绍了常见的使用方式。诸如@Modifying操作、分页排序、原生SQL支持以及与Spring MVC的结合使用等等内容就不在本文中详细展开，这里先挖个坑，后续再补文章填坑，如您对这些感兴趣可以关注我博客或简书，同样欢迎大家留言交流想法。</strong></p><h4 id=\"单元测试\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootdata2/#单元测试\" class=\"headerlink\" title=\"单元测试\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>单元测试</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成了上面的数据访问接口之后，按照惯例就是编写对应的单元测试来验证编写的内容是否正确。这里就不多做介绍，主要通过数据操作和查询来反复验证操作的正确性。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p><p>40</p><p>41</p><p>42</p><p>43</p><p>44</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 创建10条记录</span></p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;BBB&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;CCC&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DDD&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;EEE&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">50</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;GGG&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">70</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;HHH&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">80</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;III&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">90</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;JJJ&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">100</span>));</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试findAll, 查询所有记录</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>, userRepository.findAll().size());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试findByName, 查询姓名为FFF的User</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>, userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>).getAge().longValue());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试findUser, 查询姓名为FFF的User</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>, userRepository.findUser(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>).getAge().longValue());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试findByNameAndAge, 查询姓名为FFF并且年龄为60的User</span></p><p>		Assert.assertEquals(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>, userRepository.findByNameAndAge(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>).getName());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试删除姓名为AAA的User</span></p><p>		userRepository.delete(userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>));</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 测试findAll, 查询所有记录, 验证上面的删除是否成功</span></p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">9</span>, userRepository.findAll().size());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234);\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('101', 'Spring Boot多数据源配置与使用', '之前在介绍使用JdbcTemplate和Spring-data-jpa时，都使用了单数据源。在单数据源的情况下，Spring Boot的配置非常简单，只需要在application.properties文件中配置连接参数即可。但是往往随着业务量发展，我们通常会进行数据库拆分或是引入其他数据库，从而我们需要配置', '2016-10-27 19:30:35', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">之前在介绍使用JdbcTemplate和Spring-data-jpa时，都使用了单数据源。在单数据源的情况下，Spring Boot的配置非常简单，只需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中配置连接参数即可。但是往往随着业务量发展，我们通常会进行数据库拆分或是引入其他数据库，从而我们需要配置多个数据源，下面基于之前的JdbcTemplate和Spring-data-jpa例子分别介绍两种多数据源的配置方式。</p><h3 id=\"多数据源配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmultidatasource/#多数据源配置\" class=\"headerlink\" title=\"多数据源配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>多数据源配置</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">创建一个Spring配置类，定义两个DataSource用来读取<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中的不同配置。如下例子中，主数据源配置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.datasource.primary</code>开头的配置，第二数据源配置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.datasource.secondary</code>开头的配置。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">DataSourceConfig</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryDataSource&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryDataSource&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ConfigurationProperties</span>(prefix=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;spring.datasource.primary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> DataSource <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">primaryDataSource</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> DataSourceBuilder.create().build();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryDataSource&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryDataSource&quot;</span>)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Primary</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ConfigurationProperties</span>(prefix=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;spring.datasource.secondary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> DataSource <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">secondaryDataSource</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> DataSourceBuilder.create().build();</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对应的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>配置如下：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.datasource.primary.url=jdbc:mysql://localhost:3306/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>1</p><p>spring.datasource.primary.username=root</p><p>spring.datasource.primary.password=root</p><p>spring.datasource.primary.driver-class-name=com.mysql.jdbc.Driver</p><p>spring.datasource.secondary.url=jdbc:mysql://localhost:3306/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>2</p><p>spring.datasource.secondary.username=root</p><p>spring.datasource.secondary.password=root</p><p>spring.datasource.secondary.driver-class-name=com.mysql.jdbc.Driver</p></pre></td></tr></tbody></table></figure></p><h3 id=\"JdbcTemplate支持\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmultidatasource/#JdbcTemplate支持\" class=\"headerlink\" title=\"JdbcTemplate支持\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>JdbcTemplate支持</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对JdbcTemplate的支持比较简单，只需要为其注入对应的datasource即可，如下例子，在创建JdbcTemplate的时候分别注入名为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">primaryDataSource</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">secondaryDataSource</code>的数据源来区分不同的JdbcTemplate。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryJdbcTemplate&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> JdbcTemplate <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">primaryJdbcTemplate</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(</span></span></p><p>@Qualifier(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryDataSource&quot;</span>) DataSource dataSource) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> JdbcTemplate(dataSource);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryJdbcTemplate&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> JdbcTemplate <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">secondaryJdbcTemplate</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(</span></span></p><p>@Qualifier(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryDataSource&quot;</span>) DataSource dataSource) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> JdbcTemplate(dataSource);</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">接下来通过测试用例来演示如何使用这两个针对不同数据源的JdbcTemplate。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryJdbcTemplate&quot;</span>)</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">protected</span> JdbcTemplate jdbcTemplate1;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryJdbcTemplate&quot;</span>)</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">protected</span> JdbcTemplate jdbcTemplate2;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">setUp</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>		jdbcTemplate1.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DELETE &nbsp;FROM &nbsp;USER &quot;</span>);</p><p>		jdbcTemplate2.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DELETE &nbsp;FROM &nbsp;USER &quot;</span>);</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 往第一个数据源中插入两条数据</span></p><p>		jdbcTemplate1.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;insert into user(id,name,age) values(?, ?, ?)&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaa&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>);</p><p>		jdbcTemplate1.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;insert into user(id,name,age) values(?, ?, ?)&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;bbb&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>);</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 往第二个数据源中插入一条数据，若插入的是第一个数据源，则会主键冲突报错</span></p><p>		jdbcTemplate2.update(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;insert into user(id,name,age) values(?, ?, ?)&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaa&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>);</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 查一下第一个数据源中是否有两条数据，验证插入是否成功</span></p><p>		Assert.assertEquals(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;2&quot;</span>, jdbcTemplate1.queryForObject(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;select count(1) from user&quot;</span>, String.class));</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 查一下第一个数据源中是否有两条数据，验证插入是否成功</span></p><p>		Assert.assertEquals(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;1&quot;</span>, jdbcTemplate2.queryForObject(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;select count(1) from user&quot;</span>, String.class));</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例:Chapter3-2-3</a></p><h3 id=\"Spring-data-jpa支持\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmultidatasource/#Spring-data-jpa支持\" class=\"headerlink\" title=\"Spring-data-jpa支持\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Spring-data-jpa支持</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于数据源的配置可以沿用上例中<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">DataSourceConfig</code>的实现。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">新增对第一数据源的JPA配置，注意两处注释的地方，用于指定数据源对应的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Entity</code>实体和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Repository</code>定义位置，用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Primary</code>区分主数据源。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p><p>40</p><p>41</p><p>42</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableTransactionManagement</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableJpaRepositories</span>(</p><p>entityManagerFactoryRef=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerFactoryPrimary&quot;</span>,</p><p>transactionManagerRef=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;transactionManagerPrimary&quot;</span>,</p><p>basePackages= { <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;com.didispace.domain.p&quot;</span> }) <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">//设置Repository所在位置</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">PrimaryConfig</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span> <span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryDataSource&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> DataSource primaryDataSource;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Primary</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerPrimary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> EntityManager <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">entityManager</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> entityManagerFactoryPrimary(builder).getObject().createEntityManager();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Primary</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerFactoryPrimary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> LocalContainerEntityManagerFactoryBean <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">entityManagerFactoryPrimary</span> <span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> builder</p><p>.dataSource(primaryDataSource)</p><p>.properties(getVendorProperties(primaryDataSource))</p><p>.packages(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;com.didispace.domain.p&quot;</span>) <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">//设置实体类所在位置</span></p><p>.persistenceUnit(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;primaryPersistenceUnit&quot;</span>)</p><p>.build();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> JpaProperties jpaProperties;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Map&lt;String, String&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getVendorProperties</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(DataSource dataSource)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> jpaProperties.getHibernateProperties(dataSource);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Primary</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;transactionManagerPrimary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> PlatformTransactionManager <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">transactionManagerPrimary</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> JpaTransactionManager(entityManagerFactoryPrimary(builder).getObject());</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">新增对第二数据源的JPA配置，内容与第一数据源类似，具体如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p><p>37</p><p>38</p><p>39</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableTransactionManagement</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableJpaRepositories</span>(</p><p>entityManagerFactoryRef=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerFactorySecondary&quot;</span>,</p><p>transactionManagerRef=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;transactionManagerSecondary&quot;</span>,</p><p>basePackages= { <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;com.didispace.domain.s&quot;</span> }) <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">//设置Repository所在位置</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">SecondaryConfig</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span> <span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Qualifier</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryDataSource&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> DataSource secondaryDataSource;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerSecondary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> EntityManager <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">entityManager</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> entityManagerFactorySecondary(builder).getObject().createEntityManager();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;entityManagerFactorySecondary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> LocalContainerEntityManagerFactoryBean <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">entityManagerFactorySecondary</span> <span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> builder</p><p>.dataSource(secondaryDataSource)</p><p>.properties(getVendorProperties(secondaryDataSource))</p><p>.packages(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;com.didispace.domain.s&quot;</span>) <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">//设置实体类所在位置</span></p><p>.persistenceUnit(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;secondaryPersistenceUnit&quot;</span>)</p><p>.build();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> JpaProperties jpaProperties;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Map&lt;String, String&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getVendorProperties</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(DataSource dataSource)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> jpaProperties.getHibernateProperties(dataSource);</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span>(name = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;transactionManagerSecondary&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">PlatformTransactionManager <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">transactionManagerSecondary</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(EntityManagerFactoryBuilder builder)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> JpaTransactionManager(entityManagerFactorySecondary(builder).getObject());</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成了以上配置之后，主数据源的实体和数据访问对象位于：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace.domain.p</code>，次数据源的实体和数据访问接口位于：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace.domain.s</code>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">分别在这两个package下创建各自的实体和数据访问接口</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>主数据源下，创建User实体和对应的Repository接口</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Entity</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Id</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@GeneratedValue</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">User</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>{}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">User</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, Integer age)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.name = name;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.age = age;</p><p>}</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter、setter</span></p><p>}</p></pre></td></tr></tbody></table></figure><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>从数据源下，创建Message实体和对应的Repository接口</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Entity</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Message</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Id</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@GeneratedValue</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String content;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">Message</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>{}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">Message</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, String content)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.name = name;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.content = content;</p><p>}</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter、setter</span></p><p>}</p></pre></td></tr></tbody></table></figure><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">MessageRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Message</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">接下来通过测试用例来验证使用这两个针对不同数据源的配置进行数据操作。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> MessageRepository messageRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaa&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;bbb&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ccc&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ddd&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;eee&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">50</span>));</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">5</span>, userRepository.findAll().size());</p><p>		messageRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Message(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;o1&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaaaaaaaaa&quot;</span>));</p><p>		messageRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Message(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;o2&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;bbbbbbbbbb&quot;</span>));</p><p>		messageRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Message(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;o3&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;cccccccccc&quot;</span>));</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3</span>, messageRepository.findAll().size());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例:Chapter3-2-4</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('102', 'Spring Boot日志管理', 'Spring Boot在所有内部日志中使用Commons Logging，但是默认配置也提供了对常用日志的支持，如：Java Util Logging，Log4J, Log4J2和Logback。每种Logger都可以通过配置使用控制台或者文件输出日志内容。格式化日志默认的日志输出如下：12016-04-13', '2016-10-27 19:30:55', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot在所有内部日志中使用<a href=\"http://commons.apache.org/proper/commons-logging/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Commons Logging</a>，但是默认配置也提供了对常用日志的支持，如：<a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/logging/package-summary.html\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Java Util Logging</a>，<a href=\"http://logging.apache.org/log4j/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Log4J</a>,&nbsp;<a href=\"http://logging.apache.org/log4j/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Log4J2</a>和<a href=\"http://logback.qos.ch/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Logback</a>。每种Logger都可以通过配置使用控制台或者文件输出日志内容。</p><h2 id=\"格式化日志\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#格式化日志\" class=\"headerlink\" title=\"格式化日志\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>格式化日志</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">默认的日志输出如下：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>2016-04-13 08:23:50.120 &nbsp;INFO 37397 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] org.hibernate.Version &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;: HHH000412: Hibernate Core {4.3.11.Final}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">输出内容元素具体如下：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>时间日期 — 精确到毫秒</li><li>日志级别 — ERROR, WARN, INFO, DEBUG or TRACE</li><li>进程ID</li><li>分隔符 —&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">---</code>&nbsp;标识实际日志的开始</li><li>线程名 — 方括号括起来（可能会截断控制台输出）</li><li>Logger名 — 通常使用源代码的类名</li><li>日志内容</li></ul><h2 id=\"控制台输出\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#控制台输出\" class=\"headerlink\" title=\"控制台输出\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>控制台输出</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中默认配置了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ERROR</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">WARN</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">INFO</code>级别的日志输出到控制台。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们可以通过两种方式切换至<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">DEBUG</code>级别：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在运行命令后加入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">--debug</code>标志，如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">$ java -jar myapp.jar --debug</code></li><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中配置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">debug=true</code>，该属性置为true的时候，核心Logger（包含嵌入式容器、hibernate、spring）会输出更多内容，但是你自己应用的日志并不会输出为DEBUG级别。</li></ul><h4 id=\"多彩输出\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#多彩输出\" class=\"headerlink\" title=\"多彩输出\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>多彩输出</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如果你的终端支持ANSI，设置彩色输出会让日志更具可读性。通过在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中设置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.output.ansi.enabled</code>参数来支持。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>NEVER：禁用ANSI-colored输出（默认项）</li><li>DETECT：会检查终端是否支持ANSI，是的话就采用彩色输出（推荐项）</li><li>ALWAYS：总是使用ANSI-colored格式输出，若终端不支持的时候，会有很多干扰信息，不推荐使用</li></ul><h2 id=\"文件输出\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#文件输出\" class=\"headerlink\" title=\"文件输出\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>文件输出</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot默认配置只会输出到控制台，并不会记录到文件中，但是我们通常生产环境使用时都需要以文件方式记录。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">若要增加文件输出，需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中配置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.file</code>或<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.path</code>属性。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>logging.file，设置文件，可以是绝对路径，也可以是相对路径。如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.file=my.log</code></li><li>logging.path，设置目录，会在该目录下创建spring.log文件，并写入日志内容，如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.path=/var/log</code></li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">日志文件会在10Mb大小的时候被截断，产生新的日志文件，默认级别为：ERROR、WARN、INFO</strong></p><h2 id=\"级别控制\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#级别控制\" class=\"headerlink\" title=\"级别控制\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>级别控制</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中只需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中进行配置完成日志记录的级别控制。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">配置格式：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.*=LEVEL</code></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level</code>：日志级别控制前缀，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">*</code>为包名或Logger名</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">LEVEL</code>：选项TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">举例：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.com.didispace=DEBUG</code>：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace</code>包下所有class以DEBUG级别输出</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.root=WARN</code>：root日志以WARN级别输出</li></ul><h2 id=\"自定义日志配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#自定义日志配置\" class=\"headerlink\" title=\"自定义日志配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>自定义日志配置</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">由于日志服务一般都在ApplicationContext创建前就初始化了，它并不是必须通过Spring的配置文件控制。因此通过系统属性和传统的Spring Boot外部配置文件依然可以很好的支持日志控制和管理。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">根据不同的日志系统，你可以按如下规则组织配置文件名，就能被正确加载：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Logback：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logback-spring.xml</code>,&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logback-spring.groovy</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logback.xml</code>,&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logback.groovy</code></li><li>Log4j：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j-spring.properties</code>,&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j-spring.xml</code>,<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j.properties</code>,&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j.xml</code></li><li>Log4j2：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j2-spring.xml</code>,&nbsp;<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j2.xml</code></li><li>JDK (Java Util Logging)：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.properties</code></li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">Spring Boot官方推荐优先使用带有<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">-spring</code>的文件名作为你的日志配置（如使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">logback-spring.xml</code>，而不是<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">logback.xml</code>）</strong></p><h2 id=\"自定义输出格式\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog/#自定义输出格式\" class=\"headerlink\" title=\"自定义输出格式\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>自定义输出格式</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中可以通过在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>配置如下参数控制输出格式：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>logging.pattern.console：定义输出到控制台的样式（不支持JDK Logger）</li><li>logging.pattern.file：定义输出到文件的样式（不支持JDK Logger）</li></ul><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('103', 'Spring Boot中使用Redis数据库', 'Spring Boot中除了对常用的关系型数据库提供了优秀的自动化支持之外，对于很多NoSQL数据库一样提供了自动化配置的支持，包括：Redis, MongoDB, Elasticsearch, Solr和Cassandra。使用RedisRedis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦', '2016-10-27 19:31:21', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot中除了对常用的关系型数据库提供了优秀的自动化支持之外，对于很多NoSQL数据库一样提供了自动化配置的支持，包括：Redis, MongoDB, Elasticsearch, Solr和Cassandra。</p><h2 id=\"使用Redis\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootredis/#使用Redis\" class=\"headerlink\" title=\"使用Redis\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用Redis</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><a href=\"http://redis.io/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Redis官网</a></li><li><a href=\"http://www.redis.cn/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Redis中文社区</a></li></ul><h4 id=\"引入依赖\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootredis/#引入依赖\" class=\"headerlink\" title=\"引入依赖\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入依赖</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot提供的数据访问框架Spring Data Redis基于Jedis。可以通过引入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-redis</code>来配置依赖关系。</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-redis<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"参数配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootredis/#参数配置\" class=\"headerlink\" title=\"参数配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>参数配置</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">按照惯例在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中加入Redis服务端的相关配置，具体说明如下：</p><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p># REDIS (RedisProperties)</p><p># Redis数据库索引（默认为0）</p><p>spring.redis.database=0</p><p># Redis服务器地址</p><p>spring.redis.host=localhost</p><p># Redis服务器连接端口</p><p>spring.redis.port=6379</p><p># Redis服务器连接密码（默认为空）</p><p>spring.redis.password=</p><p># 连接池最大连接数（使用负值表示没有限制）</p><p>spring.redis.pool.max-active=8</p><p># 连接池最大阻塞等待时间（使用负值表示没有限制）</p><p>spring.redis.pool.max-wait=-1</p><p># 连接池中的最大空闲连接</p><p>spring.redis.pool.max-idle=8</p><p># 连接池中的最小空闲连接</p><p>spring.redis.pool.min-idle=0</p><p># 连接超时时间（毫秒）</p><p>spring.redis.timeout=0</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">其中spring.redis.database的配置通常使用0即可，Redis在配置的时候可以设置数据库数量，默认为16，可以理解为数据库的schema</strong></p><h4 id=\"测试访问\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootredis/#测试访问\" class=\"headerlink\" title=\"测试访问\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>测试访问</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过编写测试用例，举例说明如何访问Redis。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> StringRedisTemplate stringRedisTemplate;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 保存字符串</span></p><p>		stringRedisTemplate.opsForValue().set(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaa&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;111&quot;</span>);</p><p>		Assert.assertEquals(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;111&quot;</span>, stringRedisTemplate.opsForValue().get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;aaa&quot;</span>));</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面这段极为简单的测试案例演示了如何通过自动配置的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">StringRedisTemplate</code>对象进行Redis的读写操作，该对象从命名中就可注意到支持的是String类型。如果有使用过spring-data-redis的开发者一定熟悉<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RedisTemplate&lt;K, V&gt;</code>接口，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">StringRedisTemplate</code>就相当于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RedisTemplate&lt;String, String&gt;</code>的实现。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了String类型，实战中我们还经常会在Redis中存储对象，这时候我们就会想是否可以使用类似<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RedisTemplate&lt;String, User&gt;</code>来初始化并进行操作。但是Spring Boot并支持直接使用，需要我们自己实现<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RedisSerializer&lt;T&gt;</code>接口来对传入对象进行序列化和反序列化，下面我们通过一个实例来完成对象的读写操作。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建要存储的对象：User</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">implements</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Serializable</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">final</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> serialVersionUID = -<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1L</span>;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String username;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">User</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String username, Integer age)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.username = username;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.age = age;</p><p>}</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>实现对象的序列化接口</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p><p>36</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">RedisObjectSerializer</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">implements</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">RedisSerializer</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Object</span>&gt; </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Converter&lt;Object, <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[]&gt; serializer = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> SerializingConverter();</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Converter&lt;<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[], Object&gt; deserializer = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> DeserializingConverter();</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">final</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[] EMPTY_ARRAY = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">0</span>];</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> Object <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">deserialize</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[] bytes)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">if</span> (isEmpty(bytes)) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span>;</p><p>}</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">try</span> {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> deserializer.convert(bytes);</p><p>} <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">catch</span> (Exception ex) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throw</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> SerializationException(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Cannot deserialize&quot;</span>, ex);</p><p>}</p><p>}</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[] serialize(Object object) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">if</span> (object == <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span>) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> EMPTY_ARRAY;</p><p>}</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">try</span> {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> serializer.convert(object);</p><p>} <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">catch</span> (Exception ex) {</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> EMPTY_ARRAY;</p><p>}</p><p>}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">boolean</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">isEmpty</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">byte</span>[] data)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> (data == <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span> || data.length == <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">0</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>配置针对User的RedisTemplate实例</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">RedisConfig</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">JedisConnectionFactory <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">jedisConnectionFactory</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> JedisConnectionFactory();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> RedisTemplate&lt;String, User&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">redisTemplate</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(RedisConnectionFactory factory)</span> </span>{</p><p>RedisTemplate&lt;String, User&gt; template = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> RedisTemplate&lt;String, User&gt;();</p><p>template.setConnectionFactory(jedisConnectionFactory());</p><p>template.setKeySerializer(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> StringRedisSerializer());</p><p>template.setValueSerializer(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> RedisObjectSerializer());</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> template;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>完成了配置工作后，编写测试用例实验效果</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> RedisTemplate&lt;String, User&gt; redisTemplate;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 保存对象</span></p><p>		User user = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;超人&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>);</p><p>		redisTemplate.opsForValue().set(user.getUsername(), user);</p><p>		user = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;蝙蝠侠&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>);</p><p>		redisTemplate.opsForValue().set(user.getUsername(), user);</p><p>		user = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;蜘蛛侠&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>);</p><p>		redisTemplate.opsForValue().set(user.getUsername(), user);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>, redisTemplate.opsForValue().get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;超人&quot;</span>).getAge().longValue());</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>, redisTemplate.opsForValue().get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;蝙蝠侠&quot;</span>).getAge().longValue());</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>, redisTemplate.opsForValue().get(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;蜘蛛侠&quot;</span>).getAge().longValue());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">当然spring-data-redis中提供的数据操作远不止这些，本文仅作为在Spring Boot中使用redis时的配置参考，更多对于redis的操作使用，请参考<a href=\"http://docs.spring.io/spring-data/redis/docs/1.6.2.RELEASE/reference/html/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring-data-redis Reference</a>。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">本文完整示例chapter3-2-5</a></li></ul><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('104', 'Spring Boot中使用MongoDB数据库', '前段时间分享了关于Spring Boot中使用Redis的文章，除了Redis之后，我们在互联网产品中还经常会用到另外一款著名的NoSQL数据库MongoDB。下面就来简单介绍一下MongoDB，并且通过一个例子来介绍Spring Boot中对MongoDB访问的配置和使用。MongoDB简介MongoDB是', '2016-10-27 19:31:42', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">前段时间分享了关于<a href=\"http://blog.didispace.com/springbootredis/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot中使用Redis</a>的文章，除了Redis之后，我们在互联网产品中还经常会用到另外一款著名的NoSQL数据库MongoDB。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面就来简单介绍一下MongoDB，并且通过一个例子来介绍Spring Boot中对MongoDB访问的配置和使用。</p><h2 id=\"MongoDB简介\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmongodb/#MongoDB简介\" class=\"headerlink\" title=\"MongoDB简介\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>MongoDB简介</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">MongoDB是一个基于分布式文件存储的数据库，它是一个介于关系数据库和非关系数据库之间的产品，其主要目标是在键/值存储方式（提供了高性能和高度伸缩性）和传统的RDBMS系统（具有丰富的功能）之间架起一座桥梁，它集两者的优势于一身。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">MongoDB支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型，也因为他的存储格式也使得它所存储的数据在Nodejs程序应用中使用非常流畅。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">既然称为NoSQL数据库，Mongo的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">但是，MongoDB也不是万能的，同MySQL等关系型数据库相比，它们在针对不同的数据类型和事务要求上都存在自己独特的优势。在数据存储的选择中，坚持多样化原则，选择更好更经济的方式，而不是自上而下的统一化。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">较常见的，我们可以直接用MongoDB来存储键值对类型的数据，如：验证码、Session等；由于MongoDB的横向扩展能力，也可以用来存储数据规模会在未来变的非常巨大的数据，如：日志、评论等；由于MongoDB存储数据的弱类型，也可以用来存储一些多变json数据，如：与外系统交互时经常变化的JSON报文。而对于一些对数据有复杂的高事务性要求的操作，如：账户交易等就不适合使用MongoDB来存储。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"https://www.mongodb.org/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">MongoDB官网</a></p><h2 id=\"访问MongoDB\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmongodb/#访问MongoDB\" class=\"headerlink\" title=\"访问MongoDB\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>访问MongoDB</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中，对如此受欢迎的MongoDB，同样提供了自配置功能。</p><h4 id=\"引入依赖\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmongodb/#引入依赖\" class=\"headerlink\" title=\"引入依赖\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入依赖</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring Boot中可以通过在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-data-mongodb</code>引入对mongodb的访问支持依赖。它的实现依赖<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-mongodb</code>。是的，您没有看错，又是<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data</code>的子项目，之前介绍过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-jpa</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-redis</code>，对于mongodb的访问，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data</code>也提供了强大的支持，下面就开始动手试试吧。</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"快速开始使用Spring-data-mongodb\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmongodb/#快速开始使用Spring-data-mongodb\" class=\"headerlink\" title=\"快速开始使用Spring-data-mongodb\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>快速开始使用Spring-data-mongodb</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">若MongoDB的安装配置采用默认端口，那么在自动配置的情况下，我们不需要做任何参数配置，就能马上连接上本地的MongoDB。下面直接使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-mongodb</code>来尝试对mongodb的存取操作。（记得mongod启动您的mongodb）</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建要存储的User实体，包含属性：id、username、age</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Id</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String username;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">User</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(Long id, String username, Integer age)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.id = id;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.username = username;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.age = age;</p><p>}</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>实现User的数据访问对象：UserRepository</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">MongoRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByUsername</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String username)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在单元测试中调用</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p><p>34</p><p>35</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">setUp</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>		userRepository.deleteAll();</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 创建三个User，并验证User总数</span></p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1L</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;didi&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2L</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;mama&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3L</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;kaka&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">50</span>));</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3</span>, userRepository.findAll().size());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 删除一个User，再验证User总数</span></p><p>		User u = userRepository.findOne(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1L</span>);</p><p>		userRepository.delete(u);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2</span>, userRepository.findAll().size());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 删除一个User，再验证User总数</span></p><p>		u = userRepository.findByUsername(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;mama&quot;</span>);</p><p>		userRepository.delete(u);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>, userRepository.findAll().size());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><h4 id=\"参数配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmongodb/#参数配置\" class=\"headerlink\" title=\"参数配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>参数配置</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面的例子，我们可以轻而易举的对MongoDB进行访问，但是实战中，应用服务器与MongoDB通常不会部署于同一台设备之上，这样就无法使用自动化的本地配置来进行使用。这个时候，我们也可以方便的配置来完成支持，只需要在application.properties中加入mongodb服务端的相关配置，具体示例如下：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.data.mongodb.uri=mongodb://name:pass@localhost:27017/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><em style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline;\">在尝试此配置时，记得在mongo中对test库创建具备读写权限的用户（用户名为name，密码为pass），不同版本的用户创建语句不同，注意查看文档做好准备工作</em></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">若使用mongodb 2.x，也可以通过如下参数配置，该方式不支持mongodb 3.x。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.data.mongodb.host=localhost spring.data.mongodb.port=27017</p></pre></td></tr></tbody></table></figure></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('105', 'Spring Boot中Web应用的统一异常处理', '我们在做Web应用的时候，请求处理过程中发生错误是非常常见的情况。Spring Boot提供了一个默认的映射：/error，当处理中抛出异常之后，会转到该请求中处理，并且该请求有一个全局的错误页面用来展示异常内容。选择一个之前实现过的Web应用（Chapter3-1-2）为基础，启动该应用，访问一个不存在的U', '2016-10-27 19:32:07', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们在做Web应用的时候，请求处理过程中发生错误是非常常见的情况。Spring Boot提供了一个默认的映射：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/error</code>，当处理中抛出异常之后，会转到该请求中处理，并且该请求有一个全局的错误页面用来展示异常内容。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">选择一个之前实现过的Web应用（<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter3-1-2\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-1-2</a>）为基础，启动该应用，访问一个不存在的URL，或是修改处理内容，直接抛出异常，如：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/hello&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">hello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throw</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Exception(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;发生错误&quot;</span>);</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">此时，可以看到类似下面的报错页面，该页面就是Spring Boot提供的默认error映射页面。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/content/images/2016/04/241FA8A7-2493-44B9-A0A3-79849656074A.png\" title=\"alt=默认的错误页面\" class=\"gallery-item\" lg-event-uid=\"&amp;1\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/04/241FA8A7-2493-44B9-A0A3-79849656074A.png\" alt=\"alt=默认的错误页面\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">alt=默认的错误页面</span></p><h2 id=\"统一异常处理\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootexception/#统一异常处理\" class=\"headerlink\" title=\"统一异常处理\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>统一异常处理</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">虽然，Spring Boot中实现了默认的error映射，但是在实际应用中，上面你的错误页面对用户来说并不够友好，我们通常需要去实现我们自己的异常提示。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面我们以之前的Web应用例子为基础（<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter3-1-2\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-1-2</a>），进行统一异常处理的改造。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建全局异常处理类：通过使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ControllerAdvice</code>定义统一的异常处理类，而不是在每个Controller中逐个定义。<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ExceptionHandler</code>用来定义函数针对的异常类型，最后将Exception对象和请求URL映射到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">error.html</code>中</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ControllerAdvice</span></p><p><span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">GlobalExceptionHandler</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">final</span> String DEFAULT_ERROR_VIEW = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;error&quot;</span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ExceptionHandler</span>(value = Exception.class)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> ModelAndView <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">defaultErrorHandler</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(HttpServletRequest req, Exception e)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>ModelAndView mav = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> ModelAndView();</p><p>mav.addObject(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;exception&quot;</span>, e);</p><p>mav.addObject(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;url&quot;</span>, req.getRequestURL());</p><p>mav.setViewName(DEFAULT_ERROR_VIEW);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> mav;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>实现<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">error.html</code>页面展示：在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">templates</code>目录下创建<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">error.html</code>，将请求的URL和Exception对象的message输出。</li></ul><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">lang</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;en&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">meta</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">charset</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;UTF-8&quot;</span> /&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span>统一异常处理<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span>Error Handler<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${url}&quot;</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:text</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${exception.message}&quot;</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">启动该应用，访问：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/hello</code>，可以看到如下错误提示页面。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/content/images/2016/05/8C9EACEE-9F7C-42F3-85D1-B5CAD746FA86.png\" title=\"alt=自定义的错误页面\" class=\"gallery-item\" lg-event-uid=\"&amp;2\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/content/images/2016/05/8C9EACEE-9F7C-42F3-85D1-B5CAD746FA86.png\" alt=\"alt=自定义的错误页面\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a><span class=\"caption\" style=\"margin: 0.5em 0px 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; font-size: 0.9em; vertical-align: baseline; color: rgb(153, 153, 153); display: block; position: relative; text-align: center;\">alt=自定义的错误页面</span></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><em style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline;\">通过实现上述内容之后，我们只需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Controller</code>中抛出<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Exception</code>，当然我们可能会有多种不同的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Exception</code>。然后在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ControllerAdvice</code>类中，根据抛出的具体<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Exception</code>类型匹配<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ExceptionHandler</code>中配置的异常类型来匹配错误映射和处理。</em></p><h2 id=\"返回JSON格式\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootexception/#返回JSON格式\" class=\"headerlink\" title=\"返回JSON格式\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>返回JSON格式</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在上述例子中，通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ControllerAdvice</code>统一定义不同Exception映射到不同错误处理页面。而当我们要实现RESTful API时，返回的错误是JSON格式的数据，而不是HTML页面，这时候我们也能轻松支持。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本质上，只需在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ExceptionHandler</code>之后加入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@ResponseBody</code>，就能让处理函数return的内容转换为JSON格式。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面以一个具体示例来实现返回JSON格式的异常处理。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建统一的JSON返回对象，code：消息类型，message：消息内容，url：请求的url，data：请求返回的数据</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ErrorInfo</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">T</span>&gt; </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">final</span> Integer OK = <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">0</span>;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">final</span> Integer ERROR = <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">100</span>;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer code;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String message;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String url;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> T data;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建一个自定义异常，用来实验捕获该异常，并返回json</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">MyException</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Exception</span> </span>{</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">MyException</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String message)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">super</span>(message);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Controller</code>中增加json映射，抛出<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">MyException</code>异常</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Controller</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/json&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">json</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> MyException </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throw</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> MyException(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;发生错误2&quot;</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">MyException</code>异常创建对应的处理</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ControllerAdvice</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">GlobalExceptionHandler</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ExceptionHandler</span>(value = MyException.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ResponseBody</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> ErrorInfo&lt;String&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">jsonErrorHandler</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(HttpServletRequest req, MyException e)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>ErrorInfo&lt;String&gt; r = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> ErrorInfo&lt;&gt;();</p><p>r.setMessage(e.getMessage());</p><p>r.setCode(ErrorInfo.ERROR);</p><p>r.setData(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Some Data&quot;</span>);</p><p>r.setUrl(req.getRequestURL().toString());</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> r;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>启动应用，访问：<a href=\"http://localhost:8080/json%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BE%97%E5%88%B0%E5%A6%82%E4%B8%8B%E8%BF%94%E5%9B%9E%E5%86%85%E5%AE%B9%EF%BC%9A\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://localhost:8080/json，可以得到如下返回内容：</a></li></ul><p><figure class=\"highlight javascript\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>{</p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">code</span>: <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">100</span>，</p><p>data: <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Some Data&quot;</span>，</p><p>message: <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;发生错误2&quot;</span>，</p><p>url: <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://localhost:8080/json&quot;</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">至此，已完成在Spring Boot中创建统一的异常处理，实际实现还是依靠Spring MVC的注解，更多更深入的使用可参考Spring MVC的文档。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文完整示例：<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">chapter3-1-6</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('106', 'Spring Boot属性配置文件详解', '相信很多人选择Spring Boot主要是考虑到它既能兼顾Spring的强大功能，还能实现快速开发的便捷。我们在Spring Boot使用过程中，最直观的感受就是没有了原来自己整合Spring应用时繁多的XML配置内容，替代它的是在pom.xml中引入模块化的Starter POMs，其中各个模块都有自己的默', '2016-10-27 19:32:30', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">相信很多人选择Spring Boot主要是考虑到它既能兼顾Spring的强大功能，还能实现快速开发的便捷。我们在Spring Boot使用过程中，最直观的感受就是没有了原来自己整合Spring应用时繁多的XML配置内容，替代它的是在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入模块化的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Starter POMs</code>，其中各个模块都有自己的默认配置，所以如果不是特殊应用场景，就只需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中完成一些属性配置就能开启各模块的应用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在之前的各篇文章中都有提及关于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>的使用，主要用来配置数据库连接、日志相关配置等。除了这些配置内容之外，本文将具体介绍一些在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>配置中的其他特性和使用方法。</p><h2 id=\"自定义属性与加载\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproperties/#自定义属性与加载\" class=\"headerlink\" title=\"自定义属性与加载\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>自定义属性与加载</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们在使用Spring Boot的时候，通常也需要定义一些自己使用的属性，我们可以如下方式直接定义：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>com.didispace.blog.name=程序猿DD</p><p>com.didispace.blog.title=Spring Boot教程</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">然后通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Value(&quot;${属性名}&quot;)</code>注解来加载对应的配置属性，具体如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">BlogProperties</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Value</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${com.didispace.blog.name}&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Value</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${com.didispace.blog.title}&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String title;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">按照惯例，通过单元测试来验证BlogProperties中的属性是否已经根据配置文件加载了。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> BlogProperties blogProperties;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">getHello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		Assert.assertEquals(blogProperties.getName(), <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;程序猿DD&quot;</span>);</p><p>		Assert.assertEquals(blogProperties.getTitle(), <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Spring Boot教程&quot;</span>);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><h2 id=\"参数间的引用\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproperties/#参数间的引用\" class=\"headerlink\" title=\"参数间的引用\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>参数间的引用</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中的各个参数之间也可以直接引用来使用，就像下面的设置：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>com.didispace.blog.name=程序猿DD</p><p>com.didispace.blog.title=Spring Boot教程</p><p>com.didispace.blog.desc=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${com.didispace.blog.name}</span>正在努力写《<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${com.didispace.blog.title}</span>》</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace.blog.desc</code>参数引用了上文中定义的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">name</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">title</code>属性，最后该属性的值就是<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">程序猿DD正在努力写《Spring Boot教程》</code>。</p><h2 id=\"使用随机数\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproperties/#使用随机数\" class=\"headerlink\" title=\"使用随机数\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用随机数</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在一些情况下，有些参数我们需要希望它不是一个固定的值，比如密钥、服务端口等。Spring Boot的属性配置文件中可以通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">${random}</code>来产生int值、long值或者string字符串，来支持属性的随机值。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># 随机字符串</span></p><p>com.didispace.blog.value=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${random.value}</span></p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># 随机int</span></p><p>com.didispace.blog.number=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${random.int}</span></p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># 随机long</span></p><p>com.didispace.blog.bignumber=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${random.long}</span></p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># 10以内的随机数</span></p><p>com.didispace.blog.test1=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${random.int(10)}</span></p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># 10-20的随机数</span></p><p>com.didispace.blog.test2=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${random.int[10,20]}</span></p></pre></td></tr></tbody></table></figure></p><h2 id=\"通过命令行设置属性值\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproperties/#通过命令行设置属性值\" class=\"headerlink\" title=\"通过命令行设置属性值\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>通过命令行设置属性值</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">相信使用过一段时间Spring Boot的用户，一定知道这条命令：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">java -jar xxx.jar --server.port=8888</code>，通过使用–server.port属性来设置xxx.jar应用的端口为8888。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在命令行运行时，连续的两个减号<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">--</code>就是对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中的属性值进行赋值的标识。所以，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">java -jar xxx.jar --server.port=8888</code>命令，等价于我们在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中添加属性<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">server.port=8888</code>，该设置在样例工程中可见，读者可通过删除该值或使用命令行来设置该值来验证。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过命令行来修改属性值固然提供了不错的便利性，但是通过命令行就能更改应用运行的参数，那岂不是很不安全？是的，所以Spring Boot也贴心的提供了屏蔽命令行访问属性的设置，只需要这句设置就能屏蔽：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">SpringApplication.setAddCommandLineProperties(false)</code>。</p><h2 id=\"多环境配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootproperties/#多环境配置\" class=\"headerlink\" title=\"多环境配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>多环境配置</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们在开发Spring Boot应用时，通常同一套程序会被应用和安装到几个不同的环境，比如：开发、测试、生产等。其中每个环境的数据库地址、服务器端口等等配置都会不同，如果在为不同环境打包时都要频繁修改配置文件的话，那必将是个非常繁琐且容易发生错误的事。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于多环境的配置，各种项目构建工具或是框架的基本思路是一致的，通过配置多份不同环境的配置文件，再通过打包命令指定需要打包的内容之后进行区分打包，Spring Boot也不例外，或者说更加简单。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中多环境配置文件名需要满足<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-{profile}.properties</code>的格式，其中<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">{profile}</code>对应你的环境标识，比如：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>：开发环境</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-test.properties</code>：测试环境</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-prod.properties</code>：生产环境</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">至于哪个具体的配置文件会被加载，需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.profiles.active</code>属性来设置，其值对应<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">{profile}</code>值。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.profiles.active=test</code>就会加载<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-test.properties</code>配置文件内容</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面，以不同环境配置不同的服务端口为例，进行样例实验。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">针对各环境新建不同的配置文件<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-test.properties</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-prod.properties</code></p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">在这三个文件均都设置不同的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">server.port</code>属性，如：dev环境设置为1111，test环境设置为2222，prod环境设置为3333</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">application.properties中设置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.profiles.active=dev</code>，就是说默认以dev环境设置</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">测试不同配置的加载</p></li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li>执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">java -jar xxx.jar</code>，可以观察到服务端口被设置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">1111</code>，也就是默认的开发环境（dev）</li><li>执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">java -jar xxx.jar --spring.profiles.active=test</code>，可以观察到服务端口被设置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">2222</code>，也就是测试环境的配置（test）</li><li>执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">java -jar xxx.jar --spring.profiles.active=prod</code>，可以观察到服务端口被设置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">3333</code>，也就是生产环境的配置（prod）</li></ul></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">按照上面的实验，可以如下总结多环境的配置思路：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中配置通用内容，并设置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.profiles.active=dev</code>，以开发环境为默认配置</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-{profile}.properties</code>中配置各个环境不同的内容</li><li>通过命令行方式去激活不同环境的配置</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例chapter2-1-1</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('107', 'Spring Boot中使用@Async实现异步调用', '什么是“异步调用”？“异步调用”对应的是“同步调用”，同步调用指程序按照定义顺序依次执行，每一行程序都必须等待上一行程序执行完成之后才能执行；异步调用指程序在顺序执行时，不等待异步调用的语句返回结果就执行后面的程序。同步调用下面通过一个简单示例来直观的理解什么是同步调用：定义Task类，创建三个处理函数分别模', '2016-10-27 19:32:55', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">什么是“异步调用”？</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">“异步调用”对应的是“同步调用”，<em style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline;\">同步调用</em>指程序按照定义顺序依次执行，每一行程序都必须等待上一行程序执行完成之后才能执行；<em style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-family: inherit; vertical-align: baseline;\">异步调用</em>指程序在顺序执行时，不等待异步调用的语句返回结果就执行后面的程序。</p><h4 id=\"同步调用\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootasync/#同步调用\" class=\"headerlink\" title=\"同步调用\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>同步调用</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面通过一个简单示例来直观的理解什么是同步调用：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>定义Task类，创建三个处理函数分别模拟三个执行任务的操作，操作消耗时间随机取（10秒内）</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Task</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> Random random =<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Random();</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskOne</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;开始做任务一&quot;</span>);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> start = System.currentTimeMillis();</p><p>Thread.sleep(random.nextInt(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10000</span>));</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> end = System.currentTimeMillis();</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;完成任务一，耗时：&quot;</span> + (end - start) + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;毫秒&quot;</span>);</p><p>}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskTwo</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;开始做任务二&quot;</span>);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> start = System.currentTimeMillis();</p><p>Thread.sleep(random.nextInt(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10000</span>));</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> end = System.currentTimeMillis();</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;完成任务二，耗时：&quot;</span> + (end - start) + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;毫秒&quot;</span>);</p><p>}</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskThree</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;开始做任务三&quot;</span>);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> start = System.currentTimeMillis();</p><p>Thread.sleep(random.nextInt(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10000</span>));</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> end = System.currentTimeMillis();</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;完成任务三，耗时：&quot;</span> + (end - start) + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;毫秒&quot;</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在单元测试用例中，注入Task对象，并在测试用例中执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskOne</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskTwo</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskThree</code>三个函数。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(classes = Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Task task;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		task.doTaskOne();</p><p>		task.doTaskTwo();</p><p>		task.doTaskThree();</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>执行单元测试，可以看到类似如下输出：</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>开始做任务一</p><p>完成任务一，耗时：4256毫秒</p><p>开始做任务二</p><p>完成任务二，耗时：4957毫秒</p><p>开始做任务三</p><p>完成任务三，耗时：7173毫秒</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">任务一、任务二、任务三顺序的执行完了，换言之<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskOne</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskTwo</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskThree</code>三个函数顺序的执行完成。</p><h4 id=\"异步调用\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootasync/#异步调用\" class=\"headerlink\" title=\"异步调用\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>异步调用</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">上述的同步调用虽然顺利的执行完了三个任务，但是可以看到执行时间比较长，若这三个任务本身之间不存在依赖关系，可以并发执行的话，同步调用在执行效率方面就比较差，可以考虑通过异步调用的方式来并发执行。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中，我们只需要通过使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Async</code>注解就能简单的将原来的同步函数变为异步函数，Task类改在为如下模式：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Task</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Async</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskOne</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 同上内容，省略</span></p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Async</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskTwo</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 同上内容，省略</span></p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Async</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskThree</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 同上内容，省略</span></p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了让@Async注解能够生效，还需要在Spring Boot的主程序中配置@EnableAsync，如下所示：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringBootApplication</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableAsync</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Application</span> </span>{</p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">main</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String[] args)</span> </span>{</p><p>		SpringApplication.run(Application.class, args);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">此时可以反复执行单元测试，您可能会遇到各种不同的结果，比如：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>没有任何任务相关的输出</li><li>有部分任务相关的输出</li><li>乱序的任务相关的输出</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">原因是目前<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskOne</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskTwo</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskThree</code>三个函数的时候已经是异步执行了。主程序在异步调用之后，主程序并不会理会这三个函数是否执行完成了，由于没有其他需要执行的内容，所以程序就自动结束了，导致了不完整或是没有输出任务相关内容的情况。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">注： @Async所修饰的函数不要定义为static类型，这样异步调用不会生效</strong></p><h4 id=\"异步回调\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootasync/#异步回调\" class=\"headerlink\" title=\"异步回调\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>异步回调</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了让<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskOne</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskTwo</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskThree</code>能正常结束，假设我们需要统计一下三个任务并发执行共耗时多少，这就需要等到上述三个函数都完成调动之后记录时间，并计算结果。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">那么我们如何判断上述三个异步调用是否已经执行完成呢？我们需要使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Future&lt;T&gt;</code>来返回异步调用的结果，就像如下方式改造<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">doTaskOne</code>函数：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Async</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> Future&lt;String&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doTaskOne</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;开始做任务一&quot;</span>);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> start = System.currentTimeMillis();</p><p>Thread.sleep(random.nextInt(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10000</span>));</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> end = System.currentTimeMillis();</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;完成任务一，耗时：&quot;</span> + (end - start) + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;毫秒&quot;</span>);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> AsyncResult&lt;&gt;(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;任务一完成&quot;</span>);</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">按照如上方式改造一下其他两个异步函数之后，下面我们改造一下测试用例，让测试在等待完成三个异步调用之后来做一些其他事情。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> start = System.currentTimeMillis();</p><p>	Future&lt;String&gt; task1 = task.doTaskOne();</p><p>	Future&lt;String&gt; task2 = task.doTaskTwo();</p><p>	Future&lt;String&gt; task3 = task.doTaskThree();</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">while</span>(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span>) {</p><p>		<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">if</span>(task1.isDone() &amp;&amp; task2.isDone() &amp;&amp; task3.isDone()) {</p><p>			<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 三个任务都调用完成，退出循环等待</span></p><p>			<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">break</span>;</p><p>		}</p><p>		Thread.sleep(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1000</span>);</p><p>	}</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">long</span> end = System.currentTimeMillis();</p><p>	System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;任务全部完成，总耗时：&quot;</span> + (end - start) + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;毫秒&quot;</span>);</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">看看我们做了哪些改变：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在测试用例一开始记录开始时间</li><li>在调用三个异步函数的时候，返回<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Future&lt;String&gt;</code>类型的结果对象</li><li>在调用完三个异步函数之后，开启一个循环，根据返回的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Future&lt;String&gt;</code>对象来判断三个异步函数是否都结束了。若都结束，就结束循环；若没有都结束，就等1秒后再判断。</li><li>跳出循环之后，根据结束时间 - 开始时间，计算出三个任务并发执行的总耗时。</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">执行一下上述的单元测试，可以看到如下结果：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>开始做任务一</p><p>开始做任务二</p><p>开始做任务三</p><p>完成任务三，耗时：37毫秒</p><p>完成任务二，耗时：3661毫秒</p><p>完成任务一，耗时：7149毫秒</p><p>任务全部完成，总耗时：8025毫秒</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到，通过异步调用，让任务一、二、三并发执行，有效的减少了程序的总运行时间。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例Chapter4-1-2</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('108', 'Spring Boot中对log4j进行多环境不同日志级别的控制', '之前介绍了在《Spring boot中使用log4j记录日志》，仅通过log4j.properties对日志级别进行控制，对于需要多环境部署的环境不是很方便，可能我们在开发环境大部分模块需要采用DEBUG级别，在测试环境可能需要小部分采用DEBUG级别，而在生产环境时我们又希望采用INFO级别。这个时候，我们', '2016-10-27 19:33:15', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">之前介绍了在<a href=\"http://blog.didispace.com/springbootlog4j/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《Spring boot中使用log4j记录日志》</a>，仅通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j.properties</code>对日志级别进行控制，对于需要多环境部署的环境不是很方便，可能我们在开发环境大部分模块需要采用DEBUG级别，在测试环境可能需要小部分采用DEBUG级别，而在生产环境时我们又希望采用INFO级别。这个时候，我们要自己手工编辑<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">log4j.properties</code>文件来调整日志级别，不论在版本库中默认保存哪个环境的级别设定，都会增加其他环境使用人员的工作量，虽然很细微，但是手工修改总不是一件很好的选择，难免会发现修改后误提交等问题。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">那么，有没有办法对于开发人员、运维人员都不需要改变源代码实现不同环境的不同日志级别呢?</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">是否还记得之前在<a href=\"http://blog.didispace.com/springbootproperties/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《Spring Boot属性配置文件详解》</a>一文中，提到的关于Spring Boot多环境的配置以及属性文件中的参数引用？若没有了解过相关内容，建议先阅读该文后继续此篇内容。</p><h4 id=\"尝试改造\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootlog4jmuilt/#尝试改造\" class=\"headerlink\" title=\"尝试改造\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>尝试改造</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">先以<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">chapter4-2-2工程</a>作为基础工程，我们来进行多环境配置的改造。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建多环境配置文件</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>：开发环境</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-test.properties</code>：测试环境</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-prod.properties</code>：生产环境</li></ul><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中添加属性：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.profiles.active=dev</code>（默认激活<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>配置）</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-test.properties</code>配置文件中添加日志级别定义：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.com.didispace=DEBUG</code></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-prod.properties</code>配置文件中添加日志级别定义：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.com.didispace=INFO</code></li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面的定义，根据<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.com.didispace</code>在不同环境的配置文件中定义了不同的级别，但是我们已经把日志交给了log4j管理，看看我们log4j.properties中对com.didispace包下的日志定义是这样的，固定定义了DEBUG级别，并输出到名为didifile定义的appender中。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># LOG4J配置</span></p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.category.com.didispace=DEBUG, didifile</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># com.didispace下的日志输出</span></p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile=org.apache.log4j.DailyRollingFileAppender</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.file=logs/my.log</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.DatePattern=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;.&#39;</span>yyyy-MM-dd</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.layout=org.apache.log4j.PatternLayout</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">那么，要如何动态的改变这个DEBUG级别呢？在<a href=\"http://blog.didispace.com/springbootproperties/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《Spring Boot属性配置文件详解》</a>中还提到了关于配置文件中参数的引用。我们需要将DEBUG替换成<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-{profile}.properties</code>配置文件中定义<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">logging.level.com.didispace</code>即可，所以配置变为如下内容：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># LOG4J配置</span></p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.category.com.didispace=<span class=\"variable\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">${logging.level.com.didispace}</span>, didifile</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># com.didispace下的日志输出</span></p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile=org.apache.log4j.DailyRollingFileAppender</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.file=logs/my.log</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.DatePattern=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;.&#39;</span>yyyy-MM-dd</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.layout=org.apache.log4j.PatternLayout</p><p><span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">log</span>4j.appender.didifile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">到这里我们已经完成了所有配置工作，我们可以通过运行单元测试，然后看my.log文件中输出的日志内容。通过修改默认的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application-dev.properties</code>配置的日志级别为INFO，再运行单元测试的DEBUG内容是否被输出到了my.log中验证参数是否被正确引用了。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于不同环境的使用人员也不需要改变代码或打包文件，只需要通过执行命令中参加参数即可，比如我想采用生产环境的级别，那么我可以这样运行应用：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>java -jar xxx.jar --spring.profiles.active=prod</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例Chapter4-2-3</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('109', 'Spring Boot中使用AOP统一处理Web请求日志', 'AOP为Aspect Oriented Programming的缩写，意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是Spring框架中的一个重要内容，它通过对既有程序定义一个切入点，然后在其前后切入不同的执行内容，比如常见的有：打开数据库连接/关闭数据库连接、打开', '2016-10-27 19:33:44', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">AOP为Aspect Oriented Programming的缩写，意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是Spring框架中的一个重要内容，它通过对既有程序定义一个切入点，然后在其前后切入不同的执行内容，比如常见的有：打开数据库连接/关闭数据库连接、打开事务/关闭事务、记录日志等。基于AOP不会破坏原来程序逻辑，因此它可以很好的对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面主要讲两个内容，一个是如何在Spring Boot中引入Aop功能，二是如何使用Aop做切面去统一处理Web请求的日志。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">以下所有操作基于<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">chapter4-2-2工程</a>进行。</p><h2 id=\"准备工作\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootaoplog/#准备工作\" class=\"headerlink\" title=\"准备工作\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>准备工作</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">因为需要对web请求做切面来记录日志，所以先引入web模块，并创建一个简单的hello请求的处理。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入web模块</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>实现一个简单请求处理：通过传入name参数，返回“hello xxx”的功能。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RestController</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(value = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/hello&quot;</span>, method = RequestMethod.GET)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@ResponseBody</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">hello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@RequestParam String name)</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Hello &quot;</span> + name;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面，我们可以对上面的/hello请求，进行切面日志记录。</p><h2 id=\"引入AOP依赖\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootaoplog/#引入AOP依赖\" class=\"headerlink\" title=\"引入AOP依赖\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入AOP依赖</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中引入AOP就跟引入其他模块一样，非常简单，只需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入如下依赖：</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-aop<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成了引入AOP依赖包后，一般来说并不需要去做其他配置。也许在Spring中使用过注解配置方式的人会问是否需要在程序主类中增加<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableAspectJAutoProxy</code>来启用，实际并不需要。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看下面关于AOP的默认配置属性，其中<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.aop.auto</code>属性默认是开启的，也就是说只要引入了AOP依赖后，默认已经增加了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableAspectJAutoProxy</code>。</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># AOP</span></p><p>spring.aop.auto=<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">true</span> <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Add @EnableAspectJAutoProxy.</span></p><p>spring.aop.proxy-target-class=<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span> <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\"># Whether subclass-based (CGLIB) proxies are to be created (true) as</span></p><p>opposed to standard Java interface-based proxies (<span class=\"literal\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>).</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">而当我们需要使用CGLIB来实现AOP的时候，需要配置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.aop.proxy-target-class=true</code>，不然默认使用的是标准Java的实现。</p><h2 id=\"实现Web层的日志切面\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootaoplog/#实现Web层的日志切面\" class=\"headerlink\" title=\"实现Web层的日志切面\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>实现Web层的日志切面</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">实现AOP的切面主要有以下几个要素：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Aspect</code>注解将一个java类定义为切面类</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Pointcut</code>定义一个切入点，可以是一个规则表达式，比如下例中某个package下的所有函数，也可以是一个注解等。</li><li>根据需要在切入点不同位置的切入内容</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Before</code>在切入点开始处切入内容</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@After</code>在切入点结尾处切入内容</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@AfterReturning</code>在切入点return内容之后切入内容（可以用来对处理返回值做一些加工处理）</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Around</code>在切入点前后切入内容，并自己控制何时执行切入点自身的内容</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@AfterThrowing</code>用来处理当切入内容部分抛出异常之后的处理逻辑</li></ul></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Aspect</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">WebLogAspect</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Logger logger = Logger.getLogger(getClass());</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Pointcut</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;execution(public * com.didispace.web..*.*(..))&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">webLog</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>{}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;webLog()&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doBefore</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(JoinPoint joinPoint)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Throwable </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 接收到请求，记录请求内容</span></p><p>ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</p><p>HttpServletRequest request = attributes.getRequest();</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 记录下请求内容</span></p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;URL : &quot;</span> + request.getRequestURL().toString());</p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;HTTP_METHOD : &quot;</span> + request.getMethod());</p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;IP : &quot;</span> + request.getRemoteAddr());</p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;CLASS_METHOD : &quot;</span> + joinPoint.getSignature().getDeclaringTypeName() + <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;.&quot;</span> + joinPoint.getSignature().getName());</p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ARGS : &quot;</span> + Arrays.toString(joinPoint.getArgs()));</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@AfterReturning</span>(returning = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ret&quot;</span>, pointcut = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;webLog()&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doAfterReturning</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(Object ret)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Throwable </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 处理完请求，返回内容</span></p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;RESPONSE : &quot;</span> + ret);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看上面的例子，通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Pointcut</code>定义的切入点为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">com.didispace.web</code>包下的所有函数（对web层所有请求处理做切入点），然后通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Before</code>实现，对请求内容的日志记录（本文只是说明过程，可以根据需要调整内容），最后通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@AfterReturning</code>记录请求返回的对象。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过运行程序并访问：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/hello?name=didi</code>，可以获得下面的日志输出</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>2016-05-19 13:42:13,156 &nbsp;INFO WebLogAspect:41 - URL : http://localhost:8080/hello</p><p>2016-05-19 13:42:13,156 &nbsp;INFO WebLogAspect:42 - HTTP_METHOD : http://localhost:8080/hello</p><p>2016-05-19 13:42:13,157 &nbsp;INFO WebLogAspect:43 - IP : 0:0:0:0:0:0:0:1</p><p>2016-05-19 13:42:13,160 &nbsp;INFO WebLogAspect:44 - CLASS_METHOD : com.didispace.web.HelloController.hello</p><p>2016-05-19 13:42:13,160 &nbsp;INFO WebLogAspect:45 - ARGS : [didi]</p><p>2016-05-19 13:42:13,170 &nbsp;INFO WebLogAspect:52 - RESPONSE:Hello didi</p></pre></td></tr></tbody></table></figure></p><h4 id=\"优化：AOP切面中的同步问题\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootaoplog/#优化：AOP切面中的同步问题\" class=\"headerlink\" title=\"优化：AOP切面中的同步问题\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>优化：AOP切面中的同步问题</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在WebLogAspect切面中，分别通过doBefore和doAfterReturning两个独立函数实现了切点头部和切点返回后执行的内容，若我们想统计请求的处理时间，就需要在doBefore处记录时间，并在doAfterReturning处通过当前时间与开始处记录的时间计算得到请求处理的消耗时间。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">那么我们是否可以在WebLogAspect切面中定义一个成员变量来给doBefore和doAfterReturning一起访问呢？是否会有同步问题呢？</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">的确，直接在这里定义基本类型会有同步问题，所以我们可以引入ThreadLocal对象，像下面这样进行记录：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Aspect</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">WebLogAspect</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Logger logger = Logger.getLogger(getClass());</p><p>ThreadLocal&lt;Long&gt; startTime = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> ThreadLocal&lt;&gt;();</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Pointcut</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;execution(public * com.didispace.web..*.*(..))&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">webLog</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>{}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;webLog()&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doBefore</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(JoinPoint joinPoint)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Throwable </span>{</p><p>startTime.set(System.currentTimeMillis());</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略日志记录内容</span></p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@AfterReturning</span>(returning = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ret&quot;</span>, pointcut = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;webLog()&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">doAfterReturning</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(Object ret)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Throwable </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 处理完请求，返回内容</span></p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;RESPONSE : &quot;</span> + ret);</p><p>logger.info(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;SPEND TIME : &quot;</span> + (System.currentTimeMillis() - startTime.get()));</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><h4 id=\"优化：AOP切面的优先级\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootaoplog/#优化：AOP切面的优先级\" class=\"headerlink\" title=\"优化：AOP切面的优先级\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>优化：AOP切面的优先级</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">由于通过AOP实现，程序得到了很好的解耦，但是也会带来一些问题，比如：我们可能会对Web层做多个切面，校验用户，校验头信息等等，这个时候经常会碰到切面的处理顺序问题。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">所以，我们需要定义每个切面的优先级，我们需要<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(i)</code>注解来标识切面的优先级。<strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">i的值越小，优先级越高</strong>。假设我们还有一个切面是<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">CheckNameAspect</code>用来校验name必须为didi，我们为其设置<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(10)</code>，而上文中WebLogAspect设置为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(5)</code>，所以WebLogAspect有更高的优先级，这个时候执行顺序是这样的：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Before</code>中优先执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(5)</code>的内容，再执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(10)</code>的内容</li><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@After</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@AfterReturning</code>中优先执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(10)</code>的内容，再执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Order(5)</code>的内容</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">所以我们可以这样子总结：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在切入点前的操作，按order的值由小到大执行</li><li>在切入点后的操作，按order的值由大到小执行</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">完整示例Chapter4-2-4</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('110', 'Spring Boot中的事务管理', '什么是事务？我们在开发企业应用时，对于业务人员的一个操作实际是对数据读写的多步操作的结合。由于数据操作在顺序执行的过程中，任何一步操作都有可能发生异常，异常会导致后续操作无法完成，此时由于业务逻辑并未正确的完成，之前成功操作数据的并不可靠，需要在这种情况下进行回退。事务的作用就是为了保证用户的每一个操作都是可', '2016-10-27 19:34:08', '0', '0', '<h2 id=\"什么是事务？\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">什么是事务？</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们在开发企业应用时，对于业务人员的一个操作实际是对数据读写的多步操作的结合。由于数据操作在顺序执行的过程中，任何一步操作都有可能发生异常，异常会导致后续操作无法完成，此时由于业务逻辑并未正确的完成，之前成功操作数据的并不可靠，需要在这种情况下进行回退。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">事务的作用就是为了保证用户的每一个操作都是可靠的，事务中的每一步操作都必须成功执行，只要有发生异常就回退到事务开始未进行操作的状态。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">事务管理是Spring框架中最为常用的功能之一，我们在使用Spring Boot开发应用时，大部分情况下也都需要使用事务。</p><h2 id=\"快速入门\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springboottransactional/#快速入门\" class=\"headerlink\" title=\"快速入门\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>快速入门</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中，当我们使用了spring-boot-starter-jdbc或spring-boot-starter-data-jpa依赖的时候，框架会自动默认分别注入DataSourceTransactionManager或JpaTransactionManager。所以我们不需要任何额外配置就可以用@Transactional注解进行事务的使用。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们以之前实现的《用spring-data-jpa访问数据库》的示例<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter3-2-2\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-2-2</a>作为基础工程进行事务的使用常识。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在该样例工程中（若对该数据访问方式不了解，可先阅读该<a href=\"http://blog.didispace.com/springbootdata2/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">文章</a>），我们引入了spring-data-jpa，并创建了User实体以及对User的数据访问对象UserRepository，在ApplicationTest类中实现了使用UserRepository进行数据读写的单元测试用例，如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 创建10条记录</span></p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;BBB&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;CCC&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DDD&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;EEE&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">50</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;GGG&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">70</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;HHH&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">80</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;III&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">90</span>));</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;JJJ&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">100</span>));</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略后续的一些验证操作</span></p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到，在这个单元测试用例中，使用UserRepository对象连续创建了10个User实体到数据库中，下面我们人为的来制造一些异常，看看会发生什么情况。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过定义User的name属性长度为5，这样通过创建时User实体的name属性超长就可以触发异常产生。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Entity</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Id</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@GeneratedValue</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>, length = <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">5</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Column</span>(nullable = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">false</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略构造函数、getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">修改测试用例中创建记录的语句，将一条记录的name长度超过5，如下：name为HHHHHHHHH的User对象将会抛出异常。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 创建10条记录</span></p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;BBB&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;CCC&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DDD&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;EEE&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">50</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;FFF&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">60</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;GGG&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">70</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;HHHHHHHHHH&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">80</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;III&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">90</span>));</p><p>userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;JJJ&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">100</span>));</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">执行测试用例，可以看到控制台中抛出了如下异常，name字段超长：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>2016-05-27 10:30:35.948 &nbsp;WARN 2660 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : SQL Error: 1406, SQLState: 22001</p><p>2016-05-27 10:30:35.948 ERROR 2660 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : Data truncation: Data too long <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span> column <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;name&#39;</span> at row 1</p><p>2016-05-27 10:30:35.951 &nbsp;WARN 2660 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : SQL Warning Code: 1406, SQLState: HY000</p><p>2016-05-27 10:30:35.951 &nbsp;WARN 2660 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : Data too long <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span> column <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;name&#39;</span> at row 1</p><p>org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">此时查数据库中，创建了name从AAA到GGG的记录，没有HHHHHHHHHH、III、JJJ的记录。而若这是一个希望保证完整性操作的情况下，AAA到GGG的记录希望能在发生异常的时候被回退，这时候就可以使用事务让它实现回退，做法非常简单，我们只需要在test函数上添加<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Transactional</code>注解即可。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Transactional</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略测试内容</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">再来执行该测试用例，可以看到控制台中输出了回滚日志（Rolled back transaction for test context），</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>2016-05-27 10:35:32.210 &nbsp;WARN 5672 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : SQL Error: 1406, SQLState: 22001</p><p>2016-05-27 10:35:32.210 ERROR 5672 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : Data truncation: Data too long <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span> column <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;name&#39;</span> at row 1</p><p>2016-05-27 10:35:32.213 &nbsp;WARN 5672 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : SQL Warning Code: 1406, SQLState: HY000</p><p>2016-05-27 10:35:32.213 &nbsp;WARN 5672 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.h.engine.jdbc.spi.SqlExceptionHelper &nbsp; : Data too long <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span> column <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;name&#39;</span> at row 1</p><p>2016-05-27 10:35:32.221 &nbsp;INFO 5672 --- [ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; main] o.s.t.c.transaction.TransactionContext &nbsp; : Rolled back transaction <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span> <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span> context [DefaultTestContext@1d7a715 <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>Class = ApplicationTests, <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>Instance = com.didispace.ApplicationTests@95a785, <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>Method = <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>@ApplicationTests, <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>Exception = org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement, mergedContextConfiguration = [MergedContextConfiguration@11f39f9 <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span>Class = ApplicationTests, locations = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;{}&#39;</span>, classes = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;{class com.didispace.Application}&#39;</span>, contextInitializerClasses = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;[]&#39;</span>, activeProfiles = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;{}&#39;</span>, propertySourceLocations = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;{}&#39;</span>, propertySourceProperties = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;{}&#39;</span>, contextLoader = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&#39;org.springframework.boot.test.SpringApplicationContextLoader&#39;</span>, parent = [null]]].</p><p>org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; nested exception is org.hibernate.exception.DataException: could not execute statement</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">再看数据库中，User表就没有AAA到GGG的用户数据了，成功实现了自动回滚。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">这里主要通过单元测试演示了如何使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Transactional</code>注解来声明一个函数需要被事务管理，通常我们单元测试为了保证每个测试之间的数据独立，会使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Rollback</code>注解让每个单元测试都能在结束时回滚。而真正在开发业务逻辑时，我们通常在service层接口中使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Transactional</code>来对各个业务逻辑进行事务管理的配置，例如：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserService</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Transactional</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">login</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name, String password)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><h2 id=\"事务详解\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springboottransactional/#事务详解\" class=\"headerlink\" title=\"事务详解\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>事务详解</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">上面的例子中我们使用了默认的事务配置，可以满足一些基本的事务需求，但是当我们项目较大较复杂时（比如，有多个数据源等），这时候需要在声明事务时，指定不同的事务管理器。对于不同数据源的事务管理配置可以见<a href=\"http://blog.didispace.com/springbootmultidatasource/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《Spring Boot多数据源配置与使用》</a>中的设置。在声明事务时，只需要通过value属性指定配置的事务管理器名即可，例如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Transactional(value=&quot;transactionManagerPrimary&quot;)</code>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了指定不同的事务管理器之后，还能对事务进行隔离级别和传播行为的控制，下面分别详细解释：</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">####　隔离级别</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">隔离级别是指若干个并发的事务之间的隔离程度，与我们开发时候主要相关的场景包括：脏读取、重复读、幻读。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们可以看<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.transaction.annotation.Isolation</code>枚举类中定义了五个表示隔离级别的值：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">enum</span> Isolation {</p><p>DEFAULT(-<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>),</p><p>READ_UNCOMMITTED(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>),</p><p>READ_COMMITTED(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2</span>),</p><p>REPEATABLE_READ(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">4</span>),</p><p>SERIALIZABLE(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">8</span>);</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">DEFAULT</code>：这是默认值，表示使用底层数据库的默认隔离级别。对大部分数据库而言，通常这值就是：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">READ_COMMITTED</code>。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">READ_UNCOMMITTED</code>：该隔离级别表示一个事务可以读取另一个事务修改但还没有提交的数据。该级别不能防止脏读和不可重复读，因此很少使用该隔离级别。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">READ_COMMITTED</code>：该隔离级别表示一个事务只能读取另一个事务已经提交的数据。该级别可以防止脏读，这也是大多数情况下的推荐值。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">REPEATABLE_READ</code>：该隔离级别表示一个事务在整个过程中可以多次重复执行某个查询，并且每次返回的记录都相同。即使在多次查询之间有新增的数据满足该查询，这些新增的记录也会被忽略。该级别可以防止脏读和不可重复读。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">SERIALIZABLE</code>：所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，该级别可以防止脏读、不可重复读以及幻读。但是这将严重影响程序的性能。通常情况下也不会用到该级别。</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">指定方法：通过使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">isolation</code>属性设置，例如：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Transactional</span>(isolation = Isolation.DEFAULT)</p></pre></td></tr></tbody></table></figure></p><h4 id=\"传播行为\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springboottransactional/#传播行为\" class=\"headerlink\" title=\"传播行为\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>传播行为</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">所谓事务的传播行为是指，如果在开始当前事务之前，一个事务上下文已经存在，此时有若干选项可以指定一个事务性方法的执行行为。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们可以看<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.transaction.annotation.Propagation</code>枚举类中定义了6个表示传播行为的枚举值：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">enum</span> Propagation {</p><p>REQUIRED(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">0</span>),</p><p>SUPPORTS(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">1</span>),</p><p>MANDATORY(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">2</span>),</p><p>REQUIRES_NEW(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">3</span>),</p><p>NOT_SUPPORTED(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">4</span>),</p><p>NEVER(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">5</span>),</p><p>NESTED(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">6</span>);</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">REQUIRED</code>：如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">SUPPORTS</code>：如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">MANDATORY</code>：如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">REQUIRES_NEW</code>：创建一个新的事务，如果当前存在事务，则把当前事务挂起。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">NOT_SUPPORTED</code>：以非事务方式运行，如果当前存在事务，则把当前事务挂起。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">NEVER</code>：以非事务方式运行，如果当前存在事务，则抛出异常。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">NESTED</code>：如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">REQUIRED</code>。</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">指定方法：通过使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">propagation</code>属性设置，例如：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Transactional</span>(propagation = Propagation.REQUIRED)</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-3-1</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234);\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('111', 'Spring Boot中使用Spring Security进行安全控制', '我们在编写Web应用时，经常需要对页面做一些安全控制，比如：对于没有访问权限的用户需要转到登录表单页面。要实现访问控制的方法多种多样，可以通过Aop、拦截器实现，也可以通过框架实现（如：Apache Shiro、Spring Security）。本文将具体介绍在Spring Boot中如何使用Spring S', '2016-10-27 19:34:31', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们在编写Web应用时，经常需要对页面做一些安全控制，比如：对于没有访问权限的用户需要转到登录表单页面。要实现访问控制的方法多种多样，可以通过Aop、拦截器实现，也可以通过框架实现（如：Apache Shiro、Spring Security）。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文将具体介绍在Spring Boot中如何使用Spring Security进行安全控制。</p><h2 id=\"准备工作\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#准备工作\" class=\"headerlink\" title=\"准备工作\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>准备工作</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">首先，构建一个简单的Web工程，以用于后续添加安全控制，也可以用之前<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-1-2</a>做为基础工程。若对如何使用Spring Boot构建Web应用，可以先阅读<a href=\"http://blog.didispace.com/springbootweb/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《Spring Boot开发Web应用》</a>一文。</p><h4 id=\"Web层实现请求映射\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#Web层实现请求映射\" class=\"headerlink\" title=\"Web层实现请求映射\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Web层实现请求映射</h4><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Controller</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">index</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;index&quot;</span>;</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/hello&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">hello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;hello&quot;</span>;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/</code>：映射到index.html</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/hello</code>：映射到hello.html</li></ul><h4 id=\"实现映射的页面\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#实现映射的页面\" class=\"headerlink\" title=\"实现映射的页面\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>实现映射的页面</h4><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>src/main/resources/templates/index.html</li></ul><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:th</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:sec</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity3&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span>Spring Security入门<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span>欢迎使用Spring Security!<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">p</span>&gt;</span>点击 <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">a</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:href</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;@{/hello}&quot;</span>&gt;</span>这里<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">a</span>&gt;</span> 打个招呼吧<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">p</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>src/main/resources/templates/hello.html</li></ul><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:th</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:sec</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity3&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span>Hello World!<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span>Hello world!<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到在index.html中提供到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/hello</code>的链接，显然在这里没有任何安全控制，所以点击链接后就可以直接跳转到hello.html页面。</p><h2 id=\"整合Spring-Security\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#整合Spring-Security\" class=\"headerlink\" title=\"整合Spring Security\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>整合Spring Security</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在这一节，我们将对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/hello</code>页面进行权限控制，必须是授权用户才能访问。当没有权限的用户访问后，跳转到登录页面。</p><h4 id=\"添加依赖\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#添加依赖\" class=\"headerlink\" title=\"添加依赖\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>添加依赖</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在pom.xml中添加如下配置，引入对Spring Security的依赖。</p><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p><p>...</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-security<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>...</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><h4 id=\"Spring-Security配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#Spring-Security配置\" class=\"headerlink\" title=\"Spring Security配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Spring Security配置</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">创建Spring Security的配置类<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">WebSecurityConfig</code>，具体如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableWebSecurity</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">WebSecurityConfig</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">WebSecurityConfigurerAdapter</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Override</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">protected</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">configure</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(HttpSecurity http)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>http</p><p>.authorizeRequests()</p><p>.antMatchers(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/home&quot;</span>).permitAll()</p><p>.anyRequest().authenticated()</p><p>.and()</p><p>.formLogin()</p><p>.loginPage(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/login&quot;</span>)</p><p>.permitAll()</p><p>.and()</p><p>.logout()</p><p>.permitAll();</p><p>}</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">configureGlobal</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(AuthenticationManagerBuilder auth)</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>auth</p><p>.inMemoryAuthentication()</p><p>.withUser(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;user&quot;</span>).password(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;password&quot;</span>).roles(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;USER&quot;</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableWebSecurity</code>注解开启Spring Security的功能</li><li>继承<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">WebSecurityConfigurerAdapter</code>，并重写它的方法来设置一些web安全的细节</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">configure(HttpSecurity http)</code>方法</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li>通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">authorizeRequests()</code>定义哪些URL需要被保护、哪些不需要被保护。例如以上代码指定了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/home</code>不需要任何认证就可以访问，其他的路径都必须通过身份验证。</li><li>通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">formLogin()</code>定义当需要用户登录时候，转到的登录页面。</li></ul><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">configureGlobal(AuthenticationManagerBuilder auth)</code>方法，在内存中创建了一个用户，该用户的名称为user，密码为password，用户角色为USER。</li></ul><h4 id=\"新增登录请求与页面\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootsecurity/#新增登录请求与页面\" class=\"headerlink\" title=\"新增登录请求与页面\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>新增登录请求与页面</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成了Spring Security配置之后，我们还缺少登录的相关内容。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">HelloController中新增<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/login</code>请求映射至<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">login.html</code></p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Controller</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloController</span> </span>{</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略之前的内容...</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RequestMapping</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;/login&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> String <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">login</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;login&quot;</span>;</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">新增登录页面：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/templates/login.html</code></p><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/1999/xhtml&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:th</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org&quot;</span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:sec</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity3&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span>Spring Security Example <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:if</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${param.error}&quot;</span>&gt;</span></p><p>用户名或密码错</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:if</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;${param.logout}&quot;</span>&gt;</span></p><p>您已注销成功</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">form</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:action</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;@{/login}&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">method</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;post&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">label</span>&gt;</span> 用户名 : <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">input</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">type</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;text&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">name</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;username&quot;</span>/&gt;</span> <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">label</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">label</span>&gt;</span> 密 &nbsp;码 : <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">input</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">type</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;password&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">name</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;password&quot;</span>/&gt;</span> <span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">label</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">input</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">type</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;submit&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">value</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;登录&quot;</span>/&gt;</span><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">div</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">form</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到，实现了一个简单的通过用户名和密码提交到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/login</code>的登录方式。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">根据配置，Spring Security提供了一个过滤器来拦截请求并验证用户身份。如果用户身份认证失败，页面就重定向到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/login?error</code>，并且页面中会展现相应的错误信息。若用户想要注销登录，可以通过访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/login?logout</code>请求，在完成注销之后，页面展现相应的成功消息。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">到这里，我们启用应用，并访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/</code>，可以正常访问。但是访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/hello</code>的时候被重定向到了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/login</code>页面，因为没有登录，用户没有访问权限，通过输入用户名user和密码password进行登录后，跳转到了Hello World页面，再也通过访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:8080/login?logout</code>，就可以完成注销操作。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了让整个过程更完成，我们可以修改<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello.html</code>，让它输出一些内容，并提供“注销”的链接。</p><p><figure class=\"highlight html\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!DOCTYPE html&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/1999/xhtml&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:th</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:sec</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.thymeleaf.org/thymeleaf-extras-springsecurity3&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span>Hello World!<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">title</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">head</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:inline</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;text&quot;</span>&gt;</span>Hello [[${#httpServletRequest.remoteUser}]]!<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">h1</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">form</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">th:action</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;@{/logout}&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">method</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;post&quot;</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">input</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">type</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;submit&quot;</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">value</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;注销&quot;</span>/&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">form</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">body</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">html</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文通过一个最简单的示例完成了对Web应用的安全控制，Spring Security提供的功能还远不止于此，更多Spring Security的使用可参见<a href=\"http://docs.spring.io/spring-security/site/docs/4.1.0.RELEASE/reference/htmlsingle/\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Security Reference</a>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例：<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter4-3-1</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234);\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('112', 'Spring Boot中的缓存支持（一）注解配置与EhCache使用', '随着时间的积累，应用的使用用户不断增加，数据规模也越来越大，往往数据库查询操作会成为影响用户使用体验的瓶颈，此时使用缓存往往是解决这一问题非常好的手段之一。Spring 3开始提供了强大的基于注解的缓存支持，可以通过注解配置方式低侵入的给原有Spring应用增加缓存功能，提高数据访问性能。在Spring Bo', '2016-10-27 19:34:58', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">随着时间的积累，应用的使用用户不断增加，数据规模也越来越大，往往数据库查询操作会成为影响用户使用体验的瓶颈，此时使用缓存往往是解决这一问题非常好的手段之一。Spring 3开始提供了强大的基于注解的缓存支持，可以通过注解配置方式低侵入的给原有Spring应用增加缓存功能，提高数据访问性能。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中对于缓存的支持，提供了一系列的自动化配置，使我们可以非常方便的使用缓存。下面我们通过一个简单的例子来展示，我们是如何给一个既有应用增加缓存功能的。</p><h2 id=\"快速入门\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#快速入门\" class=\"headerlink\" title=\"快速入门\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>快速入门</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">首先，下载样例工程<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">chapter3-2-2</a>。本例通过spring-data-jpa实现了对User用户表的一些操作，若没有这个基础，可以先阅读<a href=\"http://blog.didispace.com/springbootdata2/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《使用Spring-data-jpa简化数据访问层》</a>一文对数据访问有所基础。</p><h4 id=\"准备工作\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#准备工作\" class=\"headerlink\" title=\"准备工作\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>准备工作</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了更好的理解缓存，我们先对该工程做一些简单的改造。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中新增<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.jpa.properties.hibernate.show_sql=true</code>，开启hibernate对sql语句的打印</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">修改单元测试<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ApplicationTests</code>，初始化插入User表一条用户名为AAA，年龄为10的数据。并通过findByName函数完成两次查询。</p></li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">before</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		User u1 = userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;第一次查询：&quot;</span> + u1.getAge());</p><p>		User u2 = userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;第二次查询：&quot;</span> + u2.getAge());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>执行单元测试，我们可以在控制台中看到下面内容。</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第一次查询：10</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第二次查询：10</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在测试用例执行前，插入了一条User记录。然后每次findByName调用时，都执行了一句select语句来查询用户名为AAA的记录。</p><h4 id=\"引入缓存\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#引入缓存\" class=\"headerlink\" title=\"引入缓存\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入缓存</h4><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入cache依赖，添加如下内容：</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-cache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在Spring Boot主类中增加<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableCaching</code>注解开启缓存功能，如下：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringBootApplication</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableCaching</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Application</span> </span>{</p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">main</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String[] args)</span> </span>{</p><p>		SpringApplication.run(Application.class, args);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在数据访问接口中，增加缓存配置注解，如：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@CacheConfig</span>(cacheNames = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;users&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Cacheable</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>再来执行以下单元测试，可以在控制台中输出了下面的内容：</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第一次查询：10</p><p>第二次查询：10</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">到这里，我们可以看到，在调用第二次findByName函数时，没有再执行select语句，也就直接减少了一次数据库的读取操作。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了可以更好的观察，缓存的存储，我们可以在单元测试中注入cacheManager。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> CacheManager cacheManager;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">使用debug模式运行单元测试，观察cacheManager中的缓存集users以及其中的User对象的缓存加深理解。</p><h2 id=\"Cache注解详解\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#Cache注解详解\" class=\"headerlink\" title=\"Cache注解详解\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Cache注解详解</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">回过头来我们再来看，这里使用到的两个注解分别作了什么事情。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig</code>：主要用于配置该类中会用到的一些共用的缓存配置。在这里<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig(cacheNames = &quot;users&quot;)</code>：配置了该数据访问对象中返回的内容将存储于名为users的缓存对象中，我们也可以不使用该注解，直接通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>自己配置缓存集的名字来定义。</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>：配置了findByName函数的返回值将被加入缓存。同时在查询时，会先从缓存中获取，若不存在才再发起对数据库的访问。该注解主要有下面几个参数：</p></li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheNames</code>：两个等同的参数（<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheNames</code>为Spring 4新增，作为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>的别名），用于指定缓存存储的集合名。由于Spring 4中新增了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig</code>，因此在Spring 3中原本必须有的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>属性，也成为非必需项了</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">key</code>：缓存对象存储在Map集合中的key值，非必需，缺省按照函数的所有参数组合作为key值，若自己配置需使用SpEL表达式，比如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable(key = &quot;#p0&quot;)</code>：使用函数第一个参数作为缓存的key值，更多关于SpEL表达式的详细内容可参考<a href=\"http://docs.spring.io/spring/docs/current/spring-framework-reference/html/cache.html#cache-spel-context\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">官方文档</a></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">condition</code>：缓存对象的条件，非必需，也需使用SpEL表达式，只有满足表达式条件的内容才会被缓存，比如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable(key = &quot;#p0&quot;, condition = &quot;#p0.length() &lt; 3&quot;)</code>，表示只有当第一个参数的长度小于3的时候才会被缓存，若做此配置上面的AAA用户就不会被缓存，读者可自行实验尝试。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">unless</code>：另外一个缓存条件参数，非必需，需使用SpEL表达式。它不同于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">condition</code>参数的地方在于它的判断时机，该条件是在函数被调用之后才做判断的，所以它可以通过对result进行判断。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">keyGenerator</code>：用于指定key生成器，非必需。若需要指定一个自定义的key生成器，我们需要去实现<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.cache.interceptor.KeyGenerator</code>接口，并使用该参数来指定。需要注意的是：<strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">该参数与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">key</code>是互斥的</strong></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheManager</code>：用于指定使用哪个缓存管理器，非必需。只有当有多个时才需要使用</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheResolver</code>：用于指定使用那个缓存解析器，非必需。需通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.cache.interceptor.CacheResolver</code>接口来实现自己的缓存解析器，并用该参数指定。</li></ul></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了这里用到的两个注解之外，还有下面几个核心注解：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CachePut</code>：配置于函数上，能够根据参数定义条件来进行缓存，它与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>不同的是，它每次都会真是调用函数，所以主要用于数据新增和修改操作上。它的参数与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>类似，具体功能可参考上面对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>参数的解析</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheEvict</code>：配置于函数上，通常用在删除方法上，用来从缓存中移除相应数据。除了同<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>一样的参数之外，它还有下面两个参数：</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">allEntries</code>：非必需，默认为false。当为true时，会移除所有数据</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">beforeInvocation</code>：非必需，默认为false，会在调用方法之后移除数据。当为true时，会在调用方法之前移除数据。</li></ul></ul><h2 id=\"缓存配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#缓存配置\" class=\"headerlink\" title=\"缓存配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>缓存配置</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成了上面的缓存实验之后，可能大家会问，那我们在Spring Boot中到底使用了什么缓存呢？</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableCaching</code>注解自动化配置合适的缓存管理器（CacheManager），Spring Boot根据下面的顺序去侦测缓存提供者：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Generic</li><li>JCache (JSR-107)</li><li>EhCache 2.x</li><li>Hazelcast</li><li>Infinispan</li><li>Redis</li><li>Guava</li><li>Simple</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了按顺序侦测外，我们也可以通过配置属性<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.cache.type</code>来强制指定。我们可以通过debug调试查看cacheManager对象的实例来判断当前使用了什么缓存。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文中不对所有的缓存做详细介绍，下面以常用的EhCache为例，看看如何配置来使用EhCache进行缓存管理。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中开启EhCache非常简单，只需要在工程中加入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ehcache.xml</code>配置文件并在pom.xml中增加ehcache依赖，框架只要发现该文件，就会创建EhCache的缓存管理器。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources</code>目录下创建：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ehcache.xml</code></li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">ehcache</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:xsi</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xsi:noNamespaceSchemaLocation</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ehcache.xsd&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">cache</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">name</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;users&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">maxEntriesLocalHeap</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;200&quot;</span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">timeToLiveSeconds</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;600&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">cache</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">ehcache</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>net.sf.ehcache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>ehcache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成上面的配置之后，再通过debug模式运行单元测试，观察此时CacheManager已经是EhCacheManager实例，说明EhCache开启成功了。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于EhCache的配置文件也可以通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.cache.ehcache.config</code>属性来指定，比如：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.cache.ehcache.config=classpath:config/another-config.xml</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例：<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter-4-4-1</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">【转载请注明出处】：<a href=\"http://blog.didispace.com/springbootcache1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://blog.didispace.com/springbootcache1/</a></strong></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('113', 'Spring Boot中的缓存支持（一）注解配置与EhCache使用', '随着时间的积累，应用的使用用户不断增加，数据规模也越来越大，往往数据库查询操作会成为影响用户使用体验的瓶颈，此时使用缓存往往是解决这一问题非常好的手段之一。Spring 3开始提供了强大的基于注解的缓存支持，可以通过注解配置方式低侵入的给原有Spring应用增加缓存功能，提高数据访问性能。在Spring Bo', '2016-10-27 19:35:23', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">随着时间的积累，应用的使用用户不断增加，数据规模也越来越大，往往数据库查询操作会成为影响用户使用体验的瓶颈，此时使用缓存往往是解决这一问题非常好的手段之一。Spring 3开始提供了强大的基于注解的缓存支持，可以通过注解配置方式低侵入的给原有Spring应用增加缓存功能，提高数据访问性能。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中对于缓存的支持，提供了一系列的自动化配置，使我们可以非常方便的使用缓存。下面我们通过一个简单的例子来展示，我们是如何给一个既有应用增加缓存功能的。</p><h2 id=\"快速入门\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#快速入门\" class=\"headerlink\" title=\"快速入门\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>快速入门</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">首先，下载样例工程<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">chapter3-2-2</a>。本例通过spring-data-jpa实现了对User用户表的一些操作，若没有这个基础，可以先阅读<a href=\"http://blog.didispace.com/springbootdata2/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">《使用Spring-data-jpa简化数据访问层》</a>一文对数据访问有所基础。</p><h4 id=\"准备工作\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#准备工作\" class=\"headerlink\" title=\"准备工作\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>准备工作</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了更好的理解缓存，我们先对该工程做一些简单的改造。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中新增<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.jpa.properties.hibernate.show_sql=true</code>，开启hibernate对sql语句的打印</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">修改单元测试<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ApplicationTests</code>，初始化插入User表一条用户名为AAA，年龄为10的数据。并通过findByName函数完成两次查询。</p></li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserRepository userRepository;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Before</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">before</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>		userRepository.save(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> User(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">10</span>));</p><p>	}</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		User u1 = userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;第一次查询：&quot;</span> + u1.getAge());</p><p>		User u2 = userRepository.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;第二次查询：&quot;</span> + u2.getAge());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>执行单元测试，我们可以在控制台中看到下面内容。</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第一次查询：10</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第二次查询：10</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在测试用例执行前，插入了一条User记录。然后每次findByName调用时，都执行了一句select语句来查询用户名为AAA的记录。</p><h4 id=\"引入缓存\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#引入缓存\" class=\"headerlink\" title=\"引入缓存\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>引入缓存</h4><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入cache依赖，添加如下内容：</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-cache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在Spring Boot主类中增加<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableCaching</code>注解开启缓存功能，如下：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringBootApplication</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@EnableCaching</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Application</span> </span>{</p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">main</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String[] args)</span> </span>{</p><p>		SpringApplication.run(Application.class, args);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在数据访问接口中，增加缓存配置注解，如：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@CacheConfig</span>(cacheNames = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;users&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Cacheable</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>再来执行以下单元测试，可以在控制台中输出了下面的内容：</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第一次查询：10</p><p>第二次查询：10</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">到这里，我们可以看到，在调用第二次findByName函数时，没有再执行select语句，也就直接减少了一次数据库的读取操作。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为了可以更好的观察，缓存的存储，我们可以在单元测试中注入cacheManager。</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> CacheManager cacheManager;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">使用debug模式运行单元测试，观察cacheManager中的缓存集users以及其中的User对象的缓存加深理解。</p><h2 id=\"Cache注解详解\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#Cache注解详解\" class=\"headerlink\" title=\"Cache注解详解\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Cache注解详解</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">回过头来我们再来看，这里使用到的两个注解分别作了什么事情。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig</code>：主要用于配置该类中会用到的一些共用的缓存配置。在这里<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig(cacheNames = &quot;users&quot;)</code>：配置了该数据访问对象中返回的内容将存储于名为users的缓存对象中，我们也可以不使用该注解，直接通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>自己配置缓存集的名字来定义。</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>：配置了findByName函数的返回值将被加入缓存。同时在查询时，会先从缓存中获取，若不存在才再发起对数据库的访问。该注解主要有下面几个参数：</p></li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheNames</code>：两个等同的参数（<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheNames</code>为Spring 4新增，作为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>的别名），用于指定缓存存储的集合名。由于Spring 4中新增了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheConfig</code>，因此在Spring 3中原本必须有的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">value</code>属性，也成为非必需项了</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">key</code>：缓存对象存储在Map集合中的key值，非必需，缺省按照函数的所有参数组合作为key值，若自己配置需使用SpEL表达式，比如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable(key = &quot;#p0&quot;)</code>：使用函数第一个参数作为缓存的key值，更多关于SpEL表达式的详细内容可参考<a href=\"http://docs.spring.io/spring/docs/current/spring-framework-reference/html/cache.html#cache-spel-context\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">官方文档</a></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">condition</code>：缓存对象的条件，非必需，也需使用SpEL表达式，只有满足表达式条件的内容才会被缓存，比如：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable(key = &quot;#p0&quot;, condition = &quot;#p0.length() &lt; 3&quot;)</code>，表示只有当第一个参数的长度小于3的时候才会被缓存，若做此配置上面的AAA用户就不会被缓存，读者可自行实验尝试。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">unless</code>：另外一个缓存条件参数，非必需，需使用SpEL表达式。它不同于<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">condition</code>参数的地方在于它的判断时机，该条件是在函数被调用之后才做判断的，所以它可以通过对result进行判断。</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">keyGenerator</code>：用于指定key生成器，非必需。若需要指定一个自定义的key生成器，我们需要去实现<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.cache.interceptor.KeyGenerator</code>接口，并使用该参数来指定。需要注意的是：<strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">该参数与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-radius: 2px; background-color: rgb(248, 248, 248);\">key</code>是互斥的</strong></li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheManager</code>：用于指定使用哪个缓存管理器，非必需。只有当有多个时才需要使用</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">cacheResolver</code>：用于指定使用那个缓存解析器，非必需。需通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.cache.interceptor.CacheResolver</code>接口来实现自己的缓存解析器，并用该参数指定。</li></ul></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了这里用到的两个注解之外，还有下面几个核心注解：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CachePut</code>：配置于函数上，能够根据参数定义条件来进行缓存，它与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>不同的是，它每次都会真是调用函数，所以主要用于数据新增和修改操作上。它的参数与<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>类似，具体功能可参考上面对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>参数的解析</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CacheEvict</code>：配置于函数上，通常用在删除方法上，用来从缓存中移除相应数据。除了同<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Cacheable</code>一样的参数之外，它还有下面两个参数：</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">allEntries</code>：非必需，默认为false。当为true时，会移除所有数据</li><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">beforeInvocation</code>：非必需，默认为false，会在调用方法之后移除数据。当为true时，会在调用方法之前移除数据。</li></ul></ul><h2 id=\"缓存配置\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache1/#缓存配置\" class=\"headerlink\" title=\"缓存配置\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>缓存配置</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成了上面的缓存实验之后，可能大家会问，那我们在Spring Boot中到底使用了什么缓存呢？</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@EnableCaching</code>注解自动化配置合适的缓存管理器（CacheManager），Spring Boot根据下面的顺序去侦测缓存提供者：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Generic</li><li>JCache (JSR-107)</li><li>EhCache 2.x</li><li>Hazelcast</li><li>Infinispan</li><li>Redis</li><li>Guava</li><li>Simple</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了按顺序侦测外，我们也可以通过配置属性<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.cache.type</code>来强制指定。我们可以通过debug调试查看cacheManager对象的实例来判断当前使用了什么缓存。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文中不对所有的缓存做详细介绍，下面以常用的EhCache为例，看看如何配置来使用EhCache进行缓存管理。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中开启EhCache非常简单，只需要在工程中加入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ehcache.xml</code>配置文件并在pom.xml中增加ehcache依赖，框架只要发现该文件，就会创建EhCache的缓存管理器。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources</code>目录下创建：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">ehcache.xml</code></li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">ehcache</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xmlns:xsi</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">xsi:noNamespaceSchemaLocation</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;ehcache.xsd&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">cache</span> <span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">name</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;users&quot;</span></span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">maxEntriesLocalHeap</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;200&quot;</span></p><p><span class=\"attr\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">timeToLiveSeconds</span>=<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;600&quot;</span>&gt;</p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">cache</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">ehcache</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中加入</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>net.sf.ehcache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>ehcache<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成上面的配置之后，再通过debug模式运行单元测试，观察此时CacheManager已经是EhCacheManager实例，说明EhCache开启成功了。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于EhCache的配置文件也可以通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>文件中使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring.cache.ehcache.config</code>属性来指定，比如：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.cache.ehcache.config=classpath:config/another-config.xml</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例：<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter-4-4-1</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">【转载请注明出处】：<a href=\"http://blog.didispace.com/springbootcache1/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://blog.didispace.com/springbootcache1/</a></strong></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('114', 'Spring Boot中的缓存支持（二）使用Redis做集中式缓存', '上一篇介绍了在Spring Boot中如何引入缓存、缓存注解的使用、以及EhCache的整合。虽然EhCache已经能够适用很多应用场景，但是由于EhCache是进程内的缓存框架，在集群模式下时，各应用服务器之间的缓存都是独立的，因此在不同服务器的进程间会存在缓存不一致的情况。即使EhCache提供了集群环境', '2016-10-27 19:35:52', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">上一篇介绍了在Spring Boot中如何引入缓存、缓存注解的使用、以及EhCache的整合。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">虽然EhCache已经能够适用很多应用场景，但是由于EhCache是进程内的缓存框架，在集群模式下时，各应用服务器之间的缓存都是独立的，因此在不同服务器的进程间会存在缓存不一致的情况。即使EhCache提供了集群环境下的缓存同步策略，但是同步依然需要一定的时间，短暂的缓存不一致依然存在。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在一些要求高一致性（任何数据变化都能及时的被查询到）的系统和应用中，就不能再使用EhCache来解决了，这个时候使用集中式缓存是个不错的选择，因此本文将介绍如何在Spring Boot的缓存支持中使用Redis进行数据缓存。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面以上一篇的例子作为基础进行改造，将缓存内容迁移到redis中。</p><h2 id=\"准备工作\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache2/#准备工作\" class=\"headerlink\" title=\"准备工作\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>准备工作</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以下载案例<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter4-4-1</a>，进行下面改造步骤。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">先来回顾一下在此案例中，我们做了什么内容：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>引入了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-jpa</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">EhCache</code></li><li>定义了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">User</code>实体，包含<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">id</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">name</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">age</code>字段</li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-data-jpa</code>实现了对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">User</code>对象的数据访问接口<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">UserRepository</code></li><li>使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Cache</code>相关注解配置了缓存</li><li>单元测试，通过连续的查询和更新数据后的查询来验证缓存是否生效</li></ul><h2 id=\"开始改造\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache2/#开始改造\" class=\"headerlink\" title=\"开始改造\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>开始改造</h2><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">删除EhCache的配置文件<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">src/main/resources/ehcache.xml</code></p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中删除EhCache的依赖，增加redis的依赖：</p></li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-redis<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中增加redis配置，以本地运行为例，比如：</li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.redis.host=localhost</p><p>spring.redis.port=6379</p><p>spring.redis.pool.max-idle=8</p><p>spring.redis.pool.min-idle=0</p><p>spring.redis.pool.max-active=8</p><p>spring.redis.pool.max-wait=-1</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们需要做的配置到这里就已经完成了，Spring Boot会在侦测到存在Redis的依赖并且Redis的配置是可用的情况下，使用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RedisCacheManager</code>初始化<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">CacheManager</code>。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为此，我们可以单步运行我们的单元测试，可以观察到此时<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">CacheManager</code>的实例是<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">org.springframework.data.redis.cache.RedisCacheManager</code>，并获得下面的执行结果：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>Hibernate: select user0_.id as id1_0_, user0_.age as age2_0_, user0_.name as name3_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.name=?</p><p>第一次查询：10</p><p>第二次查询：10</p><p>Hibernate: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.id=?</p><p>Hibernate: update user <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">set</span> age=?, name=? <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> id=?</p><p>第三次查询：10</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以观察到，在第一次查询的时候，执行了select语句；第二次查询没有执行select语句，说明是从缓存中获得了结果；而第三次查询，我们获得了一个错误的结果，根据我们的测试逻辑，在查询之前我们已经将age更新为20，但是我们从缓存中获取到的age还是为10。</p><h2 id=\"问题思考\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache2/#问题思考\" class=\"headerlink\" title=\"问题思考\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>问题思考</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">为什么同样的逻辑在EhCache中没有问题，但是到Redis中会出现这个问题呢？</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在EhCache缓存时没有问题，主要是由于EhCache是进程内的缓存框架，第一次通过select查询出的结果被加入到EhCache缓存中，第二次查询从EhCache取出的对象与第一次查询对象实际上是同一个对象（可以在使用Chapter4-4-1工程中，观察u1==u2来看看是否是同一个对象），因此我们在更新age的时候，实际已经更新了EhCache中的缓存对象。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">而Redis的缓存独立存在于我们的Spring应用之外，我们对数据库中数据做了更新操作之后，没有通知Redis去更新相应的内容，因此我们取到了缓存中未修改的数据，导致了数据库与缓存中数据的不一致。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">因此我们在使用缓存的时候，要注意缓存的生命周期，利用好上一篇上提到的几个注解来做好缓存的更新、删除</strong></p><h2 id=\"进一步修改\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootcache2/#进一步修改\" class=\"headerlink\" title=\"进一步修改\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>进一步修改</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">针对上面的问题，我们只需要在更新age的时候，通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@CachePut</code>来让数据更新操作同步到缓存中，就像下面这样：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@CacheConfig</span>(cacheNames = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;users&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserRepository</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">extends</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">JpaRepository</span>&lt;<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span>, <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Long</span>&gt; </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Cacheable</span>(key = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;#p0&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String name)</span></span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@CachePut</span>(key = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;#p0.name&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">save</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(User user)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在redis-cli中flushdb，清空一下之前的缓存内容，再执行单元测试，可以获得下面的结果：</p><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Hibernate: insert into user (age, name) values (?, ?)</p><p>第一次查询：10</p><p>第二次查询：10</p><p>Hibernate: select user0_.id as id1_0_0_, user0_.age as age2_0_0_, user0_.name as name3_0_0_ from user user0_ <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> user0_.id=?</p><p>Hibernate: update user <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">set</span> age=?, name=? <span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">where</span> id=?</p><p>第三次查询：20</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">可以看到，我们的第三次查询获得了正确的结果！同时，我们的第一次查询也不是通过select查询获得的，因为在初始化数据的时候，调用save方法时，就已经将这条数据加入了redis缓存中，因此后续的查询就直接从redis中获取了。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文内容到此为止，主要介绍了为什么要使用Redis做缓存，以及如何在Spring Boot中使用Redis做缓存，并且通过一个小问题来帮助大家理解缓存机制，在使用过程中，一定要注意缓存生命周期的控制，防止数据不一致的情况出现。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例：<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter-4-4-2</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">【转载请注明出处】：<a href=\"http://blog.didispace.com/springbootcache2/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://blog.didispace.com/springbootcache2/</a></strong></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('115', 'Spring Boot整合MyBatis', '最近项目原因可能会继续开始使用MyBatis，已经习惯于spring-data的风格，再回头看xml的映射配置总觉得不是特别舒服，接口定义与映射离散在不同文件中，使得阅读起来并不是特别方便。Spring中整合MyBatis就不多说了，最近大量使用Spring Boot，因此整理一下Spring Boot中整合', '2016-10-27 19:36:18', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">最近项目原因可能会继续开始使用MyBatis，已经习惯于spring-data的风格，再回头看xml的映射配置总觉得不是特别舒服，接口定义与映射离散在不同文件中，使得阅读起来并不是特别方便。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Spring中整合MyBatis就不多说了，最近大量使用Spring Boot，因此整理一下Spring Boot中整合MyBatis的步骤。搜了一下Spring Boot整合MyBatis的文章，方法都比较老，比较繁琐。查了一下文档，实际已经支持较为简单的整合与使用。下面就来详细介绍如何在Spring Boot中整合MyBatis，并通过注解方式实现映射。</p><h2 id=\"整合MyBatis\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmybatis/#整合MyBatis\" class=\"headerlink\" title=\"整合MyBatis\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>整合MyBatis</h2><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">新建Spring Boot项目，或以<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter1</a>为基础来操作</p></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\"><code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入依赖</p></li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li>这里用到spring-boot-starter基础和spring-boot-starter-test用来做单元测试验证数据访问</li><li>引入连接mysql的必要依赖mysql-connector-java</li><li>引入整合MyBatis的核心依赖mybatis-spring-boot-starter</li><li>这里不引入spring-boot-starter-jdbc依赖，是由于mybatis-spring-boot-starter中已经包含了此依赖<figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p><p>27</p><p>28</p><p>29</p><p>30</p><p>31</p><p>32</p><p>33</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">parent</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>1.3.2.RELEASE<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">relativePath</span>/&gt;</span> <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!-- lookup parent from repository --&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">parent</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span>test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.mybatis.spring.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>1.1.1<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>mysql<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p>		<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>5.1.21<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p>	<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p></pre></td></tr></tbody></table></figure></li></ul><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">同之前介绍的使用jdbc和spring-data连接数据库一样，在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中配置mysql的连接配置</p></li></ul><p><figure class=\"highlight bash\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.datasource.url=jdbc:mysql://localhost:3306/<span class=\"built_in\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">test</span></p><p>spring.datasource.username=root</p><p>spring.datasource.password=123456</p><p>spring.datasource.driver-class-name=com.mysql.jdbc.Driver</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">同其他Spring Boot工程一样，简单且简洁的的完成了基本配置，下面看看如何在这个基础下轻松方便的使用MyBatis访问数据库。</p><h2 id=\"使用MyBatis\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/springbootmybatis/#使用MyBatis\" class=\"headerlink\" title=\"使用MyBatis\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用MyBatis</h2><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在Mysql中创建User表，包含id(BIGINT)、name(INT)、age(VARCHAR)字段。同时，创建映射对象User</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">User</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Long id;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> String name;</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Integer age;</p><p><span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 省略getter和setter</span></p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建User映射的操作UserMapper，为了后续单元测试验证，实现插入和查询操作</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Mapper</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserMapper</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Select</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;SELECT * FROM USER WHERE NAME = #{name}&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name)</span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Insert</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;INSERT INTO USER(NAME, AGE) VALUES(#{name}, #{age})&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">int</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">insert</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name, @<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">Param</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>)</span> Integer age)</span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建Spring Boot主类</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringBootApplication</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Application</span> </span>{</p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">main</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String[] args)</span> </span>{</p><p>		SpringApplication.run(Application.class, args);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建单元测试</li><ul style=\"margin: 0px 20px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; list-style: disc; line-height: 1.6em;\"><li>测试逻辑：插入一条name=AAA，age=20的记录，然后根据name=AAA查询，并判断age是否为20</li><li>测试结束回滚数据，保证测试单元每次运行的数据环境独立</li></ul></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(classes = Application.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserMapper userMapper;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Rollback</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		userMapper.insert(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>);</p><p>		User u = userMapper.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>, u.getAge().intValue());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例<a href=\"https://git.oschina.net/didispace/SpringBoot-Learning\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-2-7</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><strong style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">【转载请注明出处】：<a href=\"http://blog.didispace.com/springbootmybatis/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://blog.didispace.com/springbootmybatis/</a></strong></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('116', 'Spring Boot中使用MyBatis注解配置详解', '之前在Spring Boot中整合MyBatis时，采用了注解的配置方式，相信很多人还是比较喜欢这种优雅的方式的，也收到不少读者朋友的反馈和问题，主要集中于针对各种场景下注解如何使用，下面就对几种常见的情况举例说明用法。在做下面的示例之前，先准备一个整合好MyBatis的工程，可参见Spring Boot整合', '2016-10-27 19:36:38', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">之前在Spring Boot中整合MyBatis时，采用了注解的配置方式，相信很多人还是比较喜欢这种优雅的方式的，也收到不少读者朋友的反馈和问题，主要集中于针对各种场景下注解如何使用，下面就对几种常见的情况举例说明用法。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在做下面的示例之前，先准备一个整合好MyBatis的工程，可参见<a href=\"http://blog.didispace.com/springbootmybatis/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Spring Boot整合MyBatis</a>，也可直接使用整合好的样例：<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter3-2-7\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-2-7</a>。</p><h2 id=\"传参方式\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#传参方式\" class=\"headerlink\" title=\"传参方式\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>传参方式</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面通过几种不同传参方式来实现前文中实现的插入操作。</p><h4 id=\"使用-Param\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#使用-Param\" class=\"headerlink\" title=\"使用@Param\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用@Param</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在之前的整合示例中我们已经使用了这种最简单的传参方式，如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Insert</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;INSERT INTO USER(NAME, AGE) VALUES(#{name}, #{age})&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">int</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">insert</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name, @<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">Param</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>)</span> Integer age)</span>;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">这种方式很好理解，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Param</code>中定义的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">name</code>对应了SQL中的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">#{name}</code>，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">age</code>对应了SQL中的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">#{age}</code>。</p><h4 id=\"使用Map\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#使用Map\" class=\"headerlink\" title=\"使用Map\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用Map</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">如下代码，通过Map<string, object=\"\">对象来作为传递参数的容器：</string,></p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Insert</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;INSERT INTO USER(NAME, AGE) VALUES(#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER})&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">int</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">insertByMap</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(Map&lt;String, Object&gt; map)</span></span>;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于Insert语句中需要的参数，我们只需要在map中填入同名的内容即可，具体如下面代码所示：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Map&lt;String, Object&gt; map = <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> HashMap&lt;&gt;();</p><p>map.put(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>, <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;CCC&quot;</span>);</p><p>map.put(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">40</span>);</p><p>userMapper.insertByMap(map);</p></pre></td></tr></tbody></table></figure></p><h4 id=\"使用对象\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#使用对象\" class=\"headerlink\" title=\"使用对象\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>使用对象</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">除了Map对象，我们也可直接使用普通的Java对象来作为查询条件的传参，比如我们可以直接使用User对象:</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Insert</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;INSERT INTO USER(NAME, AGE) VALUES(#{name}, #{age})&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">int</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">insertByUser</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(User user)</span></span>;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">这样语句中的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">#{name}</code>、<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">#{age}</code>就分别对应了User对象中的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">name</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">age</code>属性。</p><h2 id=\"增删改查\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#增删改查\" class=\"headerlink\" title=\"增删改查\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>增删改查</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">MyBatis针对不同的数据库操作分别提供了不同的注解来进行配置，在之前的示例中演示了<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Insert</code>，下面针对User表做一组最基本的增删改查作为示例：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">interface</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">UserMapper</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Select</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;SELECT * FROM user WHERE name = #{name}&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">User <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findByName</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name)</span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Insert</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;INSERT INTO user(name, age) VALUES(#{name}, #{age})&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">int</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">insert</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(@Param(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>)</span> String name, @<span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">Param</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>)</span> Integer age)</span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Update</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;UPDATE user SET age=#{age} WHERE name=#{name}&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">update</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(User user)</span></span>;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Delete</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;DELETE FROM user WHERE id =#{id}&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">delete</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(Long id)</span></span>;</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在完成了一套增删改查后，不妨我们试试下面的单元测试来验证上面操作的正确性：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p><p>18</p><p>19</p><p>20</p><p>21</p><p>22</p><p>23</p><p>24</p><p>25</p><p>26</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(classes = Application.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Transactional</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">ApplicationTests</span> </span>{</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> UserMapper userMapper;</p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p>	<span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Rollback</span></p><p>	<span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">testUserMapper</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// insert一条数据，并select出来验证</span></p><p>		userMapper.insert(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>, <span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>);</p><p>		User u = userMapper.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">20</span>, u.getAge().intValue());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// update一条数据，并select出来验证</span></p><p>		u.setAge(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>);</p><p>		userMapper.update(u);</p><p>		u = userMapper.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		Assert.assertEquals(<span class=\"number\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">30</span>, u.getAge().intValue());</p><p>		<span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">// 删除这条数据，并select验证</span></p><p>		userMapper.delete(u.getId());</p><p>		u = userMapper.findByName(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;AAA&quot;</span>);</p><p>		Assert.assertEquals(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span>, u);</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><h2 id=\"返回结果的绑定\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#返回结果的绑定\" class=\"headerlink\" title=\"返回结果的绑定\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>返回结果的绑定</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">对于增、删、改操作相对变化较小。而对于“查”操作，我们往往需要进行多表关联，汇总计算等操作，那么对于查询的结果往往就不再是简单的实体对象了，往往需要返回一个与数据库实体不同的包装类，那么对于这类情况，就可以通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Results</code>和<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@Result</code>注解来进行绑定，具体如下：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Results</span>({</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Result</span>(property = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>, column = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;name&quot;</span>),</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Result</span>(property = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>, column = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;age&quot;</span>)</p><p>})</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Select</span>(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;SELECT name, age FROM user&quot;</span>)</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">List&lt;User&gt; <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">findAll</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span></span>;</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在上面代码中，@Result中的property属性对应User对象中的成员名，column对应SELECT出的字段名。在该配置中故意没有查出id属性，只对User对应中的name和age对象做了映射配置，这样可以通过下面的单元测试来验证查出的id为null，而其他属性不为null：</p><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Rollback</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">testUserMapper</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>	List&lt;User&gt; userList = userMapper.findAll();</p><p>	<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">for</span>(User user : userList) {</p><p>		Assert.assertEquals(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span>, user.getId());</p><p>		Assert.assertNotEquals(<span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">null</span>, user.getName());</p><p>	}</p><p>}</p></pre></td></tr></tbody></table></figure></p><h2 id=\"后记\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/mybatisinfo/#后记\" class=\"headerlink\" title=\"后记\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>后记</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文主要介绍几种最为常用的方式，更多其他注解的使用可参见文档：<a href=\"http://www.mybatis.org/mybatis-3/zh/java-api.html\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://www.mybatis.org/mybatis-3/zh/java-api.html</a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文示例完整代码：<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter3-2-8\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">Chapter3-2-8</a></p><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('117', 'Spring Boot中使用RabbitMQ', '很久没有写Spring Boot的内容了，正好最近在写Spring Cloud Bus的内容，因为内容会有一些相关性，所以先补一篇关于AMQP的整合。Message Broker与AMQP简介Message Broker是一种消息验证、传输、路由的架构模式，其设计目标主要应用于下面这些场景：消息路由到一个或多', '2016-10-27 19:37:02', '0', '0', '<p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">很久没有写Spring Boot的内容了，正好最近在写Spring Cloud Bus的内容，因为内容会有一些相关性，所以先补一篇关于AMQP的整合。</p><h2 id=\"Message-Broker与AMQP简介\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Message-Broker与AMQP简介\" class=\"headerlink\" title=\"Message Broker与AMQP简介\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Message Broker与AMQP简介</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">Message Broker是一种消息验证、传输、路由的架构模式，其设计目标主要应用于下面这些场景：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>消息路由到一个或多个目的地</li><li>消息转化为其他的表现方式</li><li>执行消息的聚集、消息的分解，并将结果发送到他们的目的地，然后重新组合相应返回给消息用户</li><li>调用Web服务来检索数据</li><li>响应事件或错误</li><li>使用发布-订阅模式来提供内容或基于主题的消息路由</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">AMQP是Advanced Message Queuing Protocol的简称，它是一个面向消息中间件的开放式标准应用层协议。AMQP定义了这些特性：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>消息方向</li><li>消息队列</li><li>消息路由（包括：点到点和发布-订阅模式）</li><li>可靠性</li><li>安全性</li></ul><h2 id=\"RabbitMQ\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#RabbitMQ\" class=\"headerlink\" title=\"RabbitMQ\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>RabbitMQ</h2><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">本文要介绍的RabbitMQ就是以AMQP协议实现的一种中间件产品，它可以支持多种操作系统，多种编程语言，几乎可以覆盖所有主流的企业级技术平台。</p><h3 id=\"安装\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#安装\" class=\"headerlink\" title=\"安装\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>安装</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在RabbitMQ官网的下载页面<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">https://www.rabbitmq.com/download.html</code>中，我们可以获取到针对各种不同操作系统的安装包和说明文档。这里，我们将对几个常用的平台一一说明。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面我们采用的Erlang和RabbitMQ Server版本说明：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>Erlang/OTP 19.1</li><li>RabbitMQ Server 3.6.5</li></ul><h4 id=\"Windows安装\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Windows安装\" class=\"headerlink\" title=\"Windows安装\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Windows安装</h4><ol style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>安装Erland，通过官方下载页面<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://www.erlang.org/downloads</code>获取exe安装包，直接打开并完成安装。</li><li>安装RabbitMQ，通过官方下载页面<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">https://www.rabbitmq.com/download.html</code>获取exe安装包。</li><li>下载完成后，直接运行安装程序。</li><li>RabbitMQ Server安装完成之后，会自动的注册为服务，并以默认配置启动起来。</li></ol><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/assets/5-1.png\" title=\"\" class=\"gallery-item\" lg-event-uid=\"&amp;1\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/assets/5-1.png\" alt=\"\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a></p><h4 id=\"Mac-OS-X安装\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Mac-OS-X安装\" class=\"headerlink\" title=\"Mac OS X安装\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Mac OS X安装</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Mac OS X中使用brew工具，可以很容易的安装RabbitMQ的服务端，只需要按如下命令操作即可：</p><ol style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>brew更新到最新版本，执行：brew update</li><li>安装Erlang，执行：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">brew install erlang</code></li><li>安装RabbitMQ Server，执行：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">brew install rabbitmq</code></li></ol><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面的命令，RabbitMQ Server的命令会被安装到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/usr/local/sbin</code>，并不会自动加到用户的环境变量中去，所以我们需要在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">.bash_profile</code>或<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">.profile</code>文件中增加下面内容：</p><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>PATH=$PATH:/usr/local/sbin</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">这样，我们就可以通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">rabbitmq-server</code>命令来启动RabbitMQ的服务端了。</p><h4 id=\"Ubuntu安装\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.2em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Ubuntu安装\" class=\"headerlink\" title=\"Ubuntu安装\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 19.2px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Ubuntu安装</h4><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Ubuntu中，我们可以使用APT仓库来进行安装</p><ol style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>安装Erlang，执行：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">apt-get install erlang</code></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">执行下面的命令，新增APT仓库到<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">/etc/apt/sources.list.d</code></p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>echo &#39;deb http://www.rabbitmq.com/debian/ testing main&#39; |</p><p>sudo tee /etc/apt/sources.list.d/rabbitmq.list</p></pre></td></tr></tbody></table></figure></li><li><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; line-height: 1.6em;\">更新APT仓库的package list，执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">sudo apt-get update</code>命令</p></li><li>安装Rabbit Server，执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">sudo apt-get install rabbitmq-server</code>命令</li></ol><h3 id=\"Rabbit管理\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Rabbit管理\" class=\"headerlink\" title=\"Rabbit管理\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Rabbit管理</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">我们可以直接通过配置文件的访问进行管理，也可以通过Web的访问进行管理。下面我们将介绍如何通过Web进行管理。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>执行<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">rabbitmq-plugins enable rabbitmq_management</code>命令，开启Web管理插件，这样我们就可以通过浏览器来进行管理了。</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>&gt; rabbitmq-plugins enable rabbitmq_management</p><p>The following plugins have been enabled:</p><p>mochiweb</p><p>webmachine</p><p>rabbitmq_web_dispatch</p><p>amqp_client</p><p>rabbitmq_management_agent</p><p>rabbitmq_management</p><p>Applying plugin configuration to rabbit@PC-201602152056... started 6 plugins.</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>打开浏览器并访问：<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">http://localhost:15672/</code>，并使用默认用户<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">guest</code>登录，密码也为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">guest</code>。我们可以看到如下图的管理页面：</li></ul><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/assets/5-2.png\" title=\"\" class=\"gallery-item\" lg-event-uid=\"&amp;2\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"><img src=\"http://blog.didispace.com/assets/5-2.png\" alt=\"\" style=\"margin: auto; padding: 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; max-width: 100%; height: auto; display: block;\"/></a></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">从图中，我们可以看到之前章节中提到的一些基本概念，比如：Connections、Channels、Exchanges、Queue等。第一次使用的读者，可以都点开看看都有些什么内容，熟悉一下RabbitMQ Server的服务端。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>点击<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Admin</code>标签，在这里可以进行用户的管理。</li></ul><h3 id=\"Spring-Boot整合\" style=\"margin: 1.3em 0px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; font-size: 1.3em; vertical-align: baseline; line-height: 1.3em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><a href=\"http://blog.didispace.com/spring-boot-rabbitmq/#Spring-Boot整合\" class=\"headerlink\" title=\"Spring Boot整合\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 20.8px; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\"></a>Spring Boot整合</h3><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">下面，我们通过在Spring Boot应用中整合RabbitMQ，并实现一个简单的发送、接收消息的例子来对RabbitMQ有一个直观的感受和理解。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">在Spring Boot中整合RabbitMQ是一件非常容易的事，因为之前我们已经介绍过Starter POMs，其中的AMQP模块就可以很好的支持RabbitMQ，下面我们就来详细说说整合过程：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>新建一个Spring Boot工程，命名为：“rabbitmq-hello”。</li><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">pom.xml</code>中引入如下依赖内容，其中<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-amqp</code>用于支持RabbitMQ。</li></ul><p><figure class=\"highlight xml\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p><p>14</p><p>15</p><p>16</p><p>17</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">parent</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span>1.3.7.RELEASE<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">version</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">relativePath</span>/&gt;</span> <span class=\"comment\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">&lt;!-- lookup parent from repository --&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">parent</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">groupId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">artifactId</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span>test<span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">scope</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependency</span>&gt;</span></p><p><span class=\"tag\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">&lt;/<span class=\"name\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">dependencies</span>&gt;</span></p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>在<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">application.properties</code>中配置关于RabbitMQ的连接和用户信息，用户可以回到上面的安装内容，在管理页面中创建用户。</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>spring.application.name=rabbitmq-hello</p><p>spring.rabbitmq.host=localhost</p><p>spring.rabbitmq.port=5672</p><p>spring.rabbitmq.username=spring</p><p>spring.rabbitmq.password=123456</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建消息生产者<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Sender</code>。通过注入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">AmqpTemplate</code>接口的实例来实现消息的发送，<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">AmqpTemplate</code>接口定义了一套针对AMQP协议的基础操作。在Spring Boot中会根据配置来注入其具体实现。在该生产者，我们会产生一个字符串，并发送到名为<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello</code>的队列中。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Sender</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> AmqpTemplate rabbitTemplate;</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">send</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p>String context = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;hello &quot;</span> + <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Date();</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Sender : &quot;</span> + context);</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">this</span>.rabbitTemplate.convertAndSend(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;hello&quot;</span>, context);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建消息消费者<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">Receiver</code>。通过<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RabbitListener</code>注解定义该类对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello</code>队列的监听，并用<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">@RabbitHandler</code>注解来指定对消息的处理方法。所以，该消费者实现了对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello</code>队列的消费，消费操作为输出消息的字符串内容。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Component</span></p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RabbitListener</span>(queues = <span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;hello&quot;</span>)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">Receiver</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RabbitHandler</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">process</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String hello)</span> </span>{</p><p>System.out.println(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;Receiver : &quot;</span> + hello);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建RabbitMQ的配置类<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">RabbitConfig</code>，用来配置队列、交换器、路由等高级信息。这里我们以入门为主，先以最小化的配置来定义，以完成一个基本的生产和消费过程。</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Configuration</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">RabbitConfig</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Bean</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> Queue <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">helloQueue</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> </span>{</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">return</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">new</span> Queue(<span class=\"string\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">&quot;hello&quot;</span>);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建应用主类：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringBootApplication</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloApplication</span> </span>{</p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">static</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">main</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">(String[] args)</span> </span>{</p><p>SpringApplication.run(HelloApplication.class, args);</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>创建单元测试类，用来调用消息生产：</li></ul><p><figure class=\"highlight java\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>13</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@RunWith</span>(SpringJUnit4ClassRunner.class)</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@SpringApplicationConfiguration</span>(classes = HelloApplication.class)</p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"class\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">class</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(255, 255, 255);\">HelloApplicationTests</span> </span>{</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Autowired</span></p><p><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">private</span> Sender sender;</p><p><span class=\"meta\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(117, 113, 94);\">@Test</span></p><p><span class=\"function\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">public</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">void</span> <span class=\"title\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(166, 226, 46);\">hello</span><span class=\"params\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\">()</span> <span class=\"keyword\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-weight: bold; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(249, 38, 114);\">throws</span> Exception </span>{</p><p>sender.send();</p><p>}</p><p>}</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完成程序编写之后，下面开始尝试运行。首先确保RabbitMQ Server已经开始，然后进行下面的操作：</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>启动应用主类，从控制台中，我们看到如下内容，程序创建了一个访问<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">127.0.0.1:5672</code>中<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">springcloud</code>的连接。</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\" style=\"width: 731px;\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>o.s.a.r.c.CachingConnectionFactory &nbsp; &nbsp; &nbsp; : Created new connection: SimpleConnection@29836d32 [delegate=amqp://springcloud@127.0.0.1:5672/]</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">同时，我们通过RabbitMQ的控制面板，可以看到Connection和Channels中包含当前连接的条目。</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>运行单元测试类，我们可以看到控制台中输出下面的内容，消息被发送到了RabbitMQ Server的<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello</code>队列中。</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Sender : hello Sun Sep 25 11:06:11 CST 2016</p></pre></td></tr></tbody></table></figure></p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>切换到应用主类的控制台，我们可以看到类似如下输出，消费者对<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">hello</code>队列的监听程序执行了，并输出了接受到的消息信息。</li></ul><p><figure class=\"highlight plain\" style=\"margin: 1.6em 0px; overflow-x: auto; padding: 15px 20px; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; line-height: 25.6px; color: rgb(221, 221, 221); white-space: normal; widows: 1; background-color: rgb(39, 40, 34); background-position: initial initial; background-repeat: initial initial;\"><table width=\"NaN\"><tbody style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><tr style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\" class=\"firstRow\"><td class=\"gutter\" style=\"margin: 0px; padding: 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px 20px 0px 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(102, 102, 102); text-align: right;\"><p>1</p></pre></td><td class=\"code\" style=\"margin: 0px; padding: 10px 20px 10px 0px; border: none; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: middle;\"><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline;\"><p>Receiver : hello Sun Sep 25 11:06:11 CST 2016</p></pre></td></tr></tbody></table></figure></p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">通过上面的示例，我们在Spring Boot应用中引入<code style=\"margin: 0px 2px; padding: 3px 5px; border: 0px; outline: 0px; font-style: inherit; font-family: &#39;Source Code Pro&#39;, Consolas, Monaco, Menlo, Consolas, monospace; font-size: 1em; vertical-align: baseline; color: rgb(233, 105, 0); border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; background-color: rgb(248, 248, 248);\">spring-boot-starter-amqp</code>模块，进行简单配置就完成了对RabbitMQ的消息生产和消费的开发内容。然而在实际应用中，我们还有很多内容没有演示，这里不做更多的讲解，读者可以自行查阅RabbitMQ的官方教程，有更全面的了解。</p><p style=\"margin-top: 1.6em; margin-bottom: 1.6em; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\">完整示例：Chapter5-2-1</p><ul style=\"margin: 1.6em 20px; padding: 0px; border: 0px; outline: 0px; font-family: &#39;open sans&#39;, &#39;Helvetica Neue&#39;, &#39;Microsoft Yahei&#39;, Helvetica, Arial, sans-serif; vertical-align: baseline; list-style-position: initial; list-style-image: initial; line-height: 1.6em; color: rgb(86, 90, 95); white-space: normal; widows: 1; background-color: rgb(255, 255, 255);\"><li>开源中国：<a href=\"http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter5-2-1\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">http://git.oschina.net/didispace/SpringBoot-Learning/tree/master/Chapter5-2-1</a></li><li>GitHub：<a href=\"https://github.com/dyc87112/SpringBoot-Learning/tree/master/Chapter5-2-1\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">https://github.com/dyc87112/SpringBoot-Learning/tree/master/Chapter5-2-1</a></li></ul><p><span class=\"fa fa-lightbulb-o\" style=\"display: inline-block; line-height: 1; font-family: FontAwesome; font-size: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased;\"></span>&nbsp;本文由&nbsp;<a href=\"http://blog.didispace.com/\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">程序猿DD-翟永超</a>&nbsp;创作，采用&nbsp;<a href=\"http://creativecommons.org/licenses/by/3.0/cn\" target=\"_blank\" rel=\"external\" style=\"margin: 0px; padding: 0px; border: 0px; outline: 0px; font-style: inherit; font-family: inherit; vertical-align: baseline; color: rgb(56, 183, 234); text-decoration: none;\">CC BY 3.0 CN协议</a>&nbsp;进行许可。 可自由转载、引用，但需署名作者且注明文章出处。</p><p><br/></p>,', '2', '', null, '3', null, null);
INSERT INTO `t_blog` VALUES ('118', 'zscat11111', 'wu', '2016-11-03 13:50:57', null, null, 'face[嘻嘻] \n[pre]\n@RequestMapping(\"/saves\")\n	public String saves(String vercode,String title,String content,Long typeid,HttpServletRequest req)throws Exception{\n		if (!StringUtils.equalsIgnoreCase(\"3711111\", vercode)) {\n			return \"redirect:/front/blog/adds\";\n		}\n		Blog blog=new Blog();\n		blog.setTitle(title);\n		blog.setState(0);\n		blog.setContent(content);\n		blog.setTypeid(typeid);\n		blog.setBloggerId(SysUserUtils.getSessionBloggerUser().getId());\n		blog.setReleasedate(new Date());\n		blogService.insertSelective(blog);\n		return \"redirect:/front/indexs\";\n		\n	}\n[/pre]', '1', null, '0', '4', null, null);
INSERT INTO `t_blog` VALUES ('119', 'zscat2222', 'wu', '2016-11-03 13:52:39', null, '0', 'face[嘻嘻] \n[pre]\n@RequestMapping(\"/saves\")\n	public String saves(String vercode,String title,String content,Long typeid,HttpServletRequest req)throws Exception{\n		if (!StringUtils.equalsIgnoreCase(\"3711111\", vercode)) {\n			return \"redirect:/front/blog/adds\";\n		}\n		Blog blog=new Blog();\n		blog.setTitle(title);\n		blog.setState(0);\n		blog.setContent(content);\n		blog.setTypeid(typeid);\n		blog.setBloggerId(SysUserUtils.getSessionBloggerUser().getId());\n		blog.setReleasedate(new Date());\n		blogService.insertSelective(blog);\n		return \"redirect:/front/indexs\";\n		\n	}\n[/pre]', '1', null, '0', '4', null, null);
INSERT INTO `t_blog` VALUES ('120', 'zsCat22', 'wu', '2016-11-03 13:53:05', null, '0', 'face[亲亲] \n\n222222222', '1', null, '0', '4', null, null);
INSERT INTO `t_blog` VALUES ('121', 'zsCat22', 'wu', '2016-11-03 13:53:20', null, '0', 'face[亲亲] \n\n222222222', '1', null, '0', '4', null, null);
INSERT INTO `t_blog` VALUES ('122', 'zscat3', 'wu', '2016-11-03 13:55:21', null, '0', 'face[太开心] \r\n\r\nxxxxxxxxxxxx', '1', null, '0', '4', null, null);
INSERT INTO `t_blog` VALUES ('125', 'ZSCAT分布式框架是啥？', '使用技术  spring，springmvc ，mybatis 通用mapper，beetl  maven redis  dubbo  zookeep  bootstreap ace jquery 等等主要是提供了常用的权限系统精确到按钮级别和一些常用的功能和组件分布式 主要是将系统分成多个模块 如商城 可以', '2016-11-04 13:30:13', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\">使用技术 &nbsp;<span style=\"margin: 0px; padding: 0px; color: rgb(108, 108, 108); font-family: tahoma, arial, &#39;Hiragino Sans GB&#39;, 宋体, sans-serif; font-size: 12px; line-height: 18px; widows: auto; background-color: rgb(255, 255, 255);\">spring，springmvc ，mybatis 通用mapper，beetl&nbsp; maven redis &nbsp;<span style=\"margin: 0px; padding: 0px;\">dubbo &nbsp;zookeep &nbsp;bootstreap ace jquery 等等</span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><span style=\"margin: 0px; padding: 0px; color: rgb(108, 108, 108); font-family: tahoma, arial, &#39;Hiragino Sans GB&#39;, 宋体, sans-serif; font-size: 12px; line-height: 18px; widows: auto; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">主要是提供了常用的权限系统精确到按钮级别和一些常用的功能和组件</span></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><span style=\"margin: 0px; padding: 0px; color: rgb(108, 108, 108); font-family: tahoma, arial, &#39;Hiragino Sans GB&#39;, 宋体, sans-serif; font-size: 12px; line-height: 18px; widows: auto; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px;\">分布式 主要是将系统分成多个模块 如商城 可以分成会员中心，订单管理 &nbsp;购物车等等，每个模块 分为API 和实现两个项目，实现项目也打成war包 独立部署，每个模块可以都可以多机部署。当然这样的模式会导致开发和部署更加麻烦，项目分了多个模块 本来部署一次的也变成了部署多次，分布式的事务也难解决。但还是有不得不分的理由............................</span></span></p><p><br/></p>,', '3', '', null, '1', null, null);
INSERT INTO `t_blog` VALUES ('126', '演示地址', 'http://www.zscat.top/gw/index  官网http://www.zscat.top/index  后台http://zscat.carp.mopaasapp.com/front 商城http://www.zscat.top/cms/index 内容管理http://www.zscat.', '2016-11-04 13:39:17', '0', '0', '<p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a href=\"http://www.zscat.top/gw/index\" style=\"margin: 0px; padding: 0px; color: rgb(96, 127, 166); text-decoration: none;\">http://www.zscat.top/gw/index</a> &nbsp;官网</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a href=\"http://www.zscat.top/index\" style=\"margin: 0px; padding: 0px; color: rgb(96, 127, 166); text-decoration: none;\">http://www.zscat.top/index</a> &nbsp;后台</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a href=\"http://zscat.carp.mopaasapp.com/front\" target=\"_blank\" style=\"margin: 0px; padding: 0px; color: rgb(0, 178, 243); text-decoration: none; box-sizing: inherit; outline: 0px; word-wrap: break-word; font-family: Lato, &#39;Helvetica Neue&#39;, &#39;Microsoft YaHei&#39;, Arial, Helvetica, sans-serif; font-size: 15px; line-height: 25px; text-align: justify; white-space: normal; cursor: pointer !important; background: rgb(250, 250, 250);\">http://zscat.carp.mopaasapp.com/front</a> 商城</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a href=\"http://www.zscat.top/index\" style=\"margin: 0px; padding: 0px; color: rgb(96, 127, 166); text-decoration: none; line-height: 24.381px;\">http://www.zscat.top/cms/index</a> 内容管理<span style=\"margin: 0px; padding: 0px; line-height: 24.381px;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a href=\"http://www.zscat.top/index\" style=\"margin: 0px; padding: 0px; color: rgb(96, 127, 166); text-decoration: none; line-height: 24.381px;\">http://www.zscat.top/front/blog/index</a>s &nbsp;社区<span style=\"margin: 0px; padding: 0px; line-height: 24.381px;\"></span></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; clear: both; white-space: pre-wrap; font-family: &#39;Helvetica Neue&#39;, Helvetica, &#39;Hiragino Sans GB&#39;, &#39;Microsoft YaHei&#39;, Arial, sans-serif; font-size: medium; line-height: 24.381px; widows: 1;\"><a style=\"margin: 0px; padding: 0px; color: rgb(51, 102, 204); text-decoration: underline; outline: 0px; font-family: tahoma, arial, 宋体, sans-serif; font-size: 14px; line-height: 21px; text-indent: 28px; white-space: normal; widows: auto; background-color: rgb(255, 255, 255);\">http://shop.zscat.top/index.htm 商城</a></p><p><br/></p>,', null, '', null, '1', null, null);

-- ----------------------------
-- Table structure for t_blogger
-- ----------------------------
DROP TABLE IF EXISTS `t_blogger`;
CREATE TABLE `t_blogger` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `userName` varchar(50) DEFAULT NULL,
  `password` varchar(100) DEFAULT NULL,
  `profile` text,
  `nickName` varchar(50) DEFAULT NULL,
  `sign` varchar(100) DEFAULT NULL,
  `imageName` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_blogger
-- ----------------------------
INSERT INTO `t_blogger` VALUES ('1', 'zhuan', '4ea43719b3aaf171beb332da787a47d3', null, '转', null, null);
INSERT INTO `t_blogger` VALUES ('2', 'shen', 'e6449d1935ae1119a02d6d1f83158587', null, '神', null, null);
INSERT INTO `t_blogger` VALUES ('5', '123456', '5f1d7a84db00d2fce00b31a7fc73224f', null, '123456', null, null);

-- ----------------------------
-- Table structure for t_blogtype
-- ----------------------------
DROP TABLE IF EXISTS `t_blogtype`;
CREATE TABLE `t_blogtype` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `typeName` varchar(30) DEFAULT NULL,
  `orderNo` int(11) DEFAULT NULL,
  `create_by` varchar(64) DEFAULT NULL COMMENT '创建者',
  `create_date` datetime DEFAULT NULL COMMENT '创建时间',
  `update_by` varchar(64) DEFAULT NULL COMMENT '更新者',
  `update_date` datetime DEFAULT NULL COMMENT '更新时间',
  `remarks` varchar(255) DEFAULT NULL COMMENT '备注信息',
  `del_flag` char(1) DEFAULT '0' COMMENT '删除标记(0活null 正常 1,删除)',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_blogtype
-- ----------------------------
INSERT INTO `t_blogtype` VALUES ('1', '美团技术', '2', null, null, null, null, null, '0');
INSERT INTO `t_blogtype` VALUES ('2', 'springboot', '1', null, null, null, null, null, '0');
INSERT INTO `t_blogtype` VALUES ('3', 'zscat', '3', null, null, null, null, null, '0');

-- ----------------------------
-- Table structure for t_blog_template
-- ----------------------------
DROP TABLE IF EXISTS `t_blog_template`;
CREATE TABLE `t_blog_template` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(200) DEFAULT NULL COMMENT '标题',
  `summary` text COMMENT '摘要',
  `releaseDate` datetime DEFAULT NULL COMMENT '发布时间',
  `clickHit` int(11) DEFAULT NULL,
  `replyHit` int(11) DEFAULT NULL,
  `content` longtext,
  `keyWord` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=122 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_blog_template
-- ----------------------------
INSERT INTO `t_blog_template` VALUES ('118', '女生博客模板', '女生博客模板', '2016-10-28 10:47:50', '0', '0', '<p>女生博客模板</p><p><img src=\"/pig/static/ueditor/jsp/upload1/20161028/36981477622865805.jpg\" title=\"04.jpg\"/></p>,', 'front/blog/indexns');
INSERT INTO `t_blog_template` VALUES ('119', '个人博客', '', '2016-10-28 11:02:13', '0', '0', '<p><img src=\"/pig/static/ueditor/jsp/upload1/20161028/361477623729685.png\" title=\"QQ图片20161028110015.png\"/></p>,', 'front/blog/indexone');
INSERT INTO `t_blog_template` VALUES ('120', '草根博客', '', '2016-10-28 11:02:58', '0', '0', '<p><img src=\"/pig/static/ueditor/jsp/upload1/20161028/48901477623774727.png\" title=\"QQ图片20161028110044.png\"/></p>,', 'front/blog/indexc');
INSERT INTO `t_blog_template` VALUES ('121', 'java1234', '', '2016-10-28 11:05:32', '0', '0', '<p><img src=\"/pig/static/ueditor/jsp/upload1/20161028/61671477623928764.png\" title=\"QQ图片20161028110509.png\"/></p>,', 'front/blog/index');

-- ----------------------------
-- Table structure for t_comment
-- ----------------------------
DROP TABLE IF EXISTS `t_comment`;
CREATE TABLE `t_comment` (
  `id` bigint(11) NOT NULL AUTO_INCREMENT,
  `userIp` varchar(50) DEFAULT NULL,
  `blogId` int(11) DEFAULT NULL,
  `content` varchar(1000) DEFAULT NULL,
  `commentDate` datetime DEFAULT NULL,
  `state` int(11) DEFAULT NULL,
  `blogger_id` bigint(20) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `blogger` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_comment
-- ----------------------------
INSERT INTO `t_comment` VALUES ('1', '111', '85', '鬼才知道这些鬼东西', '2016-11-01 12:49:39', '1', '3', 'Storm 的可靠性保证测试', null);
INSERT INTO `t_comment` VALUES ('2', null, '86', 'http://localhost:8081/pig/front/blog/shequDetail/85  测试', '2016-11-03 13:15:22', null, '4', '分布式会话跟踪系统架构设计与实践', null);
INSERT INTO `t_comment` VALUES ('3', '0:0:0:0:0:0:0:1', '122', '我来回得zacat3', '2016-11-03 13:56:10', null, '3', 'zscat3', '转');
INSERT INTO `t_comment` VALUES ('4', '0:0:0:0:0:0:0:1', '118', '123456', '2017-04-10 20:05:57', null, null, 'zscat11111', null);

-- ----------------------------
-- Table structure for t_link
-- ----------------------------
DROP TABLE IF EXISTS `t_link`;
CREATE TABLE `t_link` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `linkName` varchar(100) DEFAULT NULL,
  `linkUrl` varchar(200) DEFAULT NULL,
  `orderNo` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of t_link
-- ----------------------------
INSERT INTO `t_link` VALUES ('1', 'zscat官网', 'http://blog.csdn.net/a1439226817/article/details/68483563', '1');
INSERT INTO `t_link` VALUES ('2', 'zscat商城', 'http://blog.csdn.net/a1439226817/article/details/64121666', '2');
INSERT INTO `t_link` VALUES ('3', 'zscat内容管理系统', 'https://shop150554856.taobao.com/?spm=2013.1.1000126.d21.yzAhaP', '3');
INSERT INTO `t_link` VALUES ('4', 'zscat后台', 'http://zscat.top/', '4');
INSERT INTO `t_link` VALUES ('5', 'dangdang', 'http://blog.csdn.net/a1439226817/article/details/64437915', '5');
INSERT INTO `t_link` VALUES ('6', 'zscat店铺', 'https://shop150554856.taobao.com/?spm=2013.1.1000126.d21.yzAhaP', '6');
